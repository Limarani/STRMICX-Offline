using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Text;
using System.IO;
using System.Net;
using MySql.Data.MySqlClient;
using System.Net.Mail;
using System.Text.RegularExpressions;
using System.Globalization;
using iTextSharp.text;
using iTextSharp.text.pdf;
using iTextSharp.text.pdf.parser;
using Ionic.Zip;
using System.Collections.Generic;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Data.SqlClient;
using System.Linq;

public partial class Pages_ProductionNew : System.Web.UI.Page
{
    GlobalClass gl = new GlobalClass();
    myConnection con = new myConnection();
    DataSet ds = new DataSet();
    DateTime dt = new DateTime();
    MySqlParameter[] mparam;
    string strdate = "", statename = "", countyname = "";
    List<string> filelist = new List<string>();
    List<string> downloadFile = new List<string>();
    string pdfpath = "";
    int noattempt = 0;
    int jattempt = 0;
    int dbatt = 0;
    int attempts = 1;
    int attemptcount = 0;

    #region PageLoad
    protected void Page_Load(object sender, EventArgs e)
    {

        if (SessionHandler.UserName == "") Response.Redirect("Loginpage.aspx");
        strdate = gl.setdate();
        Lblusername.Text = "Welcome " + SessionHandler.UserName + " ..";
        //  Lbltime.Text = DateTime.Now.ToLongDateString();
        Panelprocesstime.Visible = false;

        if (!Page.IsPostBack)
        {
            //loadgridtax();
            break_mis();
            Session["TimePro"] = DateTime.Now;
            string id = Request.QueryString["id"];
            Defaultcontrol();
            if (id == "12f7tre5") Allotment(sender, e);
            else ManualAllotment(id, sender, e);
            Session["order"] = Lblorderno.Text.Trim();

            loadgridtax();
            if (lblserpro.Text == "Tax Cert Update")
            {
                ddlstatus.Items[1].Enabled = false;
            }
            taxjurisdiction();
            DivCAstate.Visible = false;
            ScrapDiv.Visible = false;
            CheckAlert();
            //STRMICX Dropdownlist
            MySqlConnection con = new MySqlConnection(ConfigurationManager.ConnectionStrings["MysqlConnection"].ConnectionString);
            using (MySqlCommand cmd = new MySqlCommand("SELECT TaxType FROM Mas_Taxtype Order by TaxType"))
            {
                cmd.CommandType = CommandType.Text;
                cmd.Connection = con;
                con.Open();
                txtstrTaxType.DataSource = cmd.ExecuteReader();
                txtstrTaxType.DataTextField = "TaxType";
                txtstrTaxType.DataValueField = "TaxType";
                txtstrTaxType.DataBind();
                //txtstrTaxType.Items.Insert(0, "");
                con.Close();
            }
            //txtstrTaxType.Items.Insert(int.Parse("Select Tax Type").ToString(), new System.Web.UI.WebControls.ListItem("Select Tax Type", "0"));
            //txtstrTaxType.SelectedIndex = txtstrTaxType.Items.IndexOf(txtstrTaxType.Items.FindByText("Select Tax Type"));
            txtstrTaxType.Items.Insert(0, new System.Web.UI.WebControls.ListItem("Select Tax Type", "Select Tax Type"));
            //cleartaxfields();
            //DataTable mdt = new DataTable();
            //mdt.Columns.AddRange(new DataColumn[7] { new DataColumn("DelinquentTaxYear"), new DataColumn("PayoffAmount"), new DataColumn("PayoffGoodThruDate"), new DataColumn("InitialInstallmentDueDate"), new DataColumn("NotApplicable"), new DataColumn("DateofTaxSale"), new DataColumn("LastDayToRedeem") });
            //ViewState["MultiDel"] = mdt;
            //this.BindGrid();
            //DataTable mdt1 = new DataTable();
            //mdt1.Columns.AddRange(new DataColumn[5] { new DataColumn("Description"), new DataColumn("Special Assessment No"), new DataColumn("Number Of Installments"), new DataColumn("Installment Paid"), new DataColumn("Amount") });
            //ViewState["MultiSpecial"] = mdt1;
            //this.BindGridSpecial();
        }
        if (lnkOthers.Text == "UnBreak")
        {
            pagedimmer.Visible = true;
            Other_breakMsgbx.Visible = true;
        }

        else
        {
            pagedimmer.Visible = false;
            Other_breakMsgbx.Visible = false;
        }
        //STRMICX Production
        if (Lblprocessname.Text == "QC")
        {
            accordion3.Visible = true;
            accordion2.Visible = false;
        }

        if (Lblprocessname.Text == "PRODUCTION")
        {
            accordion3.Visible = false;
            accordion2.Visible = true;
        }
        MismatchPopup.Visible = false;
    }

    protected void taxjurisdiction()
    {
        string[] strstate = Lblstate.Text.Split('-');
        string st = strstate[0].ToString();
        ds.Dispose();
        ds.Reset();
        string query = "select taxjurisdictions, miscellaneous from tax_jurisdiction where state='" + st + "'";
        ds = con.ExecuteQuery(query);

        if (ds.Tables[0].Rows.Count > 0)
        {
            txttaxajuri.Text = ds.Tables[0].Rows[0]["taxjurisdictions"].ToString() + ' ' + ds.Tables[0].Rows[0]["miscellaneous"].ToString();
        }
    }

    public void Loaderrorcategory()
    {
        ds.Dispose();
        ds.Reset();
        string strerror = ddlerror.SelectedItem.Text;
        string query = "select Error_Category from error_details_new where Error='" + strerror + "' Group by Error_Category";
        ds = con.ExecuteQuery(query);
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddlerrorcat.DataSource = ds;
            ddlerrorcat.DataTextField = "Error_Category";
            ddlerrorcat.DataBind();
            ddlerrorcat.Items.Insert(0, "");
        }
        ddlerrorarea.Items.Clear();
        ddlerrortype.Items.Clear();
        ddlcombined.Items.Clear();
    }

    public void gettitleflexdata()
    {
        DataSet ds1 = new DataSet();
        DataSet ds2 = new DataSet();
        ds = gl.GetAddress(Lblorderno.Text.Trim());
        if (ds.Tables[0].Rows.Count > 0)
        {
            string address = "";
            if (Session["titleflexAddress"] != null)
            {
                address = Session["titleflexAddress"].ToString();
            }
            //string address = ds.Tables[0].Rows[0]["address"].ToString();

            string scrape = ds.Tables[0].Rows[0]["scrape"].ToString();
            address = address.Replace("\r\n", " ").Replace("\t", "");
            if (scrape != "1")
            {
                divtitle.Visible = true;
                //string query = "delete from titleflex where orderno ='" + Lblorderno.Text + "'";
                //con.ExecuteSPNonQuery(query);
                DataSet dschk = gl.Gettitleflexdata1(Lblorderno.Text);
                if (dschk.Tables[0].Rows.Count == 0)
                {
                    gl.titleflex_details(Lblorderno.Text, "", address, "", myVariables.County, myVariables.State);
                }
                ds1 = gl.Gettitleflexdata1(Lblorderno.Text);
                if (ds1.Tables[0].Rows.Count > 0)
                {
                    GridView4.DataSource = ds1;
                    GridView4.DataBind();
                    ds2 = gl.Gettitleflexdata2(Lblorderno.Text);
                    if (ds2.Tables[0].Rows.Count > 0)
                    {
                        GridView5.DataSource = ds2;
                        GridView5.DataBind();
                    }
                }
                else
                {
                    lblStatus.Text = "No Record Found...";
                }
            }
        }
    }
    public void getscrapeddata()
    {
        DataView dv = new DataView();
        DataList dl = new DataList();
        DataTable dt = new DataTable();
        DataSet ds1 = new DataSet();
        ds = gl.GetCountyId(myVariables.State, myVariables.County);
        if (ds.Tables[0].Rows.Count > 0)
        {
            string addresstype = ds.Tables[0].Rows[0]["Address_Type"].ToString();
            string countyID = ds.Tables[0].Rows[0]["State_County_Id"].ToString();
            statename = ds.Tables[0].Rows[0]["state_name"].ToString();
            countyname = ds.Tables[0].Rows[0]["county_name"].ToString();

            if (addresstype == "0")
            {
                scrapgrd.Visible = false;
                //divtitle.Visible = false;
                return;
            }
            //checkscrape_status
            if (myVariables.scrape_status != "2")
            {
                scrapgrd.Visible = false;
            }
            //washoe
            if (countyID == "23")
            {

                dv = gl.getassprop_washoeNV(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id asc limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id asc limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //river
            else if (countyID == "19")
            {
                dv = gl.getassprop_river(Lblorderno.Text);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id ");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //pierce
            else if (countyID == "20")
            {
                dv = gl.getassprop_pierce(Lblorderno.Text);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id asc limit 5");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id asc limit 2");
                GridView2.DataSource = dt;
                GridView2.DataBind();

            }
            //gwinnet
            else if (countyID == "22")
            {
                dv = gl.getassprop_gwinett(Lblorderno.Text);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //deklab
            else if (countyID == "29")
            {
                dv = gl.getassprop_dekalb(Lblorderno.Text);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView3.DataSource = dt;
                GridView3.DataBind();
            }
            //mecklenburg
            else if (countyID == "30")
            {
                dv = gl.getassprop_mecklenburg(Lblorderno.Text);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();


                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id asc limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "'  order by dvm.id asc limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //   franklin
            else if (countyID == "31")
            {
                dv = gl.getassprop_franklin(Lblorderno.Text);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id desc limit 2");
                GridView1.DataSource = dt;
                GridView1.DataBind();

            }
            //Dist of columbia
            else if (countyID == "32")
            {
                dv = gl.getassprop_doc(Lblorderno.Text);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id ");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id asc limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Saint louis
            else if (countyID == "33")
            {
                dv = gl.getassprop_louis(Lblorderno.Text);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id asc limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //kern
            else if (countyID == "34")
            {
                dv = gl.getassprop_kern(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "'  order by dvm.id asc limit 6");
                GridView1.DataSource = dt;
                GridView1.DataBind();

            }
            //multnomah
            else if (countyID == "40")
            {
                dv = gl.getassprop_multnomah(Lblorderno.Text);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "'order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //san joaquin
            else if (countyID == "36")
            {
                dv = gl.getassprop_sanjoaquin(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();

            }

            //bernalillo
            else if (countyID == "54")
            {
                dv = gl.getassprop_bernalillo(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 15 and DVM.Order_No = '" + Lblorderno.Text + "' order by DVM.id desc limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "'  order by DVM.id desc limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();

            }

            //sanfrancisco
            else if (countyID == "35")
            {
                dv = gl.getassprop_sanfrancisco(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id desc limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id desc limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //fresno
            else if (countyID == "37")
            {
                dv = gl.getassprop_fresno(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //harrison
            else if (countyID == "41")
            {
                dv = gl.getassprop_harrison(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();


                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //stcharles
            else if (countyID == "55")
            {
                dv = gl.getassprop_stcharles(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();


                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();

            }

            //tulsa
            else if (countyID == "57")
            {
                dv = gl.getassprop_tulsa(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //utah
            else if (countyID == "58")
            {
                dv = gl.getassprop_utah(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();


                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //summit
            else if (countyID == "60")
            {
                dv = gl.getassprop_summit(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //hennepin
            else if (countyID == "49")
            {
                dv = gl.getassprop_hennepin(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 5");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //new castle
            else if (countyID == "59")
            {
                dv = gl.getassprop_newcastle(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by DVM.id desc  limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 15 and DVM.Order_No = '" + Lblorderno.Text + "' order by DVM.id desc limit 2");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //pinal
            else if (countyID == "61")
            {
                dv = gl.getassprop_pinal(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //marion
            else if (countyID == "76")
            {
                dv = gl.getassprop_marion(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();

                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //placer
            else if (countyID == "56")
            {
                dv = gl.getassprop_placer(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id ");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //shelby
            else if (countyID == "74")
            {
                dv = gl.getassprop_shelby(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
            }

            //clackamas
            else if (countyID == "73")
            {
                dv = gl.getassprop_clackamas(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //east baton rouge
            else if (countyID == "78")
            {
                dv = gl.getassprop_eastbatonrouge(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
            }

            //baltimore
            else if (countyID == "72")
            {
                dv = gl.getassprop_baltimorecity(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
            }
            //polk
            else if (countyID == "63")
            {
                dv = gl.getassprop_polk(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
            }
            //charleston
            else if (countyID == "82")
            {
                dv = gl.getassprop_charleston(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView1.DataSource = dt;
                GridView1.DataBind();
            }
            //Jefferson
            else if (countyID == "93")
            {
                dv = gl.getassprop_Jefferson(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //MD Charles

            else if (countyID == "135")
            {
                dv = gl.getassprop_CharlesMD(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 3");
                GridView2.DataSource = dt;
                GridView2.DataBind();

            }
            //Douglas

            else if (countyID == "83")
            {
                dv = gl.getassprop_Douglas(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 3");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Anoka
            else if (countyID == "100")
            {
                dv = gl.getassprop_Anoka(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Stark
            else if (countyID == "101")
            {
                dv = gl.getassprop_Stark(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id ");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Cherokee

            else if (countyID == "103")
            {
                dv = gl.getassprop_Cherokee(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id ");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Hillsborough

            else if (countyID == "2")
            {
                dv = gl.getassprop_Hillsborough(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //denver

            else if (countyID == "8")
            {
                dv = gl.getassprop_Denver(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //sedgwick KS

            else if (countyID == "106")
            {
                dv = gl.getassprop_SedgwickKS(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 4");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Harford

            else if (countyID == "114")
            {
                dv = gl.getassprop_Harford(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Yolo
            else if (countyID == "152")
            {
                dv = gl.getassprop_Yolo(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 10");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //clayton
            else if (countyID == "141")
            {
                dv = gl.getassprop_Clayton(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id desc limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Berkeley
            else if (countyID == "128")
            {
                dv = gl.getassprop_Berkeley(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();

            }

            //Newton
            else if (countyID == "158")
            {
                dv = gl.getassprop_Newton(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();

            }
            //Dakota

            else if (countyID == "132")
            {
                dv = gl.getassprop_Dakota(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id desc limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();

            }
            //ARWashington
            else if (countyID == "149")
            {
                dv = gl.getassprop_Washington(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //AZMaricopa
            else if (countyID == "13")
            {
                dv = gl.getassprop_Maricopa(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //CAContracosta
            else if (countyID == "11")
            {
                dv = gl.getassprop_Contracosta(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 5");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id desc limit 2");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //CASacromento
            else if (countyID == "10")
            {
                dv = gl.getassprop_Sacromento(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 6");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 13 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 5");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //santabarabara
            else if (countyID == "88")
            {
                dv = gl.getassprop_santabarabara(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1,1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 2");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //duval
            else if (countyID == "4")
            {
                dv = gl.getassprop_duval(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //broward
            else if (countyID == "3")
            {
                dv = gl.getassprop_broward(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Orange
            else if (countyID == "7")
            {
                dv = gl.getassprop_orange(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //osceola
            else if (countyID == "151")
            {
                dv = gl.getassprop_osceola(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //FLPolk
            else if (countyID == "129")
            {
                dv = gl.getassprop_FLpolk(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Sarasota
            else if (countyID == "96")
            {
                dv = gl.getassprop_sarasota(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "'  order by dvm.id desc limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //ILwill
            else if (countyID == "115")
            {
                dv = gl.getassprop_ILwill(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 3");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //MDCarroll
            else if (countyID == "153")
            {
                dv = gl.getassprop_MDCarroll(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //OHHamilton
            else if (countyID == "94")
            {
                dv = gl.getassprop_OHHamilton(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 2");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //okClevland
            else if (countyID == "119")
            {
                dv = gl.getassprop_okClevland(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //CAsanlouispo
            else if (countyID == "125")
            {
                dv = gl.getassprop_Sanlouispo(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 3");
                GridView1.DataSource = dt;
                GridView1.DataBind();

            }

            //Larmine
            else if (countyID == "140")
            {
                dv = gl.getassprop_Larmine(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 3");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Eldorado
            else if (countyID == "95")
            {
                dv = gl.getassprop_Eldorado(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 2");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //CAMonterery
            else if (countyID == "86")
            {
                dv = gl.getassprop_CAMonterery(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 3");
                GridView1.DataSource = dt;
                GridView1.DataBind();

            }
            //Miamedade
            else if (countyID == "6")
            {
                dv = gl.getassprop_Miamedade(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 15 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //clark
            else if (countyID == "1")
            {
                dv = gl.getassprop_clark(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //hamilton
            else if (countyID == "139")
            {
                dv = gl.getassprop_hamilton(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }





            //palm beach
            else if (countyID == "5")
            {
                dv = gl.getassprop_palmbeach(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //FLsaintlucie
            else if (countyID == "112")
            {
                dv = gl.getassprop_stlucie(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //madison
            else if (countyID == "116")
            {

                dv = gl.getassprop_madison(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //alameda.
            else if (countyID == "9")
            {
                dv = gl.getassprop_alameda(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id ");
                GridView1.DataSource = dt;
                GridView1.DataBind();

            }
            //collier
            else if (countyID == "138")
            {
                dv = gl.getassprop_collier(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();

            }
            //manatee(multiparcel).working in local...not tested
            else if (countyID == "122")
            {
                dv = gl.getassprop_manatee(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 15 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //pasco 
            else if (countyID == "99")
            {
                dv = gl.getassprop_pasco(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //volusia
            else if (countyID == "80")
            {
                dv = gl.getassprop_volusia(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }


            //deschutes....local...not tested
            else if (countyID == "98")
            {
                dv = gl.getassprop_deschutes(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 2");
                GridView1.DataSource = dt;
                GridView1.DataBind();
            }

            // San Bernardino
            else if (countyID == "17")
            {
                dv = gl.getassprop_sanbernardino(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //CA Orange
            else if (countyID == "16")
            {
                dv = gl.getassprop_CAOrange(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 2");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 2");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Santa Clara
            else if (countyID == "15")
            {
                dv = gl.getassprop_Santaclara(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 2");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //WA King
            else if (countyID == "18")
            {
                dv = gl.getassprop_WAKing(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }



            //NC Forsyth
            else if (countyID == "185")
            {
                dv = gl.getassprop_NCForsyth(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //KS Johnson
            else if (countyID == "108")
            {
                dv = gl.getassprop_KSJohnson(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //NC Guilford
            else if (countyID == "159")
            {
                dv = gl.getassprop_NCGuilford(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //SC Spartanburg
            else if (countyID == "111")
            {
                dv = gl.getassprop_SCSpartanburg(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //WV Berkeley
            else if (countyID == "173")
            {
                dv = gl.getassprop_WVBerkeley(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id desc limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //NE Sarpy
            else if (countyID == "160")
            {
                dv = gl.getassprop_NESarpy(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //AR Saline
            else if (countyID == "174")
            {
                dv = gl.getassprop_ARSaline(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //SC Dorchester
            else if (countyID == "165")
            {
                dv = gl.getassprop_SCDorchester(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //NY Kings
            else if (countyID == "164")
            {
                dv = gl.getassprop_NYKings(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //OH Medina
            else if (countyID == "186")
            {
                dv = gl.getassprop_OHMedina(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 2");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 2");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //CA Shasta
            else if (countyID == "192")
            {
                dv = gl.getassprop_CAShasta(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //CO Larier
            else if (countyID == "62")
            {
                dv = gl.getassprop_COLarimer(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Mo Jefferson
            else if (countyID == "190")
            {
                dv = gl.getassprop_MOJefferson(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Dona Ana
            else if (countyID == "176")
            {
                dv = gl.getassprop_DonaAnaNM(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //charlotte
            else if (countyID == "178")
            {
                dv = gl.getassprop_CharlotteFL(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Calcasieu
            else if (countyID == "181")
            {
                dv = gl.getassprop_Calcasieu(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Fayette
            else if (countyID == "189")
            {
                dv = gl.getassprop_fayetteFL(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 13 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Marion FL
            else if (countyID == "193")
            {
                dv = gl.getassprop_MarionFL(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //GA Hall
            else if (countyID == "204")
            {
                dv = gl.getassprop_HallGA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //coweta
            else if (countyID == "166")
            {
                dv = gl.getassprop_CowetaGA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Williamston
            else if (countyID == "38")
            {
                dv = gl.getassprop_WilliamstonTX(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Knox TX
            else if (countyID == "196")
            {
                dv = gl.getassprop_KnoxTN(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Stafford
            else if (countyID == "197")
            {
                dv = gl.getassprop_StaffordVA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //St John
            else if (countyID == "175")
            {
                dv = gl.getassprop_StJohnsFL(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Kootenai
            else if (countyID == "200")
            {
                dv = gl.getassprop_KootenaiID(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 13 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Lubbock
            else if (countyID == "154")
            {
                dv = gl.getassprop_LubbockTX(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Hidalgo
            else if (countyID == "85")
            {
                dv = gl.getassprop_HidalgoTX(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            // TN Hamilton
            else if (countyID == "208")
            {
                dv = gl.getassprop_HamiltonTN(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }


            //TX Nueces
            else if (countyID == "142")
            {
                dv = gl.getassprop_NuecesTX(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            // WV Kanawha
            else if (countyID == "201")
            {
                dv = gl.getassprop_KanawhaWV(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id desc limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            // CO Boulder
            else if (countyID == "207")
            {
                dv = gl.getassprop_BoulderCO(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id desc limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            // WA Cowlitz
            else if (countyID == "206")
            {
                dv = gl.getassprop_CowlitzWA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            // GA Fayette
            else if (countyID == "211")
            {
                dv = gl.getassprop_FayettaGA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            // MO St Louis City
            else if (countyID == "212")
            {
                dv = gl.getassprop_STlouiscityMO(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
            }

            // Bell TX
            else if (countyID == "137")
            {
                dv = gl.getassprop_BellTX(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 7 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            // OH Delaware
            else if (countyID == "205")
            {
                dv = gl.getassprop_DelawareOH(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            // TX Ellis
            else if (countyID == "161")
            {
                dv = gl.getassprop_EllisTX(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            // OH  Mahoning
            else if (countyID == "214")
            {
                dv = gl.getassprop_MahoningOH(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //  CO Araphoe
            else if (countyID == "48")
            {
                dv = gl.getassprop_AraphoeCO(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            // SC Anderson
            else if (countyID == "195")
            {
                dv = gl.getassprop_AndersonSC(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            // DE Sussex
            else if (countyID == "199")
            {
                dv = gl.getassprop_SussexDE(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }


            //GA Paulding
            else if (countyID == "146")
            {
                dv = gl.getassprop_Paulding(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            // NM Sandoval
            else if (countyID == "191")
            {
                dv = gl.getassprop_SandovalNM(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            // ID Ada
            else if (countyID == "43")
            {
                dv = gl.getassprop_AdaID(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                //dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                //GridView2.DataSource = dt;
                //GridView2.DataBind();
            }

            // WA Kitsap
            else if (countyID == "143")
            {
                dv = gl.getassprop_KitsapWA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            // WA Spokane
            else if (countyID == "64")
            {
                dv = gl.getassprop_SpokaneWA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            // AL Shelby
            else if (countyID == "198")
            {
                dv = gl.getassprop_ShelbyAL(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            // CA San Diego
            else if (countyID == "14")
            {
                //dv = gl.getassprop_SandiegoCA(Lblorderno.Text, countyID);
                //DetailsView1.DataSource = dv;
                //DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 1 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //TX El Paso
            else if (countyID == "52")
            {
                dv = gl.getassprop_ElPasoTX(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //TX Galveston
            else if (countyID == "81")
            {
                dv = gl.getassprop_GalvestonTX(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            // Al Jefferson
            else if (countyID == "124")
            {
                dv = gl.getassprop_JeffersonAL(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Montgomery Oh
            else if (countyID == "127")
            {
                dv = gl.getassprop_MontgomeryOh(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Jefferson Ky
            else if (countyID == "109")
            {
                // dv = gl.getassprop_JeffersonKy(Lblorderno.Text, countyID);
                // DetailsView1.DataSource = dv;
                // DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //MontgomeryAL
            else if (countyID == "177")
            {
                dv = gl.getassprop_MontgomeryAL(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //TX Fort Bend
            else if (countyID == "182")
            {
                dv = gl.getassprop_FortBendTX(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }


            //NC Buncombe
            else if (countyID == "157")
            {
                dv = gl.getassprop_BuncombeNC(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            // TX Guadalupe
            else if (countyID == "162")
            {
                dv = gl.getassprop_GuadalupeTX(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            // CA Merced
            else if (countyID == "163")
            {
                dv = gl.getassprop_MercedCA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            // OR Yamhill
            else if (countyID == "156")
            {
                dv = gl.getassprop_YamhillOR(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();

            }

            // CA Ventura
            else if (countyID == "226")
            {
                dv = gl.getassprop_VenturaCA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //CA Santa Cruz
            else if (countyID == "92")
            {
                dv = gl.getassprop_SantaCruz(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            // TX Travis
            else if (countyID == "184")
            {
                dv = gl.getassprop_TravisTX(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 7 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            // TX Brazoria
            else if (countyID == "77")
            {
                dv = gl.getassprop_BrazoriaTX(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //  TX Comal
            else if (countyID == "180")
            {
                dv = gl.getassprop_ComalTX(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Mohave AZ
            else if (countyID == "117")
            {
                dv = gl.getassprop_MohaveAZ(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 10 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //CA Marin
            else if (countyID == "113")
            {
                dv = gl.getassprop_MarinCA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //OH Lorain
            else if (countyID == "133")
            {
                dv = gl.getassprop_LorainOH(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //CA Stanislaus
            else if (countyID == "236")
            {
                dv = gl.getassprop_StanislausCA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 2 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //CA sonoma
            else if (countyID == "251")
            {
                dv = gl.getassprop_SonomaCA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //CA Nevada
            else if (countyID == "406")
            {
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //CA Imperial
            else if (countyID == "414")
            {
                dv = gl.getassprop_ImperialCA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //CA Madera
            else if (countyID == "381")
            {
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 2 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //CA Napa 
            else if (countyID == "400")
            {
                dv = gl.getassprop_NapaCA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //CA Solano
            else if (countyID == "240")
            {
                dv = gl.getassprop_SolanoCA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Yavapavi AZ
            else if (countyID == "102")
            {
                dv = gl.getassprop_YavapaiAZ(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 8 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            else if (countyID == "188")
            {
                dv = gl.getassprop_TXMcLennan(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //AB Team Integration
            //adams
            else if (countyID == "69")
            {
                dv = gl.getassprop_adams(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Anne arundel
            else if (countyID == "44")
            {
                dv = gl.getassprop_annearundel(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 3");
                GridView1.DataSource = dt;
                GridView1.DataBind();
            }

            //Baldwin
            else if (countyID == "167")
            {
                dv = gl.getassprop_baldwin(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 9 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //beaufort
            else if (countyID == "148")
            {
                dv = gl.getassprop_beaufort(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //benton
            else if (countyID == "84")
            {
                dv = gl.getassprop_benton(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Brevard
            else if (countyID == "65")
            {
                dv = gl.getassprop_brevard(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Cobb
            else if (countyID == "27")
            {
                dv = gl.getassprop_cobb(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Cuyahoga
            else if (countyID == "26")
            {
                dv = gl.getassprop_Cuyahoga(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //DeSoto
            else if (countyID == "144")
            {
                dv = gl.getassprop_DeSoto(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Douglas
            else if (countyID == "145")
            {
                dv = gl.getassprop_DouglasN(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Elpaso CO
            else if (countyID == "66")
            {
                dv = gl.getassprop_Elpasco(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }


            //Forsyth
            else if (countyID == "126")
            {
                dv = gl.getassprop_Forsyth(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //frederick
            else if (countyID == "107")
            {
                dv = gl.getassprop_frederick(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id desc limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 6 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id desc limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Hawai
            else if (countyID == "104")
            {
                dv = gl.getassprop_Hawai(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Henry
            else if (countyID == "87")
            {
                dv = gl.getassprop_Henry(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Honolulu
            else if (countyID == "47")
            {
                dv = gl.getassprop_Honolulu(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Horry
            else if (countyID == "70")
            {
                dv = gl.getassprop_Horry(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Jackson 
            else if (countyID == "45")
            {
                dv = gl.getassprop_Jackson(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //kane
            else if (countyID == "168")
            {
                dv = gl.getassprop_kane(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //LakeIL
            else if (countyID == "169")
            {
                dv = gl.getassprop_LakeIL(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //LakeIn
            else if (countyID == "136")
            {
                dv = gl.getassprop_LakeIn(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Lake OH
            else if (countyID == "118")
            {
                dv = gl.getassprop_LakeOH(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Lee - FL
            else if (countyID == "46")
            {
                dv = gl.getassprop_LeeFL(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Lexington
            else if (countyID == "134")
            {
                dv = gl.getassprop_Lexington(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
            }
            //Lucas
            else if (countyID == "131")
            {
                dv = gl.getassprop_Lucas(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Maui
            else if (countyID == "147")
            {
                dv = gl.getassprop_Maui(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //McHenry
            else if (countyID == "172")
            {
                dv = gl.getassprop_McHenry(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Mobile AL
            else if (countyID == "105")
            {
                dv = gl.getassprop_MobileAL(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Montgomery MD
            else if (countyID == "25")
            {
                dv = gl.getassprop_Montgomery(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Paulding
            else if (countyID == "146")
            {
                dv = gl.getassprop_Paulding(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Pima AZ
            else if (countyID == "24")
            {
                dv = gl.getassprop_PimaAZ(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Pinellas - FL
            else if (countyID == "50")
            {
                dv = gl.getassprop_PinellasFL(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Richland SC
            else if (countyID == "90")
            {
                dv = gl.getassprop_RichlandSC(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //seminole
            else if (countyID == "110")
            {
                dv = gl.getassprop_seminole(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Snohomish - WA
            else if (countyID == "28")
            {
                dv = gl.getassprop_SnohomishWA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloud("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Thurston
            else if (countyID == "91")
            {
                dv = gl.getassprop_Thurston(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Washington
            else if (countyID == "170")
            {
                dv = gl.getassprop_WashingtonNew(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Wed CO
            else if (countyID == "89")
            {
                dv = gl.getassprop_WedCO(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //York SC
            else if (countyID == "71")
            {
                dv = gl.getassprop_YorkSC(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Davidson TN
            else if (countyID == "79")
            {
                dv = gl.getassprop_DavidsonTN(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //DuPage IL
            else if (countyID == "75")
            {
                dv = gl.getassprop_DuPageIL(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Weber UT
            else if (countyID == "209")
            {
                dv = gl.getassprop_WeberUT(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Wake NC
            else if (countyID == "51")
            {
                dv = gl.getassprop_WakeNC(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //  Butler OH
            else if (countyID == "194")
            {
                dv = gl.getassprop_ButlerOH(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Douglas NV
            else if (countyID == "171")
            {
                dv = gl.getassprop_DouglasNV(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Jefferson CO
            else if (countyID == "67")
            {
                dv = gl.getassprop_JeffersonCO(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //LakeFL
            else if (countyID == "121")
            {
                dv = gl.getassprop_LakeFL(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //NE Lancaster
            else if (countyID == "130")
            {
                dv = gl.getassprop_LancasterNE(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 4 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Queens NY
            else if (countyID == "150")
            {
                dv = gl.getassprop_QueensNY(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }
            //Loudoun VA
            else if (countyID == "215")
            {
                dv = gl.getassprop_LoudounVA(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 3 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView2.DataSource = dt;
                GridView2.DataBind();
            }

            //Oklahoma OK
            else if (countyID == "53")
            {
                dv = gl.getassprop_OklahomaOK(Lblorderno.Text, countyID);
                DetailsView1.DataSource = dv;
                DetailsView1.DataBind();
                dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 13 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                GridView1.DataSource = dt;
                GridView1.DataBind();
                //dt = gl.readdatafromcloudAB("select order_no, parcel_no, DVM.Data_Field_Text_Id, DVM.Data_Field_value from data_value_master DVM join data_field_master DFM on DFM.ID = DVM.Data_Field_Text_Id join state_county_master SCM on SCM.ID = DFM.State_County_ID and SCM.State_County_Id = '" + countyID + "' where DFM.Category_Id = 5 and DVM.Order_No = '" + Lblorderno.Text + "' order by dvm.id limit 1");
                //GridView2.DataSource = dt;
                //GridView2.DataBind();
            }



            //AB Team End

            try
            {

                string ownername = DetailsView1.Rows[1].Cells[1].Text;
                if (ownername.Contains("&amp;"))
                {
                    ownername = ownername.Replace("&amp;", "&");
                    // ownername = Regex.Replace(ownername, @"(\s|&amp;)", "");

                }


                txtBorrower.Text = ownername;
                if (ownername == "&nbsp;")
                {
                    txtBorrower.Text = "";
                }
            }
            catch
            { }




        }
        else
        {
            scrapgrd.Visible = false;

        }
    }

    private List<String> DirSearch(string sDir)
    {
        //List<String> files = new List<String>();
        try
        {
            foreach (string f in Directory.GetFiles(sDir))
            {
                filelist.Add(f);
            }
            foreach (string d in Directory.GetDirectories(sDir))
            {
                filelist.AddRange(DirSearch(d));
            }
        }
        catch (System.Exception excpt)
        {
            //MessageBox.Show(excpt.Message);
        }

        return filelist;
    }
    public void Loaderrorarea()
    {
        ds.Dispose();
        ds.Reset();
        string strerrcat = ddlerrorcat.SelectedItem.Text;
        if (strerrcat == "") return;
        string query = "select Error_Area from error_details_new where Error_Category='" + strerrcat + "' group by Error_Area";
        ds = con.ExecuteQuery(query);
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddlerrorarea.DataSource = ds;
            ddlerrorarea.DataTextField = "Error_Area";
            ddlerrorarea.DataBind();
            ddlerrorarea.Items.Insert(0, "");
        }
        ddlerrortype.Items.Clear();
        ddlcombined.Items.Clear();
    }

    public void Loaderrortype()
    {
        ds.Dispose();
        ds.Reset();
        string strerrcat = ddlerrorcat.SelectedItem.Text;
        string strerrarea = ddlerrorarea.SelectedItem.Text;
        if (strerrcat == "" && strerrcat == "") return;
        string query = "select Error_Type from error_details_new where Error_Category='" + strerrcat + "' and Error_Area='" + strerrarea + "'";
        ds = con.ExecuteQuery(query);
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddlerrortype.DataSource = ds;
            ddlerrortype.DataTextField = "Error_Type";
            ddlerrortype.DataBind();
            ddlerrortype.Items.Insert(0, "");
        }
        ddlcombined.Items.Clear();
    }

    public void Loadcombined()
    {
        ds.Dispose();
        ds.Reset();
        string strerrcat = ddlerrorcat.SelectedItem.Text;
        string strerrarea = ddlerrorarea.SelectedItem.Text;
        string strerrtype = ddlerrortype.SelectedItem.Text;
        if (strerrcat == "" && strerrcat == "" && strerrtype == "") return;
        string query = "select Error_Combined from error_details_new where Error_Category='" + strerrcat + "' and Error_Area='" + strerrarea + "' and Error_Type='" + strerrtype + "'";
        ds = con.ExecuteQuery(query);
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddlcombined.DataSource = ds;
            ddlcombined.DataTextField = "Error_Combined";
            ddlcombined.DataBind();
            ddlcombined.Items.Insert(0, "");
        }
    }

    public void LoadProductionComments(string strstatus)
    {
        ds.Dispose();
        ds.Reset();
        string query = "select Status_Comment from status_comments where Status='" + strstatus + "'";
        ds = con.ExecuteQuery(query);
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddlprdcomments.DataSource = ds;
            ddlprdcomments.DataTextField = "Status_Comment";
            ddlprdcomments.DataBind();
            ddlprdcomments.Items.Insert(0, "");
        }
    }
    #endregion

    #region TogglePanel
    private void TogglePanel(Panel sPanel)
    {
        PanelOrderallotment.Visible = false;
        PanelStatus.Visible = false;

        sPanel.Visible = true;
    }
    private void TogglePanel1(Panel sPanel)
    {
        PanelCompleted.Visible = false;
        PanelInproHold.Visible = false;
        PanelMailaway.Visible = false;
        PanelParcelID.Visible = false;
        PanelRejected.Visible = false;
        sPanel.Visible = true;
    }
    private void Defaultcontrol()
    {
        PanelQc.Visible = false;
        btnMovecall.Visible = false;
        btnrequest.Visible = false;
        Lnkcomments.Visible = false;
        Btnmoveqc.Visible = false;

        Lnkcomments.Attributes.Add("onclick", "window.open('MailAwayComments.aspx'); return false;");
        btngetcomments.Attributes.Add("onclick", "window.open('GeneralComments.aspx'); return false;");
        pagedimmer.Visible = false;
        ReportPanel.Visible = false;
        statecomments.Visible = false;
        getcomments.Visible = false;
        LogoutReason.Visible = false;
        ParcelInformation.Visible = false;
        Taxinfomail.Visible = false;
        DivEmail.Visible = false;
        DivTaxEmail.Visible = false;
        DelayReason.Visible = false;
        LogoutText();

        //New
        divpopup.Visible = false;
        divPrclFormat.Visible = false;
        //New
    }
    private void LogoutText()
    {
        if (Lblorderno.Text == "")
        { LogoutBtn.Text = "Back"; }
        else LogoutBtn.Text = "Logout";
    }
    private void Clearfields()
    {
        txtfollowupdate.Text = "";
        txtzipcode.Text = "";
        txtcmdhistory.Text = "";
        txtentitycount.Text = "";
        txtTreasphone.Text = "";
        txtTreasurer.Text = "";
        txtassessor.Text = "";
        txtassphone.Text = "";
        Lblprocessname.Text = "";
        Lblorderno.Text = "";
        Lbldate.Text = "";
        Lblstate.Text = "";
        txtqcerrorcmts.Text = "";
        txtgetcomments.Text = "";
        txtcommentshistory.Text = "";
        txtstatecomments.Text = "";
        lblprdcomments.Text = "";
        lblordertype.Text = "";
        ddlemailtype.SelectedIndex = 0;
        txtcountyname.Text = "";
        Lblcouny.Text = "";
        txtordertype.Text = "";
        txtBorrower.Text = "";
        txttownship.Text = "";
        ddlstatus.Text = "";
        txtaddcomments.Text = "";
        ddlerror.SelectedIndex = 0;
        ddlprdcomments.SelectedIndex = 0;
        txtexcomments.Text = "";
        lblserpro.Text = "";

        txtParcelFormat.Text = "";
        txtimprovements.Text = "";
        txtFireDistricttax.Text = "";
        txtDelinquenttax.Text = "";
        txtSupplementalbills.Text = "";
        txtExemption.Text = "";
        txtInstallmentDate.Text = "";
        txtNextBilldate.Text = "";
        txtTaxAuthority.Text = "";
        txtNoofparcelconfirmation.Text = "";
        txtPaymentstatus.Text = "";


        lblqcerrorcmts.Visible = false;
        txtqcerrorcmts.Visible = false;
        txtexcomments.Visible = false;
        chkclientcmt.Visible = false;
        chkclientcmt.Checked = false;
        chksavelink.Checked = false;
        chktranstype1.Checked = false;
        chktranstype2.Checked = false;
        chktranstype3.Checked = false;
        chktranstype4.Checked = false;
        chkorderdoc1.Checked = false;
        chkorderdoc2.Checked = false;
        chkorderdoc3.Checked = false;
        ddlmultiple1.SelectedIndex = 0;
        ddlmultiple2.SelectedIndex = 0;
        chkparcelid1.Checked = false;
        chkparcelid2.Checked = false;
        ddlcorrect1.SelectedIndex = 0;
        ddlcorrect2.SelectedIndex = 0;
        ddlfollow1.SelectedIndex = 0;
        ddlfollow2.SelectedIndex = 0;
        chkcomments1.Checked = false;
        chkcomments2.Checked = false;
        chkcomments3.Checked = false;
        chkcomments4.Checked = false;
        ddlfollowupdate1.SelectedIndex = 0;
        ddlfollowupdate2.SelectedIndex = 0;
        ddlfollowupdate3.SelectedIndex = 0;
        ddletadate1.SelectedIndex = 0;
        ddletadate2.SelectedIndex = 0;
        chkreqtype2.Checked = false;
        GridEntity.DataSource = null;
        GridEntity.DataBind();
        lblkeycomplete.Text = "";

        myVariables.Orderno = "";
        myVariables.Date = "";
        myVariables.State = "";
        myVariables.County = "";
        myVariables.WebPhone = "";
        myVariables.TimeZone = "";
        myVariables.Lastcomment = "";
        myVariables.Borrower = "";
        myVariables.Township = "";
        myVariables.KeyStatus = "";
        myVariables.QCStatus = "";
        myVariables.Ordertype = "";
        myVariables.Zipcode = "";
        myVariables.Followupdate = "";
        myVariables.pType = "";
        myVariables.ChecklistComments = "";
        myVariables.EntityComments = "";
        myVariables.KeyStart = "";
        myVariables.DelayStatus = "";
        myVariables.DelayComments = "";


    }
    private string GetTimeZone()
    {
        string tz = "";
        switch (myVariables.TimeZone)
        {
            case "1":
                tz = "EST";
                break;
            case "2":
                tz = "CST";
                break;
            case "3":
                tz = "MST";
                break;
            case "4":
                tz = "PST";
                break;
            case "5":
                tz = "AKST";
                break;
            case "6":
                tz = "HST";
                break;
            default:
                break;
        }
        return tz;
    }
    #endregion

    #region Allotment Types

    #region ManualAllotment
    private void ManualAllotment(string id, object sender, EventArgs e)
    {
        Clearfields();
        ds.Dispose();
        ds.Reset();
        ds = gl.Allotment("ManualAllotment", id);
        DatasetAllotment(ds, sender, e);
    }
    #endregion

    #region AutoAllotment
    private void Allotment(object sender, EventArgs e)
    {
        string locks = gl.get_user_lock(SessionHandler.UserName);
        if (locks == "2")
        {
            TogglePanel(PanelStatus);
            lblinfo.Text = "Your break time exceeded more than one hour. Please contact your admin...! ";
            LogoutText();
            return;
        }
        else
        {
            Clearfields();
            ds.Dispose();
            ds.Reset();
            ds = gl.Allotment("Autoallotment", "");
            DatasetAllotment(ds, sender, e);
        }
    }
    #endregion

    #region FillData
    private void DatasetAllotment(DataSet ds, object sender, EventArgs e)
    {
        if (ds.Tables.Count == 0)
        {
            TogglePanel(PanelStatus);
            lblinfo.Text = "No order allotted for you, Please contact Admin.";
            LogoutText();
            return;
        }
        else if (ds.Tables.Count == 1)
        {
            if (ds.Tables[0].Rows.Count > 0)
            {
                string strresult = Convert.ToString(ds.Tables[0].Rows[0]["Status"]);
                if (strresult == "Order Error")
                {
                    TogglePanel(PanelStatus);
                    lblinfo.Text = "You have an error in one Order. So please accept your error...!";
                    LogoutText();
                    return;
                }
                else if (strresult == "Production Locked")
                {
                    TogglePanel(PanelStatus);
                    lblinfo.Text = "Your break time exceeded more than one hour. So please contact your Team Lead...! ";
                    LogoutText();
                    return;
                }
                else if (strresult == "Check Rights")
                {
                    TogglePanel(PanelStatus);
                    lblinfo.Text = "Please check your Rights...!";
                    LogoutText();
                    return;
                }
            }
        }
        else
        {
            TogglePanel(PanelOrderallotment);
            FillDataset(ds);
            if (PanelOrderallotment.Visible == true) ddlstatus_SelectedIndexChanged(sender, e);
        }
    }

    private void FillDataset(DataSet ds)
    {
        string etypes = "", scount = "";
        #region Table 1
        if (ds.Tables[0].Rows.Count > 0)
        {
            myVariables.pType = Convert.ToString(ds.Tables[0].Rows[0]["pType"]);
            myVariables.Orderno = Convert.ToString(ds.Tables[0].Rows[0]["Order_No"]);
            myVariables.Date = Convert.ToString(ds.Tables[0].Rows[0]["PDate"]);
            myVariables.State = Convert.ToString(ds.Tables[0].Rows[0]["State"]);
            myVariables.County = Convert.ToString(ds.Tables[0].Rows[0]["County"]);
            myVariables.WebPhone = Convert.ToString(ds.Tables[0].Rows[0]["WebPhone"]);
            myVariables.TimeZone = Convert.ToString(ds.Tables[0].Rows[0]["Time_Zone"]);
            myVariables.HP = Convert.ToString(ds.Tables[0].Rows[0]["HP"]);
            myVariables.Prior = Convert.ToString(ds.Tables[0].Rows[0]["Prior"]);
            myVariables.Zipcode = Convert.ToString(ds.Tables[0].Rows[0]["zipcode"]);
            myVariables.serpro = Convert.ToString(ds.Tables[0].Rows[0]["serpro"]);
            myVariables.Followupdate = Convert.ToString(ds.Tables[0].Rows[0]["followupdate"]);
            myVariables.KeyStart = Convert.ToString(ds.Tables[0].Rows[0]["DelayStart"]);
            myVariables.Misc = Convert.ToString(ds.Tables[0].Rows[0]["misc"]);
            myVariables.scrape_status = Convert.ToString(ds.Tables[0].Rows[0]["scrape_status"]);
            //myVariables.Borrower = Convert.ToString(ds.Tables[0].Rows[0]["borrowername"]);
            if (SessionHandler.AuditQA != "1") myVariables.Lastcomment = Convert.ToString(ds.Tables[0].Rows[0]["Comments_Det1"]);
            else myVariables.Lastcomment = Convert.ToString(ds.Tables[0].Rows[0]["Comments_Det"]);

            if (myVariables.pType == "KEY" || myVariables.pType == "PRIORITYKEY" || myVariables.pType == "DU" || myVariables.pType == "PRIORITYDU" || myVariables.pType == "PRIORKEY" || myVariables.pType == "PRIORDU")
            { myVariables.OrderTp = Convert.ToString(ds.Tables[0].Rows[0]["OrderType"]); }


            if (myVariables.pType == "QC")
            {
                myVariables.Borrower = Convert.ToString(ds.Tables[0].Rows[0]["borrowername"]);
                myVariables.Township = Convert.ToString(ds.Tables[0].Rows[0]["Township"]);
                myVariables.KeyStatus = Convert.ToString(ds.Tables[0].Rows[0]["key_status"]);
            }
            else if (myVariables.pType == "INPROCESS" || myVariables.pType == "PARCELID" || myVariables.pType == "ONHOLD" || myVariables.pType == "MAILAWAY" || myVariables.pType == "REVIEW")
            {
                myVariables.Borrower = Convert.ToString(ds.Tables[0].Rows[0]["borrowername"]);
                myVariables.Township = Convert.ToString(ds.Tables[0].Rows[0]["Township"]);
                myVariables.QCStatus = Convert.ToString(ds.Tables[0].Rows[0]["ComStatus"]);
                if (myVariables.QCStatus == "") { myVariables.QCStatus = Convert.ToString(ds.Tables[0].Rows[0]["key_status"]); }
            }

            BindData();
            try
            {
                getscrapeddata();

            }
            catch (Exception ex)
            {
                scrapgrd.Visible = false;
            }
            //try
            //{
            //    gettitleflexdata();

            //}
            //catch
            //{

            //}
            int hp = Convert.ToInt32(lblhp.Text);
            int prior = Convert.ToInt32(lblprior.Text);
        }
        else
        {
            TogglePanel(PanelStatus);
            lblinfo.Text = "No order allotted for you, Please contact Admin.";
            LogoutText();
            return;
        }
        #endregion

        //#region Table 2
        //if (ds.Tables[1].Rows.Count > 0)
        //{
        //    txtassessor.Text = Convert.ToString(ds.Tables[1].Rows[0]["Assessor"]);
        //    txtassphone.Text = Convert.ToString(ds.Tables[1].Rows[0]["Assessor_Phone"]);
        //    txtTreasurer.Text = Convert.ToString(ds.Tables[1].Rows[0]["Treasurer"]);
        //    txtTreasphone.Text = Convert.ToString(ds.Tables[1].Rows[0]["Treasurer_Phone"]);
        //   // txtmisc.Text = Convert.ToString(ds.Tables[1].Rows[0]["misc"]);
        //    btnlinksave.Visible = false;
        //    btnlinkupdate.Visible = true;

        //    string strurl1 = "", strurl2 = "", strurl3 = "";
        //    if (txtassessor.Text != "") strurl1 = "window.open('" + txtassessor.Text.Trim().ToString() + "');";
        //    if (txtTreasurer.Text != "") strurl2 = "window.open('" + txtTreasurer.Text.Trim().ToString() + "');";

        //    string[] strord = Lblorderno.Text.Split('_');
        //    strurl3 = "window.open('https://portal.titlesource.com/vendor/Tax/OrderDetails.aspx?oid=" + strord[0].ToString() + "');";

        //    string strurl = "http://publicrecords.netronline.com/state/" + myVariables.State + "/county/" + Lblcouny.Text.ToLower() + "/";
        //    string javascript = "<script type='text/javascript'>window.open('" + strurl + "');" + strurl1 + "" + strurl2 + "" + strurl3 + "</script>";
        //    this.RegisterStartupScript("", javascript);
        //}
        //else
        //{
        //    // btnlinksave.Visible = true;
        //    btnlinkupdate.Visible = false;
        //}
        //#endregion

        #region Table 3
        ddlstatus.Items.Clear();
        ddlstatus.Items.Add("");
        ddlstatus.AppendDataBoundItems = true;

        if (ds.Tables[2].Rows.Count > 0)
        {
            ddlstatus.DataSource = ds.Tables[2];
            ddlstatus.DataTextField = "statusname";
            ddlstatus.DataBind();
            if (Lblprocessname.Text == "PRODUCTION" || Lblprocessname.Text == "DU") ddlstatus.Items.Insert(7, "Others");
        }
        #endregion

        #region Table 4
        if (Lblprocessname.Text == "QC")
        {
            ddlstatus.SelectedValue = myVariables.KeyStatus;
            PanelQc.Visible = true;
            if (ds.Tables[3].Rows.Count > 0)
            {
                lblkeycomplete.Text = "Remaining Key Completed : " + ds.Tables[3].Rows[0]["Key Completed"].ToString() + "";
                lblkeycomplete.Visible = true;
            }
        }
        else if (Lblprocessname.Text == "INPROCESS" || Lblprocessname.Text == "PARCELID" || Lblprocessname.Text == "ONHOLD" || Lblprocessname.Text == "REVIEW")
        {
            ddlstatus.SelectedValue = myVariables.QCStatus;
        }
        else if (Lblprocessname.Text == "MAILAWAY")
        {
            ddlstatus.SelectedValue = myVariables.QCStatus;
            btnrequest.Visible = true;
            Lnkcomments.Visible = true;
        }
        #endregion

        #region Table 5
        if (ds.Tables[4].Rows.Count > 0)
        {
            txtcommentshistory.Text = Convert.ToString(ds.Tables[4].Rows[0]["State_Comment"]);
        }
        else txtcommentshistory.Text = "";
        if (myVariables.State == "ME" && myVariables.County.ToLower() == "cumberland")
        {
            txtexcomments.Text = "For City of Portland - Need to order Taxcert, charges $25.00.(No Phone or Email or Fax).";
            txtexcomments.Visible = true;
            //chkclientcmt.Visible = true;
        }
        #endregion

        #region Table 6
        if (ds.Tables[5].Rows.Count > 0)
        {
            etypes = ds.Tables[5].Rows[0]["etype"].ToString();
            scount = ds.Tables[5].Rows[0]["ecount"].ToString();
            myVariables.ecount = scount;
            txtexcomments.Visible = true;
            txtexcomments.Text = txtexcomments.Text + System.Environment.NewLine + "EntityType:" + System.Environment.NewLine + etypes.ToString();
        }
        #endregion

        #region Table 7
        if (ds.Tables[6].Rows.Count > 0)
        {
            lblbreak.Text = ds.Tables[6].Rows[0]["Total Time"].ToString();
            if (lblbreak.Text == "") lblbreak.Text = "00:00:00";
        }
        else lblbreak.Text = "00:00:00";
        #endregion

        #region Table 8
        if (ds.Tables[7].Rows.Count > 0)
        {
            ddltaxtype1.DataSource = ds.Tables[7];
            ddltaxtype1.DataTextField = "TaxType";
            ddltaxtype1.DataBind();
            ddltaxtype1.Items.Insert(0, "-----Select Tax Type-----");
        }
        #endregion

        #region Table 9
        if (ds.Tables[8].Rows.Count > 0)
        {
            Gridutilization.DataSource = ds.Tables[8];
            Gridutilization.DataBind();
        }
        else
        {
            Gridutilization.DataSource = null;
            Gridutilization.DataBind();
        }
        #endregion

        #region Table 10
        if (ds.Tables[9].Rows.Count > 0)
        {
            ddldelayreason.DataSource = ds.Tables[9];
            ddldelayreason.DataTextField = "reason";
            ddldelayreason.DataBind();
        }
        #endregion

        #region Table 11
        if (ds.Tables.Count > 10 && (Lblprocessname.Text == "PRODUCTION" || Lblprocessname.Text == "DU" || Lblprocessname.Text == "INPROCESS"))
        {
            if (ds.Tables[10].Rows.Count > 0)
            {
                Gridnextorder.DataSource = ds.Tables[10];
                Gridnextorder.DataBind();
            }
            else
            {
                Gridnextorder.DataSource = null;
                Gridnextorder.DataBind();
            }
        }
        else
        {
            Gridnextorder.DataSource = null;
            Gridnextorder.DataBind();
        }
        #endregion
    }

    private void BindData()
    {
        Btnmoveqc.Visible = false;
        string pType = myVariables.pType;
        if (pType == "KEY") { Lblprocessname.Text = "PRODUCTION"; }
        else if (pType == "QC") { Lblprocessname.Text = "QC"; }
        else if (pType == "DU") { Lblprocessname.Text = "DU"; Btnmoveqc.Visible = true; }
        else if (pType == "MAILAWAY") { Lblprocessname.Text = "MAILAWAY"; }
        else if (pType == "INPROCESS") { Lblprocessname.Text = "INPROCESS"; Btnmoveqc.Visible = true; }
        else if (pType == "PARCELID") { Lblprocessname.Text = "PARCELID"; }
        else if (pType == "ONHOLD") { Lblprocessname.Text = "ONHOLD"; }
        else if (pType == "REVIEW") { Lblprocessname.Text = "REVIEW"; }
        else if (pType == "PRIORITYKEY" || pType == "PRIORKEY") { Lblprocessname.Text = "PRODUCTION"; }
        else if (pType == "PRIORITYDU" || pType == "PRIORDU") { Lblprocessname.Text = "DU"; }
        string timezone = GetTimeZone();

        Lblorderno.Text = myVariables.Orderno;
        Lbldate.Text = myVariables.Date;
        Lblstate.Text = myVariables.State + " - " + timezone;

        if (myVariables.State == "FL") LnkbtnFLcalc.Visible = true;
        else LnkbtnFLcalc.Visible = false;

        txtcmdhistory.Text = myVariables.Lastcomment;
        Lblcouny.Text = myVariables.County;
        lblserpro.Text = myVariables.serpro;
        lblhp.Text = myVariables.HP;
        lblprior.Text = myVariables.Prior;
        txtzipcode.Text = myVariables.Zipcode;
        txtBorrower.Text = myVariables.Borrower;
        txttownship.Text = myVariables.Township;
        if (myVariables.WebPhone == "") txtordertype.Text = "";
        else if (myVariables.WebPhone.ToLower() == "website") txtordertype.Text = "W";
        else if (myVariables.WebPhone.ToLower() == "phone") txtordertype.Text = "P";
        else if (myVariables.WebPhone.ToLower() == "mailaway") txtordertype.Text = "M";
        //else txtordertype.Text = myVariables.WebPhone;

        if (Lblprocessname.Text == "PRODUCTION" || Lblprocessname.Text == "DU")
        {
            Panelprocesstime.Visible = true;
            lblordertype.Text = myVariables.OrderTp;
            if (lblordertype.Text == "Website")
            {
                Timer1.Interval = 300000;
                lblprocesstime.BackColor = System.Drawing.Color.Green;
                Timer1.Enabled = true;
            }
            else if (lblordertype.Text == "Phone")
            {
                Timer1.Interval = 420000;
                lblprocesstime.BackColor = System.Drawing.Color.Green;
                Timer1.Enabled = true;
            }
        }
        else Panelprocesstime.Visible = false;

        //NewTax
        if (Lblprocessname.Text == "QC")
        {
            DataSet dsent = new DataSet();
            dsent.Dispose();
            dsent.Reset();
            string query = "select tax_amount from entity_name where ptype='Production' or ptype='PARCELID' or ptype='INPROCESS' or ptype='MAILAWAY' and order_no= '" + Lblorderno.Text + "'";
            dsent = con.ExecuteQuery(query);

            lblTax.Text = dsent.Tables[0].Rows[0]["tax_amount"].ToString();
        }
        //NewTax
    }
    #endregion

    #endregion

    #region Button Events
    protected void btnsave_Click(object sender, EventArgs e)
    {
        if (Lblprocessname.Text == "PRODUCTION")
        {
            if (gvtaxdetails.Rows.Count == 0)
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Add One Item in Production Section')", true);
                return;
            }
        }
        if (checkValidate())
        {
            if (txtmisc.Text == "")
            {
                Lblerror.Text = "Enter MISC...";
                return;
            }
            if (Lblstate.Text == "CA - ")
            {
                pagedimmer.Visible = true;
                DivCAstate.Visible = true;
            }

            ChecklistReport();
            if (ddlstatus.SelectedItem.Text == "Completed") SaveEntities();
            ds.Dispose();
            ds.Reset();
            if (Lblprocessname.Text == "PRODUCTION") ds = UpdateProduction("sp_UpdateKey_User");
            else if (Lblprocessname.Text == "DU") ds = UpdateProduction("sp_UpdateDU_User");
            else if (Lblprocessname.Text == "QC" || Lblprocessname.Text == "INPROCESS" || Lblprocessname.Text == "PARCELID" || Lblprocessname.Text == "ONHOLD" || Lblprocessname.Text == "MAILAWAY")
            { ds = UpdateProduction("sp_UpdateQC_User"); }
            else if (Lblprocessname.Text == "REVIEW") { ds = UpdateProduction("sp_UpdateReview_New"); }

            if (ds != null)
            {
                Session["TimePro"] = DateTime.Now;
                Clearfields();
                DatasetAllotment(ds, sender, e);
                gvtaxdetails.Visible = false;
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Data Saved Successfully')", true);
                return;
            }
        }
    }

    private void SaveEntities()
    {
        string entity = "";
        string tax = "";
        string paystatus = "";
        string payfreq = "";
        int i = 0;
        foreach (GridViewRow rowvalues in GridEntity.Rows)
        {
            DropDownList ddlPayFreq = (DropDownList)rowvalues.FindControl("ddlPymntFrqncy");
            if (i == 0) payfreq = ddlPayFreq.SelectedItem.Text;
            else payfreq = payfreq + "," + ddlPayFreq.SelectedItem.Text;

            GridView gvNest = (GridView)rowvalues.FindControl("gvNested");
            foreach (GridViewRow row in gvNest.Rows)
            {
                //TextBox txtentitytype = (TextBox)row.FindControl("txtentitytype");
                //if (i == 0) entity = txtentitytype.Text;
                //else entity = entity + "," + txtentitytype.Text;

                TextBox txtTaxAmnt = (TextBox)row.FindControl("txtTaxAmnt");
                if (i == 0) tax = txtTaxAmnt.Text.Trim().Replace("$", "");
                else tax = tax + "," + txtTaxAmnt.Text.Trim().Replace("$", "");

                //New
                Double value;
                if (Double.TryParse(tax, out value))
                    tax = String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C2}", value);
                else
                    tax = String.Empty;
                //New

                DropDownList ddlPaySts = (DropDownList)row.FindControl("ddlPymntSts");
                if (i == 0) paystatus = ddlPaySts.SelectedItem.Text;
                else paystatus = paystatus + "," + ddlPaySts.SelectedItem.Text;
            }
            i += 1;
        }
        //int result = gl.SaveEntities(Lblorderno.Text, Lblprocessname.Text, Lbldate.Text, entity, tax, paystatus, payfreq);
        //return result;
        myVariables.EntityComments = entity;
        myVariables.Tax = tax;//xxx
        myVariables.PayStatus = paystatus;//xxx
        myVariables.PayFreq = payfreq;//xxx
    }
    private void ChecklistReport()
    {
        string status = "", transtype = "", order_doc = "", multiple_parcel = "", correct = "", follow = "", tax_year = "", amount = "", tax_status = "";
        string dates = "", tax_billstatus = "", exemption = "", followup_date = "", eta_date = "", comments = "", request_type = "", parcelid = "";
        string multiple_parcel1 = "", multiple_parcel2 = "", correct1 = "", correct2 = "", follow1 = "", follow2 = "", followup_date1 = "", followup_date2 = "";
        string eta_date1 = "";
        string pif = "", impts = "", fdt = "", sp = "", exeps = "", ind = "", ta = "", nopc = "", ps = "";
        status = ddlstatus.SelectedItem.Text;
        if (chktranstype1.Checked == true || chktranstype2.Checked == true || chktranstype3.Checked == true || chktranstype4.Checked == true) { transtype = "CHECKED"; }
        if (chkorderdoc1.Checked == true || chkorderdoc2.Checked == true || chkorderdoc3.Checked == true) { order_doc = "CHECKED"; }
        pif = txtParcelFormat.Text;
        impts = txtimprovements.Text;
        fdt = txtFireDistricttax.Text;
        sp = txtSupplementalbills.Text;
        exeps = txtExemption.Text;
        ind = txtInstallmentDate.Text;
        ta = txtTaxAuthority.Text;
        nopc = txtNoofparcelconfirmation.Text;
        ps = txtParcelFormat.Text;

        multiple_parcel1 = ddlmultiple1.SelectedItem.Text;
        multiple_parcel2 = ddlmultiple2.SelectedItem.Text;
        if (chkparcelid1.Checked == true || chkparcelid2.Checked == true) { parcelid = "CHECKED"; }

        correct1 = ddlcorrect1.SelectedItem.Text;
        correct2 = ddlcorrect2.SelectedItem.Text;

        follow1 = ddlfollow1.SelectedItem.Text;
        follow2 = ddlfollow2.SelectedItem.Text;

        followup_date = ddlfollowupdate1.SelectedItem.Text;
        followup_date1 = ddlfollowupdate2.SelectedItem.Text;
        followup_date2 = ddlfollowupdate3.SelectedItem.Text;
        eta_date = ddletadate1.SelectedItem.Text;
        eta_date1 = ddletadate2.SelectedItem.Text;
        if (chkcomments1.Checked == true || chkcomments2.Checked == true || chkcomments3.Checked == true || chkcomments4.Checked == true) { comments = "CHECKED"; }
        if (chkreqtype2.Checked == true) { request_type = "CHECKED"; }

        string retcomments = "";

        if (status == "Completed")
        {
            //result = gl.Insert_CompletedChecklist(Lblorderno.Text, Lbldate.Text, Lblprocessname.Text, status, transtype, order_doc, multiple_parcel, parcelid, correct, follow, tax_year, amount, tax_status, dates, tax_billstatus, exemption, comments);
            //string[] strarray = { transtype, order_doc, multiple_parcel, parcelid, correct, follow, tax_year, amount, tax_status, dates, tax_billstatus, exemption, comments };
            string[] strarray = { pif, impts, fdt, sp, exeps, ind, ta, nopc, ps };
            for (int i = 0; i < strarray.Length; i++)
            {
                if (i == 0) retcomments = Convert.ToString(strarray[i]);
                else retcomments = retcomments + "," + Convert.ToString(strarray[i]);
            }
        }
        else if (status == "In Process" || status == "On Hold")
        {
            //result = gl.Insert_Inpro_HoldChecklist(Lblorderno.Text, Lbldate.Text, Lblprocessname.Text, status, transtype, order_doc, multiple_parcel1, parcelid, correct1, follow1, followup_date, eta_date, comments);
            string[] strarray = { transtype, order_doc, multiple_parcel1, parcelid, correct1, follow1, followup_date, eta_date, comments };
            for (int i = 0; i < strarray.Length; i++)
            {
                if (i == 0) retcomments = Convert.ToString(strarray[i]);
                else retcomments = retcomments + "," + Convert.ToString(strarray[i]);
            }
        }
        else if (status == "Mail Away")
        {
            //result = gl.Insert_MailawayChecklist(Lblorderno.Text, Lbldate.Text, Lblprocessname.Text, status, transtype, order_doc, multiple_parcel2, parcelid, correct2, follow2, followup_date1, eta_date1, request_type, comments);
            string[] strarray = { transtype, order_doc, multiple_parcel2, parcelid, correct2, follow2, followup_date1, eta_date1, request_type, comments };
            for (int i = 0; i < strarray.Length; i++)
            {
                if (i == 0) retcomments = Convert.ToString(strarray[i]);
                else retcomments = retcomments + "," + Convert.ToString(strarray[i]);
            }
        }
        else if (status == "ParcelID")
        {
            //result = gl.Insert_ParcelidChecklist(Lblorderno.Text, Lbldate.Text, Lblprocessname.Text, status, transtype, order_doc, followup_date2, comments);
            string[] strarray = { transtype, order_doc, followup_date2, comments };
            for (int i = 0; i < strarray.Length; i++)
            {
                if (i == 0) retcomments = Convert.ToString(strarray[i]);
                else retcomments = retcomments + "," + Convert.ToString(strarray[i]);
            }
        }
        else if (status == "Rejected")
        {
            //result = gl.Insert_RejectedChecklist(Lblorderno.Text, Lbldate.Text, Lblprocessname.Text, status, transtype, comments);
            string[] strarray = { transtype, comments };
            for (int i = 0; i < strarray.Length; i++)
            {
                if (i == 0) retcomments = Convert.ToString(strarray[i]);
                else retcomments = retcomments + "," + Convert.ToString(strarray[i]);
            }
        }
        myVariables.ChecklistComments = retcomments;
    }
    private DataSet UpdateProduction(string Procedurename)
    {
        string township = Titlecase(txttownship.Text);
        string borrower = Titlecase(txtBorrower.Text);
        DateTime dat = DateTime.Now;
        //dat = dat.AddHours(-7);
        string date1 = String.Format("{0:MM/dd/yyyy HH:mm:ss}", dat);
        string commen = date1 + SessionHandler.UserName + ":";
        string com_det = date1 + ":";
        string ist, ist1 = "";
        ist = System.Environment.NewLine + commen + ddlprdcomments.SelectedItem.Text;
        ist1 = System.Environment.NewLine + com_det + ddlprdcomments.SelectedItem.Text;
        string oStatus = ddlstatus.SelectedItem.Text;
        string ordertype = txtordertype.Text.ToUpper();

        if (ordertype.ToUpper() == "W") ordertype = "Website";
        else if (ordertype.ToUpper() == "P") ordertype = "Phone";
        else if (ordertype.ToUpper() == "M") ordertype = "Mailaway";


        string error = "", errorcategory = "", errorfield = "", correct = "", incorrect = "", qcerrorcomment = "";

        if (Lblprocessname.Text != "PRODUCTION" && Lblprocessname.Text != "DU")
        {
            if (ddlstatus.Text == "Completed")
            {
                error = ddlerror.SelectedItem.Text;
                if (error == "") { Lblerror.Text = "Please Select all Error fields"; return null; }
                errorcategory = ddlerrorcat.SelectedItem.Text;
                if (errorcategory == "") { Lblerror.Text = "Please Select all Error fields"; return null; }
                errorfield = ddlerrorarea.SelectedItem.Text;
                if (errorfield == "") { Lblerror.Text = "Please Select all Error fields"; return null; }
                incorrect = ddlerrortype.SelectedItem.Text;
                if (incorrect == "") { Lblerror.Text = "Please Select all Error fields"; return null; }
                correct = ddlcombined.SelectedItem.Text;
                if (correct == "") { Lblerror.Text = "Please Select all Error fields"; return null; }
            }

        }
        string followupdate = null;
        if (txtfollowupdate.Text != "")
        {
            DateTime datime = Convert.ToDateTime(txtfollowupdate.Text);
            followupdate = String.Format("{0:yyyy-MM-dd HH:mm:ss}", datime);
        }

        return gl.UpdateOrdersNew(Procedurename, Lblorderno.Text, township, borrower, ist, Lbldate.Text, oStatus, ordertype, error, errorfield, correct, incorrect, Lblprocessname.Text, ist1, txtqcerrorcmts.Text, errorcategory, txtentitycount.Text.Trim(), txtzipcode.Text, followupdate, txtmisc.Text);
    }
    private string Titlecase(string txt)
    {
        txt = txt.ToLower();
        return System.Globalization.CultureInfo.CurrentUICulture.TextInfo.ToTitleCase(txt);
    }
    private bool checkValidate()
    {
        Lblerror.Text = "";
        bool result = true;
        if (txtordertype.Text == "") { Lblerror.Text = Lblerror.Text + "</Br>" + "OrderType is Blank."; result = false; }

        if (ddlstatus.SelectedItem.Text != "Order Missing")
        {
            if (txtBorrower.Text == "") { Lblerror.Text = Lblerror.Text + "</Br>" + "Borrowername is Empty."; result = false; }
            if (txttownship.Text == "") { Lblerror.Text = Lblerror.Text + "</Br>" + "Township is Empty."; result = false; }
            if (txtzipcode.Text == "") { Lblerror.Text = Lblerror.Text + "</Br>" + "Zipcode is Empty."; result = false; }
        }
        if (ddlstatus.SelectedIndex == 0) { Lblerror.Text = Lblerror.Text + "</Br>" + "Please Select the status."; result = false; }

        if (myVariables.State == "ME" && myVariables.County.ToLower() == "cumberland")
        {

        }

        if (ddlstatus.SelectedItem.Text == "Completed" && Lblprocessname.Text == "PRODUCTION")
        {
            if (txtParcelFormat.Text == "" || txtimprovements.Text == "" || txtFireDistricttax.Text == "" || txtDelinquenttax.Text == "" || txtSupplementalbills.Text == "" || txtExemption.Text == "" || txtInstallmentDate.Text == "" || txtNextBilldate.Text == "" || txtTaxAuthority.Text == "" || txtNoofparcelconfirmation.Text == "" || txtPaymentstatus.Text == "")
            {
                Lblerror.Text = Lblerror.Text + "</Br>" + "Fill all the missing checklists...";
                result = false;
            }
            if ((txtParcelFormat.Text.ToUpper() != "Y" && txtParcelFormat.Text.ToUpper() != " N") || (txtimprovements.Text.ToUpper() != "Y" && txtimprovements.Text.ToUpper() != "N") || (txtFireDistricttax.Text.ToUpper() != "Y" && txtFireDistricttax.Text.ToUpper() != "N") || (txtDelinquenttax.Text.ToUpper() != "Y" && txtDelinquenttax.Text.ToUpper() != "N") || (txtSupplementalbills.Text.ToUpper() != "Y" && txtSupplementalbills.Text.ToUpper() != "N") || (txtExemption.Text.ToUpper() != "Y" && txtExemption.Text.ToUpper() != "N") || (txtInstallmentDate.Text.ToUpper() != "Y" && txtInstallmentDate.Text.ToUpper() != "N") || (txtNextBilldate.Text.ToUpper() != "Y" && txtNextBilldate.Text.ToUpper() != "N") || (txtTaxAuthority.Text.ToUpper() != "Y" && txtTaxAuthority.Text.ToUpper() != "N") || (txtNoofparcelconfirmation.Text.ToUpper() != "Y" && txtNoofparcelconfirmation.Text.ToUpper() != "N") || (txtPaymentstatus.Text.ToUpper() != "Y" && txtPaymentstatus.Text.ToUpper() != "N"))
            {
                Lblerror.Text = Lblerror.Text + "</Br>" + "Only accept 'Y' or 'N'...";
                result = false;
            }
        }
        if ((ddlstatus.SelectedItem.Text == "In Process" || ddlstatus.SelectedItem.Text == "On Hold") && (Lblprocessname.Text == "PRODUCTION" || Lblprocessname.Text == "DU" || Lblprocessname.Text == "QC" || Lblprocessname.Text == "REVIEW"))
        {
            if (chktranstype1.Checked == false || chkorderdoc1.Checked == false || ddlmultiple1.SelectedIndex == 0 || chkparcelid1.Checked == false || ddlcorrect1.SelectedIndex == 0 || ddlfollow1.SelectedIndex == 0 || ddlfollowupdate1.SelectedIndex == 0 || ddletadate1.SelectedIndex == 0 || chkcomments1.Checked == false)
            {
                Lblerror.Text = Lblerror.Text + "</Br>" + "Check the missed CheckList";
                result = false;
            }
        }
        if (ddlstatus.SelectedItem.Text == "Mail Away" && (Lblprocessname.Text == "PRODUCTION" || Lblprocessname.Text == "DU" || Lblprocessname.Text == "QC" || Lblprocessname.Text == "REVIEW"))
        {
            if (chktranstype2.Checked == false || chkorderdoc2.Checked == false || ddlmultiple2.SelectedIndex == 0 || chkparcelid2.Checked == false || ddlcorrect2.SelectedIndex == 0 || ddlfollow2.SelectedIndex == 0 || ddlfollowupdate2.SelectedIndex == 0 || ddletadate2.SelectedIndex == 0 || chkreqtype2.Checked == false || chkcomments2.Checked == false)
            {
                Lblerror.Text = Lblerror.Text + "</Br>" + "Check the missed CheckList";
                result = false;
            }
        }
        if (ddlstatus.SelectedItem.Text == "ParcelID" && (Lblprocessname.Text == "PRODUCTION" || Lblprocessname.Text == "DU" || Lblprocessname.Text == "QC" || Lblprocessname.Text == "REVIEW"))
        {
            if (chktranstype3.Checked == false || chkorderdoc3.Checked == false || ddlfollowupdate3.SelectedIndex == 0 || chkcomments3.Checked == false)
            {
                Lblerror.Text = Lblerror.Text + "</Br>" + "Check the missed CheckList";
                result = false;
            }
        }
        if (ddlstatus.SelectedItem.Text == "Rejected")
        {
            if (chktranstype4.Checked == false || chkcomments4.Checked == false)
            {
                Lblerror.Text = Lblerror.Text + "</Br>" + "Check the missed CheckList";
                result = false;
            }
        }
        if ((Lblprocessname.Text == "INPROCESS" || Lblprocessname.Text == "MAILAWAY" || Lblprocessname.Text == "PARCELID" || Lblprocessname.Text == "ONHOLD") && txtfollowupdate.Text == "" && ddlstatus.SelectedItem.Text != "Completed")
        {
            Lblerror.Text = Lblerror.Text + "</Br>" + "Please enter Followp date.";
            result = false;
        }
        //if ((txtentitycount.Text == "" || txtentitycount.Text == null || txtentitycount.Text == "0" || txtentitycount.Text == "00") && ddlstatus.SelectedItem.Text == "Completed")
        //{
        //    Lblerror.Text = Lblerror.Text + "</Br>" + "Please enter entity count.";
        //    result = false;
        //}

        if (ddlstatus.SelectedItem.Text == "Completed")
        {
            int gridcount = 0;
            foreach (GridViewRow rowvalues in GridEntity.Rows)
            {
                DropDownList ddlfreq = (DropDownList)rowvalues.FindControl("ddlPymntFrqncy");
                if (ddlfreq.Text == "")
                {
                    Lblerror.Text = Lblerror.Text + "</Br>" + "Please select Payment Frequency...!";
                    result = false;
                }

                //GridView gvNest = (GridView)rowvalues.FindControl("gvNested");
                //foreach (GridViewRow row in gvNest.Rows)
                //{
                //    TextBox entity_type = (TextBox)row.FindControl("txtentitytype");
                //    string entity = entity_type.Text.ToLower();
                //    if (entity.Contains(Lblcouny.Text.ToLower()) == true) break;
                //    else if (entity.Contains(txttownship.Text.ToLower()) == true) break;
                //    else
                //    {
                //        gridcount = gridcount + 1;
                //        if (gridcount == gvNest.Rows.Count)
                //        {
                //            Lblerror.Text = Lblerror.Text + "</Br>" + "Please check Entity Type...!";
                //            result = false;
                //        }
                //    }
                //}
            }

            foreach (GridViewRow rowvalues in GridEntity.Rows)
            {
                GridView gvNest = (GridView)rowvalues.FindControl("gvNested");
                foreach (GridViewRow row in gvNest.Rows)
                {
                    string tax_Amnt = "";
                    TextBox taxAmnt = (TextBox)row.FindControl("txtTaxAmnt");
                    tax_Amnt = taxAmnt.Text;

                    if (tax_Amnt == "" || tax_Amnt == "$0.00" || tax_Amnt == "0" || tax_Amnt == "0.00" || tax_Amnt == "0.0" || tax_Amnt == "00")
                    {
                        Lblerror.Text = Lblerror.Text + "</Br>" + "Please fill the Tax Amount";
                        result = false;
                        Panel1.Visible = true;
                    }
                    else
                    {
                        taxAmnt.Text.ToString();
                    }
                }
            }
        }

        if (myVariables.DelayStatus == "")
        {
            string stime = myVariables.KeyStart;
            string etime = DateTime.Now.ToString();
            if (stime != "")
            {
                DateTime startTime = DateTime.Parse(stime);
                DateTime endTime = DateTime.Parse(etime);
                TimeSpan ts = endTime.Subtract(startTime);
                string time = ts.ToString();
                time = time.Replace(".", "");
                int TAT = int.Parse(time.Replace(":", ""));
                if (lblordertype.Text.ToLower() == "website")
                {
                    if (TAT > 000700)
                    {
                        myVariables.DelayStatus = "Delay";
                        pagedimmer.Visible = true;
                        DelayReason.Visible = true;
                        result = false;
                    }
                    else myVariables.DelayStatus = "No Delay";
                }
                else if (lblordertype.Text.ToLower() == "phone")
                {
                    if (TAT > 001000)
                    {
                        myVariables.DelayStatus = "Delay";
                        pagedimmer.Visible = true;
                        DelayReason.Visible = true;
                        result = false;
                    }
                    else myVariables.DelayStatus = "No Delay";
                }
            }
        }

        if (btnlinksave.Visible == true && chksavelink.Checked == false) { Lblerror.Text = Lblerror.Text + "</Br>" + "Please Save Assessor and Treasurer website Link"; result = false; }

        if (ddlprdcomments.Text == "") { Lblerror.Text = Lblerror.Text + "</Br>" + "Comments field is Empty."; result = false; }

        return result;
    }
    protected void btnMovecall_Click(object sender, EventArgs e)
    {
        if (checkValidate())
        {
            string township = Titlecase(txttownship.Text);
            string borrower = Titlecase(txtBorrower.Text);
            DateTime dat = DateTime.Now;
            string date1 = String.Format("{0:MM/dd/yyyy HH:mm:ss}", dat);
            string commen = date1 + SessionHandler.UserName + ":";
            string com_det = date1 + ":";
            string ist, ist1 = "";
            ist = System.Environment.NewLine + commen + ddlprdcomments.SelectedItem.Text;
            ist1 = System.Environment.NewLine + com_det + ddlprdcomments.SelectedItem.Text;
            string oStatus = ddlstatus.SelectedItem.Text;
            string oType = txtordertype.Text;
            if (oType.ToUpper() == "W") oType = "Website";
            else if (oType.ToUpper() == "P") oType = "Phone";
            else if (oType.ToUpper() == "M") oType = "Mailaway";
            int result = gl.MoveToCall("sp_MovetoCall", Lblorderno.Text, township, borrower, ist, Lbldate.Text, oStatus, oType, ist1, txtzipcode.Text, txtentitycount.Text, Lblprocessname.Text);
            RRedirect();
        }
    }
    private void RRedirect()
    {
        if (SessionHandler.IsAdmin == true) Response.Redirect("Home.aspx");
        else if (SessionHandler.IsAdmin == false) Response.Redirect("NonAdminHome.aspx");
    }
    protected void LogoutBtn_Click(object sender, EventArgs e)
    {
        if (LogoutBtn.Text == "Back")
        {
            if (SessionHandler.IsAdmin == true) Response.Redirect("Home.aspx");
            else if (SessionHandler.IsAdmin == false) Response.Redirect("NonAdminHome.aspx");
        }
        else
        {
            ds.Dispose();
            ds.Reset();
            ds = gl.LoadLogoutReason();
            if (ds.Tables[0].Rows.Count > 0)
            {
                ddllogout.DataSource = ds;
                ddllogout.DataTextField = "Logout_Type";
                ddllogout.DataBind();
                ddllogout.Items.Insert(0, "");
            }
            if (ds.Tables[1].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[1].Rows.Count; i++)
                {
                    string strrev = Convert.ToString(ds.Tables[1].Rows[i]["Break_Reason"]);
                    if (strrev != "Meeting" && strrev != "Training") ddllogout.Items.Remove(strrev);
                }
            }

            pagedimmer.Visible = true;
            LogoutReason.Visible = true;
            //ddllogout.SelectedIndex = 0;
            txtlogreason.Text = "";
            txtlogreason.Visible = true;
        }
    }
    protected void ddlerror_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddlerror.SelectedIndex == 0)
        {
            ddlerrorcat.Items.Clear();
            ddlerrorarea.Items.Clear();
            ddlerrortype.Items.Clear();
            ddlcombined.Items.Clear();
        }
        else if (ddlerror.SelectedIndex == 2)
        {
            Loaderrorcategory();
            lblqcerrorcmts.Visible = true;
            txtqcerrorcmts.Visible = true;
        }
        else
        {
            Loaderrorcategory();
            ddlerrorcat.SelectedIndex = 1;
            Loaderrorarea();
            ddlerrorarea.SelectedIndex = 1;
            Loaderrortype();
            ddlerrortype.SelectedIndex = 1;
            Loadcombined();
            ddlcombined.SelectedIndex = 1;

            lblqcerrorcmts.Visible = false;
            txtqcerrorcmts.Visible = false;
        }
    }
    protected void ddlstatus_SelectedIndexChanged(object sender, EventArgs e)
    {
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
        ChecklistVisible();
        lblprdcomments.Text = "";
        string strddlstatus = string.Empty;
        btnrequest.Visible = false;
        Lnkcomments.Visible = false;
        strddlstatus = ddlstatus.SelectedItem.Text;
        LoadProductionComments(strddlstatus);
        if (Lblprocessname.Text != "PRODUCTION" && Lblprocessname.Text != "DU")
        {
            if (strddlstatus == "Completed") { PanelQc.Visible = true; }
            else PanelQc.Visible = false;
        }
        if (strddlstatus == "Order Missing") ddlprdcomments.SelectedIndex = 1;
        if (strddlstatus == "Completed" && Lblprocessname.Text == "PRODUCTION") { TogglePanel1(PanelCompleted); txtordertype.Text = ""; }
        else if ((strddlstatus == "In Process" || strddlstatus == "On Hold") && (Lblprocessname.Text == "PRODUCTION" || Lblprocessname.Text == "DU" || Lblprocessname.Text == "QC" || Lblprocessname.Text == "REVIEW")) { TogglePanel1(PanelInproHold); }
        else if (strddlstatus == "Mail Away" && (Lblprocessname.Text == "PRODUCTION" || Lblprocessname.Text == "DU" || Lblprocessname.Text == "QC" || Lblprocessname.Text == "REVIEW")) { TogglePanel1(PanelMailaway); }
        else if (strddlstatus == "ParcelID" && (Lblprocessname.Text == "PRODUCTION" || Lblprocessname.Text == "DU" || Lblprocessname.Text == "QC" || Lblprocessname.Text == "REVIEW")) { TogglePanel1(PanelParcelID); }
        else if (strddlstatus == "Rejected") { TogglePanel1(PanelRejected); }
        if (ddlstatus.SelectedItem.Text == "Mail Away")
        {
            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
            Clearpanel();
            pagedimmer.Visible = true;
            ReportPanel.Visible = true;
            ddlrequesttype.SelectedIndex = 0;
            btnrequest.Visible = true;
            Lnkcomments.Visible = true;
            btnaddcomments.Visible = true;
            txtaddcomments.Visible = true;
            txtbrrname.Text = txtBorrower.Text;
        }
        else
        {
            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
            ReportPanel.Visible = false;
            btnaddcomments.Visible = false;
            txtaddcomments.Visible = false;
        }
        if (strddlstatus == "In Process" || strddlstatus == "Rejected" || strddlstatus == "On Hold" || strddlstatus == "Others" || strddlstatus == "ParcelID")
        {
            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
            btnaddcomments.Visible = true;
            txtaddcomments.Visible = true;
        }
        if (/*strddlstatus == "Completed" &&*/ Lblprocessname.Text == "PRODUCTION")
        {
            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
            btnaddcomments.Visible = true;
            txtaddcomments.Visible = true;
        }
        if (strddlstatus == "In Process")
        {
            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
            lblInprocnt.Visible = true;
            ds.Dispose();
            ds.Reset();
            string query = "select orderno,count(*) as `InProcessAttempts` from tbl_working where orderstaus='In Process' and orderno = '" + Lblorderno.Text + "' group by orderno having count(*) >=3";
            ds = con.ExecuteQuery(query);

            if (ds.Tables[0].Rows.Count > 0)
            {
                lblInprocnt.Text = ds.Tables[0].Rows[0]["InProcessAttempts"].ToString();
            }
            else
            {
                lblInprocnt.Text = "";
            }
        }
        else
        {
            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
            lblInprocnt.Visible = false;
        }
    }

    private void ChecklistVisible()
    {
        PanelCompleted.Visible = false;
        PanelInproHold.Visible = false;
        PanelMailaway.Visible = false;
        PanelParcelID.Visible = false;
        PanelRejected.Visible = false;
    }
    protected void txtordertype_TextChanged(object sender, EventArgs e)
    {
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
        if (txtordertype.Text.ToLower() == "p")
        {
            btnMovecall.Visible = true;
        }
        else btnMovecall.Visible = false;
    }

    protected void Btnmoveqc_Click(object sender, EventArgs e)
    {
        if (checkValidate())
        {
            ChecklistReport();
            ds.Dispose();
            ds.Reset();
            ds = UpdateProduction("sp_UpdateKey_New");
            if (ds != null)
            {
                Session["TimePro"] = DateTime.Now;
                Clearfields();
                DatasetAllotment(ds, sender, e);
            }
        }
    }
    protected void btnsendmail_Click(object sender, EventArgs e)
    {
        try
        {
            string Mailid = "", cc = "", fromid = "";
            string query = "select Toid,Ccid,Fromid from mail";
            string[] ordno = Lblorderno.Text.Split('_');
            mparam = new MySqlParameter[1];
            MySqlDataReader mdr = con.ExecuteSPReader(query, false, mparam);
            if (mdr != null)
            {
                if (mdr.HasRows)
                {
                    if (mdr.Read())
                    {
                        Mailid = mdr.GetString(0);
                        cc = mdr.GetString(1);
                        fromid = mdr.GetString(2);
                    }
                }
                mdr.Close();
            }

            MailMessage mailMsg = new MailMessage();
            mailMsg.From = new MailAddress(fromid);
            mailMsg.To.Add(new MailAddress(Mailid));

            //mailMsg.From = (new MailAddress("m.karthikeyan@stringinformation.com"));
            //mailMsg.To.Add(new MailAddress("m.karthikeyan@stringinformation.com"));
            //mailMsg.CC.Add(new MailAddress("m.karthikeyan@stringinformation.com"));

            string[] emailcc = cc.Split(',');

            foreach (string emails in emailcc)
            {
                if (emails.Trim().Length > 0)
                {
                    mailMsg.CC.Add(new MailAddress(emails));
                }
            }
            if (ddlemailtype.SelectedItem.Text != "--Select Type--")
            {
                if (ddlemailtype.SelectedItem.Text == "County")
                {
                    //mailMsg.Subject = "String/ TSI Taxes - Change in County name - " + ordno[0].ToString();
                    mailMsg.Subject = "Order # " + ordno[0].ToString() + " - Change in County name ";
                }
                else if (ddlemailtype.SelectedItem.Text == "Escrow")
                {
                    //mailMsg.Subject = "String/ TSI Taxes - Escrow Status ֠" + ordno[0].ToString();
                    mailMsg.Subject = "Order # " + ordno[0].ToString() + " - Escrow Status ";
                }
                mailMsg.IsBodyHtml = true;
                mailMsg.Body = "Hi";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "For the Order #" + ordno[0].ToString();
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                if (ddlemailtype.SelectedItem.Text == "County")
                {
                    if (txtcountyname.Text != "")
                    {
                        mailMsg.Body += "Could you please change the county name to " + txtcountyname.Text + "?";
                    }
                    else
                    {
                        Lblerror.Text = "Please Enter County name...";
                        return;
                    }
                }
                else if (ddlemailtype.SelectedItem.Text == "Escrow")
                {
                    mailMsg.Body += "Could you please check the escrow status?";
                }
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                //mailMsg.Body += "Thanks & Regards";
                //mailMsg.Body += "<br/>";
                //mailMsg.Body += "-------------------------------------------------------------------";
                //mailMsg.Body += "<br/>";
                //mailMsg.Body += "Service Delivery Team";
                //mailMsg.Body += "<br/>";
                //mailMsg.Body += "String Real Estate Information Services";
                //mailMsg.Body += "<br/>";
                //mailMsg.Body += "#237 on the Inc 500, #13 among all real estate firms nationwide";
                //mailMsg.Body += "<br/>";
                //mailMsg.Body += "Phone : 202-470-0648 / 49";
                //mailMsg.Body += "<br/>";
                //mailMsg.Body += "www.stringinfo.com";

                FileStream fs = new FileStream(AppDomain.CurrentDomain.BaseDirectory + "/App_themes/Black/images/image010.png", FileMode.Open, FileAccess.Read);
                byte[] b = new byte[fs.Length];
                fs.Read(b, 0, (int)fs.Length);
                fs.Close();

                FileStream fsredLine = new FileStream(AppDomain.CurrentDomain.BaseDirectory + "/App_themes/Black/images/Redline.png", FileMode.Open, FileAccess.Read);
                byte[] bline = new byte[fsredLine.Length];
                fsredLine.Read(bline, 0, (int)fsredLine.Length);
                fsredLine.Close();


                FileStream fsLinked = new FileStream(AppDomain.CurrentDomain.BaseDirectory + "/App_themes/Black/images/ln.gif", FileMode.Open, FileAccess.Read);
                byte[] bLinked = new byte[fsLinked.Length];
                fsLinked.Read(bLinked, 0, (int)fsLinked.Length);
                fsLinked.Close();

                FileStream fsTwiter = new FileStream(AppDomain.CurrentDomain.BaseDirectory + "/App_themes/Black/images/twi.jpg", FileMode.Open, FileAccess.Read);
                byte[] bTwitter = new byte[fsTwiter.Length];
                fsTwiter.Read(bTwitter, 0, (int)fsTwiter.Length);
                fsTwiter.Close();

                mailMsg.Body = "<font color='Blue'>" + mailMsg.Body + "</font>";

                mailMsg.Body += DivEmail.InnerHtml.ToString();

                string body = DivEmail.InnerHtml;

                System.Net.Mail.AlternateView plainTextView = System.Net.Mail.AlternateView.CreateAlternateViewFromString(mailMsg.Body, null, "text/plain");
                System.Net.Mail.AlternateView htmlView = System.Net.Mail.AlternateView.CreateAlternateViewFromString("<html><body>" + mailMsg.Body, null, "text/html");

                System.Net.Mail.LinkedResource imageResource = new System.Net.Mail.LinkedResource(fs.Name);
                imageResource.ContentId = "LOGO";


                System.Net.Mail.LinkedResource imageResourceLine = new System.Net.Mail.LinkedResource(fsredLine.Name);
                imageResourceLine.ContentId = "REDLINE";
                htmlView.LinkedResources.Add(imageResourceLine);


                System.Net.Mail.LinkedResource imageResourceLinked = new System.Net.Mail.LinkedResource(fsLinked.Name);
                imageResourceLinked.ContentId = "LN";
                htmlView.LinkedResources.Add(imageResourceLinked);

                System.Net.Mail.LinkedResource imageResourceTeitter = new System.Net.Mail.LinkedResource(fsTwiter.Name);
                imageResourceTeitter.ContentId = "TWTR";
                htmlView.LinkedResources.Add(imageResourceTeitter);

                htmlView.LinkedResources.Add(imageResource);
                mailMsg.AlternateViews.Add(plainTextView);
                mailMsg.AlternateViews.Add(htmlView);

                mailMsg.Priority = MailPriority.Normal;
                SmtpClient mSmtpClient = new SmtpClient();
                mSmtpClient.Send(mailMsg);
                Lblerror.Text = "Mail Successfully Delivered...";
            }
            else
            {
                Lblerror.Text = "Please Select anyone email type...";
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    protected void btnaddcomments_Click(object sender, EventArgs e)
    {
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
        string query = "";
        int result = 0;
        if (ddlstatus.SelectedItem.Text == "Mail Away")
        {
            query = "Update status_comments set Status_Comment='" + txtaddcomments.Text + "' where Status='Mail Away' and id='25'";
            result = con.ExecuteSPNonQuery(query);
            if (result > 0)
            {
                LoadProductionComments("Mail Away");
                txtaddcomments.Text = "";
            }
        }
        else if (ddlstatus.SelectedItem.Text == "In Process")
        {
            query = "Update status_comments set Status_Comment='" + txtaddcomments.Text + "' where Status='In Process' and id='27'";
            result = con.ExecuteSPNonQuery(query);
            if (result > 0)
            {
                LoadProductionComments("In Process");
                txtaddcomments.Text = "";
            }
        }
        else if (ddlstatus.SelectedItem.Text == "ParcelID")
        {
            query = "Update status_comments set Status_Comment='" + txtaddcomments.Text + "' where Status='ParcelID' and id='36'";
            result = con.ExecuteSPNonQuery(query);
            if (result > 0)
            {
                LoadProductionComments("ParcelID");
                txtaddcomments.Text = "";
            }
        }
        else if (ddlstatus.SelectedItem.Text == "Rejected")
        {
            query = "Update status_comments set Status_Comment='" + txtaddcomments.Text + "' where Status='Rejected' and id='35'";
            result = con.ExecuteSPNonQuery(query);
            if (result > 0)
            {
                LoadProductionComments("Rejected");
                txtaddcomments.Text = "";
            }
        }
        else if (ddlstatus.SelectedItem.Text == "Others")
        {
            query = "Update status_comments set Status_Comment='" + txtaddcomments.Text + "' where Status='Others' and id='34'";
            result = con.ExecuteSPNonQuery(query);
            if (result > 0)
            {
                LoadProductionComments("Others");
                txtaddcomments.Text = "";
            }
        }
        else if (ddlstatus.SelectedItem.Text == "On Hold")
        {
            query = "Update status_comments set Status_Comment='" + txtaddcomments.Text + "' where Status='On Hold' and id='33'";
            result = con.ExecuteSPNonQuery(query);
            if (result > 0)
            {
                LoadProductionComments("On Hold");
                txtaddcomments.Text = "";
            }
        }
        else if (ddlstatus.SelectedItem.Text == "Completed" && Lblprocessname.Text == "PRODUCTION")
        {
            query = "Update status_comments set Status_Comment='" + txtaddcomments.Text + "' where Status='Completed' and id='30'";
            result = con.ExecuteSPNonQuery(query);
            if (result > 0)
            {
                LoadProductionComments("Completed");
                txtaddcomments.Text = "";
            }
        }
    }
    protected void btngetclose_Click(object sender, EventArgs e)
    {
        pagedimmer.Visible = false;
        getcomments.Visible = false;
    }
    #endregion

    #region MailAway

    public void Clearpanel()
    {
        txtdate.Text = "";
        txtchqpay.Text = "";
        txtaddress.Text = "";
        txtbrraddress.Text = "";
        txtparcelid.Text = "";
        txtamount.Text = "";
        txttaxtype.Text = "";
        Lblsuccess.Text = "";
        txtcity.Text = "";
        lblcity.Visible = false;
        txtcity.Visible = false;
        ddlrequesttype.SelectedIndex = 0;
    }

    protected void btncreatetreq_Click(object sender, EventArgs e)
    {
        int sucess = 0;
        string order_no = string.Empty;
        string address = string.Empty;
        string cheque_pay = string.Empty;
        string amount = string.Empty;
        string req_type = string.Empty;
        string tax_type = string.Empty;
        string brrname = string.Empty;
        string brraddress = string.Empty;
        string parcelid = string.Empty;
        string strdate = string.Empty;
        string city = string.Empty;
        string tdate = string.Empty;
        try
        {
            tdate = gl.setdate();
            DateTime pDt = Convert.ToDateTime(tdate);
            tdate = String.Format("{0:MM/dd/yyyy}", pDt);

            ds.Dispose();
            ds.Reset();
            string query = "select Order_no,Address from mailaway_tbl where order_no='" + Lblorderno.Text.ToString() + "' and PDate='" + Lbldate.Text.Trim() + "'";
            ds = con.ExecuteQuery(query);
            if (ds.Tables[0].Rows.Count >= 0)
            {
                int noofrequst = ds.Tables[0].Rows.Count + 1;
                sucess = gl.InsertMailaway(Lblorderno.Text.Trim(), txtchqpay.Text.Trim(), txtaddress.Text.Trim(), txtbrrname.Text.Trim(), txtbrraddress.Text.Trim(), txtparcelid.Text.Trim(), txtamount.Text.Trim(), ddlrequesttype.SelectedItem.Text.ToString(), txttaxtype.Text.Trim(), txtdate.Text.Trim(), noofrequst, Lbldate.Text.Trim(), txtcity.Text.Trim(), tdate.Trim());
                if (sucess > 0)
                {
                    ds.Dispose();
                    ds.Reset();
                    string strquery = "select Order_no,Address,Cheque_payable,Amount,Req_Type,TaxType,Borrowername,BorrowerAddress,ParcelId,city from mailaway_tbl where order_no='" + Lblorderno.Text.ToString() + "' and No_of_Request='" + noofrequst + "' and pDate='" + Lbldate.Text.Trim() + "' and amount='" + txtamount.Text.Trim() + "' limit 1";
                    ds = con.ExecuteQuery(strquery);
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        order_no = ds.Tables[0].Rows[0]["Order_no"].ToString();
                        address = ds.Tables[0].Rows[0]["Address"].ToString();
                        cheque_pay = ds.Tables[0].Rows[0]["Cheque_payable"].ToString();
                        amount = ds.Tables[0].Rows[0]["Amount"].ToString();
                        req_type = ds.Tables[0].Rows[0]["Req_Type"].ToString();
                        tax_type = ds.Tables[0].Rows[0]["TaxType"].ToString();
                        brrname = ds.Tables[0].Rows[0]["Borrowername"].ToString();
                        brraddress = ds.Tables[0].Rows[0]["BorrowerAddress"].ToString();
                        parcelid = ds.Tables[0].Rows[0]["ParcelId"].ToString();
                        city = ds.Tables[0].Rows[0]["City"].ToString();
                        dt = Convert.ToDateTime(txtdate.Text);
                        strdate = String.Format("{0:dd-MMM-yyyy}", dt);
                        CreateReport(order_no, address, cheque_pay, amount, req_type, tax_type, brrname, brraddress, parcelid, strdate);
                        Clearpanel();
                        Lblsuccess.Text = "Reports Generated Successfully.";
                    }
                }
            }
        }
        catch (Exception ex)
        {
            Lblerror.Text = ex.ToString();
        }
    }

    public void CreateReport(string order_no, string address, string cheque_pay, string amount, string req_type, string tax_type, string brrname, string brraddress, string parcelid, string strdate)
    {
        int count = 0;
        StringBuilder sb = new StringBuilder();
        StringBuilder strbder = new StringBuilder();
        string strFile = string.Empty;
        for (int i = 0; i < order_no.Length; i++)
        {
            if (i % 3 == 0 && i != 0)
            {
                sb.Append('-');
            }
            sb.Append(order_no[i]);
        }
        string strorderno = sb.ToString();
        string strreq_type = req_type.Replace('/', '-');
        if (req_type == "UPS/SASE")
        {
            strreq_type = "UPS";
        }
        else if (req_type == "REGULAR" || req_type == "THANKS REQUEST")
        {
            strreq_type = "REG";
        }

        strbder.Append("<html><body><form id='form1' runat='server'>");
        strbder.Append("<p style='page-break-before: always'>");
        strbder.Append("<div style='font-family:Arial;font-size:smaller;'>");
        if (req_type == "FAX REQUEST")
        {
            strbder.Append("<div style='text-align:right'><b> Report No: " + strorderno + "</b></div>");
        }
        else
        {
            strbder.Append("<div style='text-align:right'><b> Report No: " + strreq_type + "-" + strorderno + "</b></div>");
        }
        strbder.Append("<div style='text-align:right'><b>Date: " + strdate + "</b></div>");
        if (req_type == "FAX REQUEST")
        {
            strbder.Append("<br />");
            strbder.Append("<div><b>From</b></div>");
            strbder.Append("<div><b>String Real Estate Information Services</b></div>");
            strbder.Append("<div><b>7338 Baltimore Ave, Suite 112,</b></div>");
            strbder.Append("<div><b>College Park, MD. 20740</b></div>");
            strbder.Append("<div><b>Phone: 202-470-2172</b></div>");
            strbder.Append("<div><b>Phone: 412-489-0102</b></div>");
            strbder.Append("<div><b>Fax: (240) 223-2060</b></div>");
            strbder.Append("<div><b>E-mail ID: taxcerts@stringinformation.com</b></div>");
        }
        strbder.Append("<br />");
        strbder.Append("<div><b>To</b></div>");
        strbder.Append("<div><b>" + cheque_pay + "</b></div>");
        string tempaddress = address.Replace("\r\n", "+");
        string[] straddress = tempaddress.Split('+');
        for (int i = 0; i < straddress.Length; i++)
        {
            strbder.Append("<div><b>" + straddress[i] + "</b></div>");
        }
        strbder.Append("<br /><br />");
        strbder.Append("<div>To Whom It May Concern:</b></div>");
        strbder.Append("<br />");
        if (req_type != "THANKS REQUEST")
        {
            strbder.Append("<div>Requesting <b>" + tax_type + "</b> information on a property located at <b>" + brraddress + "</b> .Owner name is <b>" + brrname + "</b>. The Parcel Id number is <b>" + parcelid + "</b>. This is for<b> Refinance.</b></div>");
            strbder.Append("<br /><br />");
            strbder.Append("<div>We need to know the following:</div>");
            strbder.Append("<br />");
            strbder.Append("<div>Type of collection - Annually, Semi - Annually, or Quarterly</div>");
            strbder.Append("<div>Status with specific date - paid, due, delinquent</div>");
            strbder.Append("<div>Amounts and Due dates - discount, face and penalty</div>");
            if (req_type == "FAX REQUEST")
            {
                strbder.Append("<div>Delinquent taxes, if any <b>Good Thru Amount till " + strdate + "</b></div>");
            }
            else strbder.Append("<div>Delinquent taxes, if any</div>");
            strbder.Append("<div>Are any other taxes are applicable? </div>");
            strbder.Append("<div>Name and phone number of the entity responsible for collection.</div>");
            strbder.Append("<br />");
        }
        if (req_type != "FAX REQUEST")
        {
            strbder.Append("<div>Please find enclosed a check:</div>");
            strbder.Append("<br />");
            strbder.Append("<div>Check Number:</div>");
            strbder.Append("<div>Check Amount: $" + amount + "</div>");
            strbder.Append("<div>Favor: " + cheque_pay + "</div>");
            strbder.Append("<br />");
        }
        if (req_type != "THANKS REQUEST")
        {
            if (req_type == "UPS" || req_type == "REGULAR" || req_type == "USPS" || req_type == "FAX REQUEST")
            {
                strbder.Append("<div><b>Please fax this information to me if possible at 240-223-2060 or mail to taxcerts@stringinformation.com.</b></div>");
            }
            else if (req_type == "UPS/R")
            {
                strbder.Append("<div>I have included a return UPS.<b> Please fax this information to me if possible at 800-349-4782 or mail to taxcerts@stringinformation.com.</b></div>");
            }
            else if (req_type == "UPS/SASE")
            {
                strbder.Append("<div>I have included a Self Addressed Stamped Envelope.<b> Please fax this information to me if possible at 800-349-4782 or mail to taxcerts@stringinformation.com.</b></div>");
            }
            strbder.Append("<br />");
            if (req_type != "FAX REQUEST")
            {
                strbder.Append("<div><b>If you want to mail the information please do so to the address: 7338 Baltimore Ave, Suite 112, College Park, MD 20740.</b></div>");
                strbder.Append("<br />");
            }
            strbder.Append("<div>Please mention the Report # <b>" + order_no + "</b> in the Tax Certification</div>");
            strbder.Append("<br />");
            if (req_type != "FAX REQUEST")
            {
                strbder.Append("<div><b>Kindly Note: \"This request is being made on behalf of Amrock \"</b></div>");
                strbder.Append("<br />");
            }
        }
        else
        {
            strbder.Append("<div>We thank you for the tax information provided over phone on <b>" + strdate + ".</b>This is for the property located at <b>" + brraddress + "</b>. Owner name is <b>" + brrname + ".</b> The Parcel Id number is <b>" + parcelid + ".</b></div>");
            strbder.Append("<br /><br />");
            strbder.Append("<div>We appreciate your kind co-operation for the information provided.</div>");
            strbder.Append("<br /><br />");
        }
        strbder.Append("<div>Sincerely,</div>");
        strbder.Append("<div>Service Delivery Team</div>");
        strbder.Append("<div>String Real Estate Information Services</div>");
        strbder.Append("</div>");
        strbder.Append("</form></body></html>");

        e:
        try
        {
            string query = string.Empty;
            if (req_type == "THANKS REQUEST" || req_type == "REGULAR") { query = "select Output_Path_Regular from master_path"; }
            else { query = "select Output_Path_Ups from master_path"; }
            if (count == 0) strFile = order_no + " - " + cheque_pay + ".doc";
            else if (count > 0) strFile = order_no + " - " + cheque_pay + count + ".doc";
            byte[] data = System.Text.Encoding.UTF8.GetBytes(strbder.ToString());
            MemoryStream ms = new MemoryStream(data);
            string FilePath = getfullpath(strFile, query);
            if (FilePath == "") return;
            FileStream fs = new FileStream(FilePath + "/" + strFile + "", FileMode.Create);
            //FileStream fs = new FileStream(@"D:\Karthikeyan\Task\Working\Taxes\TSI Taxes\Reports\Template" + "/" + strFile + "", FileMode.CreateNew);     
            ms.WriteTo(fs);
            ms.Close();
            fs.Close();
            fs.Dispose();
        }
        catch
        {
            count++;
            goto e;
        }
    }

    private string getfullpath(string filename, string query)
    {
        string slash = @"\";
        string dec, sourcePath, pdatee, month, year, path = "";
        //string query = "select Output_Path from master_path";        
        MySqlParameter[] mParam = new MySqlParameter[1];
        MySqlDataReader mDataReader = con.ExecuteStoredProcedure(query, false, mParam);
        if (mDataReader.HasRows)
        {
            if (mDataReader.Read())
            {
                sourcePath = mDataReader.GetString(0);
                //DateTime pde;
                //pde = Convert.ToDateTime(Lbldate.Text);
                DateTime pde = DateTime.Now;
                pde = pde.AddHours(-12);
                pdatee = String.Format("{0:dd MMM yy}", pde);
                month = String.Format("{0:MMMM}", pde);
                year = String.Format("{0:yyyy}", pde);
                dec = sourcePath + slash + year + slash + month + slash + pdatee + slash + Lblorderno.Text;
                dir(dec);
                path = dec;
            }
        }
        mDataReader.Close();
        return path;
    }

    private void dir(string path)
    {
        //System.Security.AccessControl.DirectorySecurity dsec = new System.Security.AccessControl.DirectorySecurity();
        //System.Security.AccessControl.FileSystemAccessRule fsac;
        //fsac = new System.Security.AccessControl.FileSystemAccessRule("everyone", System.Security.AccessControl.FileSystemRights.Modify, System.Security.AccessControl.AccessControlType.Allow);
        //dsec.AddAccessRule(fsac);

        try
        {
            if (!System.IO.Directory.Exists(path))
            {
                System.IO.Directory.CreateDirectory(path);
                System.IO.DirectoryInfo dIn = new System.IO.DirectoryInfo(path);
                //dIn.SetAccessControl(dsec);
            }
        }
        catch (System.IO.DirectoryNotFoundException)
        {

        }
        catch (Exception)
        {

        }
    }

    protected void btncancel_Click(object sender, EventArgs e)
    {
        try
        {
            ReportPanel.Visible = false;
            pagedimmer.Visible = false;
        }
        catch (Exception ex)
        {
            Lblerror.Text = ex.ToString();
        }
    }

    protected void btngetaddress_Click(object sender, EventArgs e)
    {
        string req_type = "";
        ds.Dispose();
        ds.Reset();
        if (txtchqpay.Text != "")
        {
            string strquery = "Select Address,Charges,Req_Type,Tax_type from cheque_payable_details where Cheque_payable='" + txtchqpay.Text + "' limit 1";
            ds = con.ExecuteQuery(strquery);
            if (ds.Tables[0].Rows.Count > 0)
            {
                txtaddress.Text = ds.Tables[0].Rows[0]["Address"].ToString();
                txtamount.Text = ds.Tables[0].Rows[0]["Charges"].ToString();
                txttaxtype.Text = ds.Tables[0].Rows[0]["Tax_type"].ToString();

                req_type = ds.Tables[0].Rows[0]["Req_Type"].ToString();
                if (req_type == "UPS") ddlrequesttype.SelectedIndex = 1;
                else if (req_type == "UPS/R") ddlrequesttype.SelectedIndex = 2;
                else if (req_type == "UPS/SASE") ddlrequesttype.SelectedIndex = 3;
                else if (req_type == "REGULAR") ddlrequesttype.SelectedIndex = 4;
                else if (req_type == "THANKS REQUEST") ddlrequesttype.SelectedIndex = 5;
            }
        }
    }

    #endregion

    #region ViewRequest from DB
    protected void btnrequest_Click(object sender, EventArgs e)
    {
        string id = "", date = "", sRet = "", sPath = "";
        id = Lblorderno.Text.Trim();
        date = Lbldate.Text.Trim();
        sPath = System.Web.HttpContext.Current.Request.Url.AbsolutePath;
        System.IO.FileInfo oInfo = new System.IO.FileInfo(sPath);
        sRet = oInfo.Name;
        string Url = sPath.Replace(sRet, "Request.aspx?id=" + id + "&date=" + date);
        ClientScript.RegisterStartupScript(this.GetType(), "OpenWin", "<script>openNewWin('" + Url + "')</script>");
    }
    #endregion

    #region Get References
    protected void btnreferences_Click(object sender, EventArgs e)
    {
        ddlreferences.Items.Clear();
        ddlreferences.Items.Insert(0, "");
        string filepath = getfullpath1();

        DirectoryInfo di = new DirectoryInfo(filepath);
        FileInfo[] files = di.GetFiles("" + Lblorderno.Text + "*.*", SearchOption.AllDirectories);
        foreach (FileInfo file in files)
        {
            ddlreferences.Items.Add(file.Name);
        }
    }

    private string getfullpath1()
    {
        string slash = @"\";
        string dec, sourcePath, pdatee, month, year, path = "";
        string query = "select Output_References from master_path";
        MySqlParameter[] mParam = new MySqlParameter[1];
        MySqlDataReader mDataReader = con.ExecuteStoredProcedure(query, false, mParam);
        if (mDataReader.HasRows)
        {
            if (mDataReader.Read())
            {
                sourcePath = mDataReader.GetString(0);
                DateTime pde;
                pde = Convert.ToDateTime(Lbldate.Text);
                pdatee = String.Format("{0:dd MMM yy}", pde);
                month = String.Format("{0:MMMM}", pde);
                year = String.Format("{0:yyyy}", pde);
                dec = sourcePath + slash + year + slash + month;
                dir(dec);
                path = dec;
            }
        }
        mDataReader.Close();
        return path;
    }

    protected void ddlreferences_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            string url = getfullpath1();
            string filename = url + @"\" + ddlreferences.SelectedItem.Text;

            if (File.Exists(filename))
            {
                FileInfo fileDet = new System.IO.FileInfo(filename);
                Response.Clear();
                Response.Charset = "UTF-8";
                Response.ContentEncoding = Encoding.UTF8;
                Response.AddHeader("Content-Disposition", "attachment; filename=" + Server.UrlEncode(fileDet.Name));
                Response.AddHeader("Content-Length", fileDet.Length.ToString());
                Response.ContentType = "application/octet-stream";
                Response.WriteFile(fileDet.FullName);
                Response.End();
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    #endregion

    #region Order Logout
    protected void ddllogout_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddllogout.SelectedItem.Text == "Other") txtlogreason.Visible = true;
        else txtlogreason.Visible = false;
    }

    protected void btnok_Click(object sender, EventArgs e)
    {
        string strlogout = "", strlog = "";

        strlogout = txtlogreason.Text;
        string strprocess = Lblprocessname.Text;

        gl.Logout_New(strprocess, strlog, strlogout);
        RRedirect();
    }

    protected void btnlogoutclose_Click(object sender, EventArgs e)
    {
        pagedimmer.Visible = false;
        LogoutReason.Visible = false;
    }
    #endregion

    #region Changed Events
    protected void ddlerrorcat_SelectedIndexChanged(object sender, EventArgs e)
    {
        Loaderrorarea();
    }
    protected void ddlerrorarea_SelectedIndexChanged(object sender, EventArgs e)
    {
        Loaderrortype();
    }
    protected void ddlerrortype_SelectedIndexChanged(object sender, EventArgs e)
    {
        Loadcombined();
    }
    protected void ddlprdcomments_SelectedIndexChanged(object sender, EventArgs e)
    {
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
        lblprdcomments.Text = "";
        lblprdcomments.Text = ddlprdcomments.SelectedItem.Text;
        if (lblprdcomments.Text == "No answer in the Tax office" || lblprdcomments.Text == "No answer in the Assessor office" ||
            lblprdcomments.Text == "No answer in the Tax office, Tax office closed for the day" || lblprdcomments.Text == "Tax office closed for the day" ||
            lblprdcomments.Text == "Tax office closed, need to call later")
        {
            txtordertype.Text = "P";
        }
    }
    protected void txtfollowupdate_TextChanged(object sender, EventArgs e)
    {
        DateTime dat = Convert.ToDateTime(txtfollowupdate.Text);
        string date = String.Format("{0:yyyy-MM-dd HH:mm:ss}", dat);
    }
    #endregion

    #region Save Link
    protected void btnlinksave_Click(object sender, EventArgs e)
    {
        int result = 0;
        GetReplaceValue(txtassphone.Text, txtTreasphone.Text);
        string[] strstate = Lblstate.Text.Split('-');
        result = gl.SaveCountyLink(strstate[0].Trim().ToString(), Lblcouny.Text, txtassessor.Text.Trim().ToString(), txtassphone.Text.Trim().ToString(), txtTreasurer.Text.Trim().ToString(), txtTreasphone.Text.Trim().ToString());
        if (result > 0)
        {
            Lblerror.Text = "Assessor and Treasurer details saved successfully...";
            //LoadCountyLink();
        }
    }
    protected void btnlinkupdate_Click(object sender, EventArgs e)
    {
        int result = 0;
        GetReplaceValue(txtassphone.Text, txtTreasphone.Text);
        string[] strstate = Lblstate.Text.Split('-');
        result = gl.UpdateCountyLink(strstate[0].Trim().ToString(), Lblcouny.Text, txtassessor.Text.Trim().ToString(), txtassphone.Text.Trim().ToString(), txtTreasurer.Text.Trim().ToString(), txtTreasphone.Text.Trim().ToString());
        if (result > 0)
        {
            Lblerror.Text = "Assessor and Treasurer details updated successfully...";
            //LoadCountyLink();
        }
    }
    public void GetReplaceValue(string strass, string strtres)
    {

        if (strass != "")
        {
            strass = strass.Replace("(", "");
            strass = strass.Replace(")", "");
            strass = strass.Replace("-", "");
        }
        if (strtres != "")
        {
            strtres = strtres.Replace("(", "");
            strtres = strtres.Replace(")", "");
            strtres = strtres.Replace("-", "");
        }

        txtassphone.Text = strass;
        txtTreasphone.Text = strtres;
    }
    #endregion

    #region Tax Information Mail
    protected void chktaxinfo_CheckedChanged(object sender, EventArgs e)
    {
        //if (chktaxinfo.Checked == true)
        //{
        // Taxinfomail.Visible = true;
        //  pagedimmer.Visible = true;
        //}
        // else
        //{
        //   Taxinfomail.Visible = false;
        //  pagedimmer.Visible = false;
        // }
    }
    protected void btnsendtaxmail_Click(object sender, EventArgs e)
    {
        string fromid, ccid, toid, strsubject = "";
        string[] ordno;

        try
        {
            fromid = "taxcerts@stringinformation.com";
            //fromid = "m.karthikeyan@stringinformation.com";
            toid = txttaxtoid.Text;
            ccid = "taxcerts@stringinformation.com";
            //ccid = "m.karthikeyan@stringinformation.com";
            strsubject = "Requesting tax information - ";
            if (fromid != null && toid != null && ccid != null && strsubject != null)
            {
                string[] emailcc = ccid.Split(',');
                MailMessage mailMsg = new MailMessage();
                mailMsg.From = new MailAddress(fromid);
                mailMsg.To.Add(new MailAddress(toid));
                foreach (string emails in emailcc)
                {
                    if (emails.Trim().Length > 0)
                    {
                        mailMsg.CC.Add(new MailAddress(emails));
                    }
                }
                ordno = Lblorderno.Text.Split('_');
                mailMsg.Subject = strsubject + ordno[0].ToString();

                mailMsg.IsBodyHtml = true;
                mailMsg.Body = "Hi";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "Requesting " + ddltaxtype1.SelectedItem.Text + " information on a property located at " + txttaxadd.Text + ". Owner name is " + txtBorrower.Text + ". The Parcel Id number is " + txtparcelno.Text + ".";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "This is for Refinance.";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "I will need to know the following:";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "Tax amounts___________. If paid the paid amount ___________ and the paid date ___________.";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "Delinquent if any, payoff till month end.";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "Tax sale ever filed, if so detailed information.";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "Please fax this information to me if possible at (240) 223-2060 or email to taxcerts@stringinformation.com";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";

                FileStream fs = new FileStream(AppDomain.CurrentDomain.BaseDirectory + "/App_themes/Black/images/image010.png", FileMode.Open, FileAccess.Read);
                byte[] b = new byte[fs.Length];
                fs.Read(b, 0, (int)fs.Length);
                fs.Close();

                FileStream fsredLine = new FileStream(AppDomain.CurrentDomain.BaseDirectory + "/App_themes/Black/images/Redline.png", FileMode.Open, FileAccess.Read);
                byte[] bline = new byte[fsredLine.Length];
                fsredLine.Read(bline, 0, (int)fsredLine.Length);
                fsredLine.Close();


                FileStream fsLinked = new FileStream(AppDomain.CurrentDomain.BaseDirectory + "/App_themes/Black/images/ln.gif", FileMode.Open, FileAccess.Read);
                byte[] bLinked = new byte[fsLinked.Length];
                fsLinked.Read(bLinked, 0, (int)fsLinked.Length);
                fsLinked.Close();

                FileStream fsTwiter = new FileStream(AppDomain.CurrentDomain.BaseDirectory + "/App_themes/Black/images/twi.jpg", FileMode.Open, FileAccess.Read);
                byte[] bTwitter = new byte[fsTwiter.Length];
                fsTwiter.Read(bTwitter, 0, (int)fsTwiter.Length);
                fsTwiter.Close();

                mailMsg.Body = "<font color='Blue'>" + mailMsg.Body + "</font>";

                mailMsg.Body += DivTaxEmail.InnerHtml.ToString();

                string body = DivTaxEmail.InnerHtml;

                System.Net.Mail.AlternateView plainTextView = System.Net.Mail.AlternateView.CreateAlternateViewFromString(mailMsg.Body, null, "text/plain");
                System.Net.Mail.AlternateView htmlView = System.Net.Mail.AlternateView.CreateAlternateViewFromString("<html><body>" + mailMsg.Body, null, "text/html");

                System.Net.Mail.LinkedResource imageResource = new System.Net.Mail.LinkedResource(fs.Name);
                imageResource.ContentId = "LOGO";


                System.Net.Mail.LinkedResource imageResourceLine = new System.Net.Mail.LinkedResource(fsredLine.Name);
                imageResourceLine.ContentId = "REDLINE";
                htmlView.LinkedResources.Add(imageResourceLine);


                System.Net.Mail.LinkedResource imageResourceLinked = new System.Net.Mail.LinkedResource(fsLinked.Name);
                imageResourceLinked.ContentId = "LN";
                htmlView.LinkedResources.Add(imageResourceLinked);

                System.Net.Mail.LinkedResource imageResourceTeitter = new System.Net.Mail.LinkedResource(fsTwiter.Name);
                imageResourceTeitter.ContentId = "TWTR";
                htmlView.LinkedResources.Add(imageResourceTeitter);

                htmlView.LinkedResources.Add(imageResource);
                mailMsg.AlternateViews.Add(plainTextView);
                mailMsg.AlternateViews.Add(htmlView);

                // mailMsg.Body += "Thanks & Regards";
                // mailMsg.Body += "<br/>";
                // mailMsg.Body += "-------------------------------------------------------------------";
                // mailMsg.Body += "<br/>";
                // mailMsg.Body += "Service Delivery Team";
                // mailMsg.Body += "<br/>";
                // mailMsg.Body += "String Real Estate Information Services";
                // mailMsg.Body += "<br/>";
                // mailMsg.Body += "#237 on the Inc 500, #13 among all real estate firms nationwide";
                // mailMsg.Body += "<br/>";
                //// mailMsg.Body += "Phone : 202-470-0648 / 49";
                // mailMsg.Body += "Phone : 202-470-2173/0655";
                // mailMsg.Body += "<br/>";
                // mailMsg.Body += "www.stringinfo.com";

                mailMsg.Priority = MailPriority.Normal;
                SmtpClient mSmtpClient = new SmtpClient();
                mSmtpClient.Send(mailMsg);
                lbltaxerror.Text = "Mail Successfully Delivered...";
            }
            else
            {
                lbltaxerror.Text = "Pease save Fromid,Toid,CCid for this process.";
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    protected void btntaxcancel_Click(object sender, EventArgs e)
    {
        Taxinfomail.Visible = false;
        pagedimmer.Visible = false;
        //chktaxinfo.Checked = false;
    }
    #endregion

    #region Timer for Color Alerts
    protected void Timer1_Tick(object sender, EventArgs e)
    {
        Timer1.Enabled = false;
        if (lblordertype.Text == "Website")
        {
            lblprocesstime.BackColor = System.Drawing.Color.Blue;
            Timer2.Interval = 120000;
        }
        else if (lblordertype.Text == "Phone")
        {
            lblprocesstime.BackColor = System.Drawing.Color.Blue;
            Timer2.Interval = 180000;
        }
        Timer2.Enabled = true;
    }
    protected void Timer2_Tick(object sender, EventArgs e)
    {
        Timer2.Enabled = false;
        lblprocesstime.BackColor = System.Drawing.Color.Red;
    }
    #endregion

    #region Entity Count
    protected void txtentitycount_TextChanged(object sender, EventArgs e)
    {
        string scount = Convert.ToString(myVariables.ecount);
        if (txtentitycount.Text == "" || txtentitycount.Text == null || txtentitycount.Text == "0" || txtentitycount.Text == "00")
        {
            lblexemhead.Text = "Please enter entity count.";
            pagedimmer.Visible = true;
            exemptionsmsgbox.Visible = true;
            Panel2.Visible = false;
        }
        else
        {
            if (scount != txtentitycount.Text)
            {
                lblexemhead.Text = "Do you want proceed further.";
                pagedimmer.Visible = true;
                exemptionsmsgbox.Visible = true;
                Panel2.Visible = true;
            }
            int entcount = Convert.ToInt32(txtentitycount.Text);
            DataTable dtt = new DataTable();

            //dtt.Columns.Add("EntityTypes");

            //dtt.Columns.Add("TaxAmount");
            //dtt.Columns.Add("PaymentStatus");
            //dtt.Columns.Add("PaymentFrequency");

            for (int i = 0; i < entcount; i++)
            {
                DataRow dr = dtt.NewRow();
                //dr[0] = "";
                //dr[1] = "";
                //dr[2] = "";
                //dr[3] = "";
                dtt.Rows.Add(dr);
            }
            GridEntity.DataSource = dtt;
            GridEntity.DataBind();
        }
    }

    protected void btnExemptionsOk_Click(object sender, EventArgs e)
    {
        pagedimmer.Visible = false;
        exemptionsmsgbox.Visible = false;
    }
    #endregion

    #region FL Calc
    protected void LnkbtnFLcalc_Click(object sender, EventArgs e)
    {
        pagedimmer.Visible = true;
        getcomments.Visible = true;
        txtflamount.Text = "";
        txtgetcomments.Text = "";
        lblFLerror.Text = "";
    }
    protected void Lnkcalculate_Click(object sender, EventArgs e)
    {
        txtgetcomments.Text = "";
        double amount = 0;
        try
        {
            amount = Convert.ToDouble(txtflamount.Text);
        }
        catch (Exception ex)
        {
            lblFLerror.Text = "Please enter the valid amount.";
            return;
        }
        double onepercen, twopercen, threepercen, fourpercen = 0.00;
        onepercen = amount - ((amount / 100) * 1);
        twopercen = amount - ((amount / 100) * 2);
        threepercen = amount - ((amount / 100) * 3);
        fourpercen = amount - ((amount / 100) * 4);

        onepercen = Math.Round(onepercen, 2);
        twopercen = Math.Round(twopercen, 2);
        threepercen = Math.Round(threepercen, 2);
        fourpercen = Math.Round(fourpercen, 2);

        txtgetcomments.Text = txtgetcomments.Text + "4% of Amount - " + fourpercen + Environment.NewLine;
        txtgetcomments.Text = txtgetcomments.Text + "3% of Amount - " + threepercen + Environment.NewLine;
        txtgetcomments.Text = txtgetcomments.Text + "2% of Amount - " + twopercen + Environment.NewLine;
        txtgetcomments.Text = txtgetcomments.Text + "1% of Amount - " + onepercen + Environment.NewLine;

        txtgetcomments.Text = txtgetcomments.Text + Environment.NewLine + Environment.NewLine + "Taxes on Land and Improvements. If paid by 12/31/2018, amount due is $" + threepercen + "; If paid by 01/31/2019, amount due is $" + twopercen + "; If paid by 02/28/2019, amount due is $" + onepercen + "";
        lblFLerror.Text = "";
    }
    #endregion

    #region Send Mail for Multiple Parcel
    protected void btnparcelmail_Click(object sender, EventArgs e)
    {
        string fromid, ccid, toid, strsubject = "";
        string[] ordno;

        try
        {
            fromid = "tsi@stringinfo.com";
            //fromid = "m.karthikeyan@stringinformation.com";
            toid = "tsitaxvendor@titlesource.com";
            //toid = "m.karthikeyan@stringinformation.com";
            ccid = "tsi@stringinfo.com";
            //ccid = "m.karthikeyan@stringinformation.com";
            strsubject = " String/TSI - Order # ";
            if (fromid != null && toid != null && ccid != null && strsubject != null)
            {
                ordno = Lblorderno.Text.Split('_');
                string[] emailcc = ccid.Split(',');
                MailMessage mailMsg = new MailMessage();
                mailMsg.From = new MailAddress(fromid);
                mailMsg.To.Add(new MailAddress(toid));
                foreach (string emails in emailcc)
                {
                    if (emails.Trim().Length > 0)
                    {
                        mailMsg.CC.Add(new MailAddress(emails));
                    }
                }
                mailMsg.Subject = strsubject + ordno[0].ToString();

                mailMsg.IsBodyHtml = true;
                mailMsg.Body = "Hi";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "For the order# " + ordno[0].ToString();
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "We have found " + txtnoofparcels.Text + " parcels mentioned above while searching through the owners name.";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += txt_parcels.Text.Replace("\r\n", "<br/>");
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "But in the abstract we have found only one parcel # " + tst_parcelno.Text;
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "Please advise.";
                mailMsg.Body += "<br/>";
                mailMsg.Body += "<br/>";

                FileStream fs = new FileStream(AppDomain.CurrentDomain.BaseDirectory + "/App_themes/Black/images/image010.png", FileMode.Open, FileAccess.Read);
                byte[] b = new byte[fs.Length];
                fs.Read(b, 0, (int)fs.Length);
                fs.Close();

                FileStream fsredLine = new FileStream(AppDomain.CurrentDomain.BaseDirectory + "/App_themes/Black/images/Redline.png", FileMode.Open, FileAccess.Read);
                byte[] bline = new byte[fsredLine.Length];
                fsredLine.Read(bline, 0, (int)fsredLine.Length);
                fsredLine.Close();


                FileStream fsLinked = new FileStream(AppDomain.CurrentDomain.BaseDirectory + "/App_themes/Black/images/ln.gif", FileMode.Open, FileAccess.Read);
                byte[] bLinked = new byte[fsLinked.Length];
                fsLinked.Read(bLinked, 0, (int)fsLinked.Length);
                fsLinked.Close();

                FileStream fsTwiter = new FileStream(AppDomain.CurrentDomain.BaseDirectory + "/App_themes/Black/images/twi.jpg", FileMode.Open, FileAccess.Read);
                byte[] bTwitter = new byte[fsTwiter.Length];
                fsTwiter.Read(bTwitter, 0, (int)fsTwiter.Length);
                fsTwiter.Close();

                mailMsg.Body = "<font color='Blue'>" + mailMsg.Body + "</font>";

                mailMsg.Body += DivEmail.InnerHtml.ToString();

                string body = DivEmail.InnerHtml;

                System.Net.Mail.AlternateView plainTextView = System.Net.Mail.AlternateView.CreateAlternateViewFromString(mailMsg.Body, null, "text/plain");
                System.Net.Mail.AlternateView htmlView = System.Net.Mail.AlternateView.CreateAlternateViewFromString("<html><body>" + mailMsg.Body, null, "text/html");

                System.Net.Mail.LinkedResource imageResource = new System.Net.Mail.LinkedResource(fs.Name);
                imageResource.ContentId = "LOGO";


                System.Net.Mail.LinkedResource imageResourceLine = new System.Net.Mail.LinkedResource(fsredLine.Name);
                imageResourceLine.ContentId = "REDLINE";
                htmlView.LinkedResources.Add(imageResourceLine);


                System.Net.Mail.LinkedResource imageResourceLinked = new System.Net.Mail.LinkedResource(fsLinked.Name);
                imageResourceLinked.ContentId = "LN";
                htmlView.LinkedResources.Add(imageResourceLinked);

                System.Net.Mail.LinkedResource imageResourceTeitter = new System.Net.Mail.LinkedResource(fsTwiter.Name);
                imageResourceTeitter.ContentId = "TWTR";
                htmlView.LinkedResources.Add(imageResourceTeitter);

                htmlView.LinkedResources.Add(imageResource);
                mailMsg.AlternateViews.Add(plainTextView);
                mailMsg.AlternateViews.Add(htmlView);

                // mailMsg.Body += "Thanks & Regards";
                // mailMsg.Body += "<br/>";
                // mailMsg.Body += "-------------------------------------------------------------------";
                // mailMsg.Body += "<br/>";
                // mailMsg.Body += "Service Delivery Team";
                // mailMsg.Body += "<br/>";
                // mailMsg.Body += "String Real Estate Information Services";
                // mailMsg.Body += "<br/>";
                // mailMsg.Body += "#237 on the Inc 500, #13 among all real estate firms nationwide";
                // mailMsg.Body += "<br/>";
                //// mailMsg.Body += "Phone : 202-470-0648 / 49";
                // mailMsg.Body += "Phone : 202-470-2173/0655";
                // mailMsg.Body += "<br/>";
                // mailMsg.Body += "www.stringinfo.com";

                mailMsg.Priority = MailPriority.Normal;
                SmtpClient mSmtpClient = new SmtpClient();
                mSmtpClient.Send(mailMsg);
                lblparcelerror.Text = "Mail Successfully Delivered...";
            }
            else
            {
                lblparcelerror.Text = "Pease save Fromid,Toid,CCid for this process.";
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    protected void btnparcelcancel_Click(object sender, EventArgs e)
    {
        txtnoofparcels.Text = "";
        txt_parcels.Text = "";
        tst_parcelno.Text = "";
        ParcelInformation.Visible = false;
        pagedimmer.Visible = false;
        chkparcelmail.Checked = false;
    }
    protected void chkparcelmail_CheckedChanged(object sender, EventArgs e)
    {
        if (chkparcelmail.Checked == true)
        {
            ParcelInformation.Visible = true;
            pagedimmer.Visible = true;
        }
        else
        {
            ParcelInformation.Visible = false;
            pagedimmer.Visible = false;
        }
    }
    #endregion

    #region Split Order Details
    protected void Lblorderno_Click(object sender, EventArgs e)
    {
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
        txtstatecomments.Text = "";
        pagedimmer.Visible = true;
        statecomments.Visible = true;
    }
    protected void btnclose_Click(object sender, EventArgs e)
    {
        string strcmds = txtstatecomments.Text.Trim();
        try
        {

            if (strcmds == "") { LblSpliterror.Text = "Please paste Order Details...!"; return; }
            //string strresult = SplitOrderDetails(strcmds);
            //if (LblSpliterror.Text != "") { return; }

            //if (strresult != "N/A" && strresult != "")
            //{
            //    for (int i = 0; i < ddlstatus.Items.Count; i++)
            //    {
            //        if (ddlstatus.Items[i].Text.ToString() == "Rejected")
            //        {
            //            ddlstatus.SelectedIndex = i;
            //            break;
            //        }
            //    }
            //    ddlstatus_SelectedIndexChanged(sender, e);
            //    ddlprdcomments.SelectedIndex = 1;
            //    ddlprdcomments_SelectedIndexChanged(sender, e);
            //}

            pagedimmer.Visible = false;
            statecomments.Visible = false;
        }
        catch
        {

        }
        //madesh

        try
        {
            string propertyAddress = Before(strcmds, "County:");
            propertyAddress = After(propertyAddress, "Property Address:");
            string borrower = Between(strcmds, "Borrower/Buyer(s):", "Seller(s):").TrimStart().TrimEnd();
            txtBorrower.Text = borrower;

            AddressParser.AddressParser splitAddr = new AddressParser.AddressParser();
            var splitAddrList = splitAddr.ParseAddress(propertyAddress);
            string townShip = splitAddrList.City;
            //streetNumber = splitAddrList.Number;
            //direction = splitAddrList.Predirectional;
            //streetName = splitAddrList.Street;
            string zipCode = splitAddrList.Zip;
            if (zipCode.Length > 5)
            {
                zipCode = zipCode.Substring(0, 5);
            }
            //streetLine = splitAddrList.StreetLine;
            //streetType = splitAddrList.Suffix;
            //unitnumber = splitAddrList.SecondaryNumber;
            txttownship.Text = townShip;
            txtzipcode.Text = zipCode;
            DataSet ds = gl.GetAddress(Lblorderno.Text.Trim());
            string scrape = ds.Tables[0].Rows[0]["scrape"].ToString();
            if (scrape != "1")
            {
                titlebtn.Visible = true;
            }
            Session["titleflexAddress"] = propertyAddress;
        }
        catch
        {

        }
    }
    protected void btnsplitclose_Click(object sender, EventArgs e)
    {
        pagedimmer.Visible = false;
        statecomments.Visible = false;
    }
    private string SplitOrderDetails(string strcmds)
    {
        string result = "";
        LblSpliterror.Text = "";
        string[] splitnewline = strcmds.Split('\n');
        if (splitnewline.Length <= 5)
        {
            for (int i = 0; i < splitnewline.Length; i++)
            {
                string strres = Convert.ToString(splitnewline[i]);
                if (strres.Contains("Property Address:") == true)
                {
                    string[] strtown = splitnewline[i + 1].Split(',');
                    if (strtown.Length == 2)
                    {
                        string[] strzip = strtown[1].Split(' ');
                        txttownship.Text = Convert.ToString(strtown[0].Trim());
                        txtzipcode.Text = Convert.ToString(strzip[2]).Trim();
                    }
                    else
                    {
                        txttownship.Text = "";
                        txtzipcode.Text = "";
                    }
                }
                else if (strres.Contains("Borrower/Buyer(s):") == true || strres.Contains("Seller(s):") == true)
                {
                    string[] strbrw = strres.Split(':');

                    if (strres.Contains("Borrower/Buyer(s):") == true)
                    {
                        txtBorrower.Text = Convert.ToString(strbrw[1].Replace(" Seller(s)", "").Trim());
                    }
                    if (strres.Contains("Seller(s):") == true)
                    {
                        if (splitnewline.Length == 3)
                        {
                            result = Convert.ToString(strbrw[2].Trim());
                        }
                        else
                        {
                            result = Convert.ToString(strbrw[1].Trim());
                        }
                    }
                }
            }
        }
        else
        {
            LblSpliterror.Text = "Format incorrect...!";
        }

        return result;
    }
    #endregion

    #region Delay Reason
    protected void btndelayreason_Click(object sender, EventArgs e)
    {
        if (ddldelayreason.SelectedIndex == 0) { lbldelayerror.Text = "Please Select your Delay Reason...!"; return; }
        DateTime Sdtt = Convert.ToDateTime(myVariables.KeyStart);
        string starttime = String.Format("{0:yyyy-MM-dd HH:mm:ss}", Sdtt);
        int result = gl.DelayReason(Lblorderno.Text, Lbldate.Text, Lblprocessname.Text, ddlstatus.SelectedItem.Text, starttime, ddldelayreason.SelectedItem.Text);
        if (result > 0)
        {
            pagedimmer.Visible = false;
            DelayReason.Visible = false;
        }
    }
    #endregion

    //New
    protected void btnPrclFrmt_Click(object sender, EventArgs e)
    {
        pagedimmer.Visible = true;
        divpopup.Visible = true;
        txtCntyPrcl.Text = Lblcouny.Text;
    }
    protected void btnCheck_Click(object sender, EventArgs e)
    {
        //New
        string alle = txtTleSrcePrcl.Text;
        checkforcelformat(alle, Lblcouny.Text);
        //New
    }
    //New
    Regex regex;
    public void checkforcelformat(string alle, string county)
    {

        if (county == "Allegheny")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{4})\)?[- ]?([0-9A-Za-z]{1})[- ]?([0-9A-Za-z]{5})[- ]?([0-9A-Za-z]{4})[- ]?([0-9A-Za-z]{2})$");
        }
        else if (county == "Armsrong")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{3})[. ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{2})$");
        }
        else if (county == "Berks")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{4})[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{4})$");
        }
        else if (county == "Bradford")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{3})[. ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Bucks")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Cameron")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{1})[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Centre")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{1})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Chester")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Clarion")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{2})$");
        }
        else if (county == "Clearfield")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{4})$");
        }
        else if (county == "Clinton")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Cumberland")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{4})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Dauphin")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Delaware")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{5})[- ]?([0-9A-Za-z]{2})$");
        }
        else if (county == "Elk")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{4})$");
        }
        else if (county == "Erie")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{3})[. ]?([0-9A-Za-z]{1})[- ]?([0-9A-Za-z]{3})[. ]?([0-9A-Za-z]{2})$");
        }
        else if (county == "Fayette")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{4})$");
        }
        else if (county == "Franklin")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{4})[. ][- ]?([0-9A-Za-z]{3})[. ][- ]?([0-9A-Za-z]{6})$");
        }
        else if (county == "Fulton")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Greene")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Huntingdon")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Indiana")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Jefferson")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{4})$");
        }
        else if (county == "Lancaster")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{3})\)?[- ]?([0-9A-Za-z]{5})[- ]?([0-9A-Za-z]{1})[- ]?([0-9A-Za-z]{4})$");
        }
        else if (county == "Lawrence")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[ ][- ][ ]?([0-9A-Za-z]{6})$");
        }
        else if (county == "Lebanon")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{7})[- ]?([0-9A-Za-z]{6})[- ]?([0-9A-Za-z]{4})$");
        }
        else if (county == "Lehigh")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{12})$");
        }
        else if (county == "Luzerne")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{6})[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Lycoming")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Mifflin")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[, ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{4})[- ][- ][, ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Monroe")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[/ ]?([0-9A-Za-z]{1})[/ ]?([0-9A-Za-z]{1})[/ ]?([0-9A-Za-z]{2})$");
        }
        else if (county == "Montgomery")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{5})[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{1})$");
        }
        else if (county == "Montour")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Perry")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{3})\)?[, ]?([0-9A-Za-z]{3})[. ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{3})[. ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Potter")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{3})\)?[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Schuylkill")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{4})[. ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Sullivan")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{4})$");
        }
        else if (county == "Susquehanna")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{3})\)?[. ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{1})[, ]?([0-9A-Za-z]{3})[. ]?([0-9A-Za-z]{2})[, ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "Union")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{3})\)?[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{3})[. ]?([0-9A-Za-z]{5})$");
        }
        else if (county == "Washington")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{3})\)?[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{4})[- ]?([0-9A-Za-z]{2})$");
        }
        else if (county == "Westmoreland")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{1})[- ]?([0-9A-Za-z]{3})$");
        }
        else if (county == "York")
        {
            regex = new Regex(@"^\(?([0-9A-Za-z]{2})\)?[- ]?([0-9A-Za-z]{3})[- ]?([0-9A-Za-z]{2})[- ]?([0-9A-Za-z]{4})[- ]?([0-9A-Za-z]{2})[. ][- ]?([0-9A-Za-z]{4})$");
        }

        if (regex.IsMatch(alle))
        {
            lblCheck.Text = "Parcel matches...";
        }
        else
        {
            lblCheck.Text = "Parcel mismatch...";
        }
    }
    //New
    protected void btnTleCntyClse_Click(object sender, EventArgs e)
    {
        pagedimmer.Visible = false;
        divpopup.Visible = false;
        lblCheck.Text = "";
        cleardiv();
    }

    protected void btnPrclShow_Click(object sender, EventArgs e)
    {
        pagedimmer.Visible = true;
        divPrclFormat.Visible = true;
    }
    protected void btnClsePrclFrmt_Click(object sender, EventArgs e)
    {
        pagedimmer.Visible = false;
        divPrclFormat.Visible = false;
    }
    public void cleardiv()
    {
        txtCntyPrcl.Text = "";
        txtTleSrcePrcl.Text = "";
    }
    //NewButton1_Click

    //NewTax
    protected void txtTaxAmnt_TextChanged(object sender, EventArgs e)
    {
        if (Lblprocessname.Text == "QC")
        {
            foreach (GridViewRow rowvalues in GridEntity.Rows)
            {
                GridView gvNest = (GridView)rowvalues.FindControl("gvNested");
                foreach (GridViewRow row in gvNest.Rows)
                {
                    string tax_Amnt = "";
                    TextBox taxAmnt = (TextBox)row.FindControl("txtTaxAmnt");
                    tax_Amnt = taxAmnt.Text.Trim();

                    if (tax_Amnt == lblTax.Text.Trim())
                    {
                        pagedimmer.Visible = false;
                        Divqccheck.Visible = false;
                    }
                    else
                    {
                        pagedimmer.Visible = true;
                        Divqccheck.Visible = true;
                    }
                }
            }
        }
    }
    protected void btnQCCheck_Click(object sender, EventArgs e)
    {
        pagedimmer.Visible = false;
        Divqccheck.Visible = false;
    }
    protected void btn_brk_start_Click(object sender, EventArgs e)
    {
        hid_Ticker.Value = new TimeSpan(0, 0, 0).ToString();
        string query = "";
        txt_break_reason.Text = "";
        lblothererror.Text = "";
        DataSet result = new DataSet();
        DateTime dt = new DateTime();
        dt = DateTime.Now;
        string pdate = string.Empty;


        TimeSpan ptime = DateTime.Now.TimeOfDay;
        TimeSpan start = new TimeSpan(0, 0, 0);
        TimeSpan end = new TimeSpan(07, 0, 0);

        if (start <= ptime && ptime <= end)
        {
            dt = DateTime.Now.AddDays(-1);
            pdate = dt.ToString("MM-dd-yyyy");
        }

        else
        {
            dt = DateTime.Now;
            pdate = dt.ToString("MM-dd-yyyy");
        }

        result = gl.insert_breaks(gl.order_no, pdate, gl.Process, drp_break.SelectedItem.Text, drp_break.SelectedItem.Value.ToString());

        string act_time = result.Tables[0].Rows[0]["act_time"].ToString();
        string brk_time = result.Tables[1].Rows[0]["brk_time"].ToString();
        if (brk_time == "")
        {
            brk_time = "01:00:00";
        }

        TimeSpan act = TimeSpan.Parse(act_time);
        TimeSpan brk = TimeSpan.Parse(brk_time);

        if (act > brk && drp_break.SelectedItem.Text == "Meeting")
        {
            if (brk.ToString().Contains("-"))
            {
                lblothererror.Text = "You have already Completed your breaklimits";
            }
            else
            {
                lblothererror.Text = "You have remaining " + " " + brk + " " + ":Mins";
            }

        }

        else
        {
            lblothererror.Text = "";
        }
        div_brk_start.Visible = false;
        lbl_brk_name.Text = drp_break.SelectedItem.Text.ToString();
        div_brk_cmd.Visible = true;
        div_brk_countdown.Visible = true;
        div_brk_stop.Visible = false;
    }
    protected void btn_brk_cancel_Click(object sender, EventArgs e)
    {
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
        lnkOthers.Text = "Break";
        pagedimmer.Visible = false;
        Other_breakMsgbx.Visible = false;
    }
    protected void Timer1_Tickb(object sender, EventArgs e)
    {
        hid_Ticker.Value = TimeSpan.Parse(hid_Ticker.Value).Add(new TimeSpan(0, 0, 1)).ToString();
        lit_Timer.Text = hid_Ticker.Value.ToString();
    }
    protected void btn_brk_stop_Click(object sender, EventArgs e)
    {
        DataSet ds_time_diff = new DataSet();
        DataSet ds_time = new DataSet();
        DateTime dt = new DateTime();
        dt = DateTime.Now;
        string pdate = string.Empty;


        TimeSpan ptime = DateTime.Now.TimeOfDay;
        TimeSpan start = new TimeSpan(0, 0, 0);
        TimeSpan end = new TimeSpan(07, 0, 0);

        if (start <= ptime && ptime <= end)
        {
            dt = DateTime.Now.AddDays(-1);
            pdate = dt.ToString("MM-dd-yyyy");
        }

        else
        {
            dt = DateTime.Now;
            pdate = dt.ToString("MM-dd-yyyy");
        }

        ds_time_diff = gl.timeiff_breaks(lbl_brk_name.Text, pdate);

        string act_time = ds_time_diff.Tables[0].Rows[0]["act_time"].ToString();
        string brk_time = ds_time_diff.Tables[1].Rows[0]["diff_time"].ToString();

        TimeSpan act = TimeSpan.Parse(act_time);
        TimeSpan brk = TimeSpan.Parse(brk_time);

        if (act < brk)
        {

            div_brk_countdown.Visible = false;
            div_brk_stop.Visible = true;
            lbl_brk_cmd_err.Text = "Please enter the Delay reason..";
        }

        else
        {
            ds_time = gl.update_breaks(lbl_brk_name.Text, txt_break_reason.Text, pdate);

            //ds_time = gl.update_breaks(lbl_brk_name.Text, txt_break_reason.Text, pdate);
            string tottime = ds_time.Tables[0].Rows[0]["brk_time"].ToString();
            TimeSpan time1 = TimeSpan.Parse(tottime);
            TimeSpan tmlimit = new TimeSpan(01, 0, 0);

            if (time1 > tmlimit)
            {
                bool result = gl.sp_lock_user();

            }

        }

        lnkOthers.Text = "Break";
        pagedimmer.Visible = false;
        Other_breakMsgbx.Visible = false;


    }
    protected void btn_brk_reson_Click(object sender, EventArgs e)
    {
        if (txt_break_reason.Text == "")
        {
            lbl_brk_cmd_err.Text = "Please enter the comments...";
            return;
        }
        DataSet ds_time = new DataSet();
        DateTime dt = new DateTime();
        dt = DateTime.Now;
        string pdate = string.Empty;


        TimeSpan ptime = DateTime.Now.TimeOfDay;
        TimeSpan start = new TimeSpan(0, 0, 0);
        TimeSpan end = new TimeSpan(07, 0, 0);

        if (start <= ptime && ptime <= end)
        {
            dt = DateTime.Now.AddDays(-1);
            pdate = dt.ToString("MM-dd-yyyy");
        }

        else
        {
            dt = DateTime.Now;
            pdate = dt.ToString("MM-dd-yyyy");
        }

        ds_time = gl.update_breaks(lbl_brk_name.Text, txt_break_reason.Text, pdate);
        string tottime = ds_time.Tables[0].Rows[0]["brk_time"].ToString();
        TimeSpan time1 = TimeSpan.Parse(tottime);
        TimeSpan tmlimit = new TimeSpan(01, 0, 0);

        if (time1 > tmlimit)
        {
            bool result = gl.sp_lock_user();

        }


        lnkOthers.Text = "Break";
        pagedimmer.Visible = false;
        Other_breakMsgbx.Visible = false;


    }
    public void lnkOthers_Click(object sender, EventArgs e)
    {
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
        lnkOthers.Text = "UnBreak";
        pagedimmer.Visible = true;
        Other_breakMsgbx.Visible = true;
        div_brk_start.Visible = true;
        div_brk_cmd.Visible = false;
    }

    public void break_mis()
    {
        DataSet ds = new DataSet();
        ds = gl.get_diff_time();
        if (ds.Tables[0].Rows.Count > 0)
        {
            lnkOthers.Text = "UnBreak";
            pagedimmer.Visible = true;
            Other_breakMsgbx.Visible = true;
            div_brk_start.Visible = false;
            lbl_brk_name.Text = "";
            div_brk_cmd.Visible = true;
            div_brk_countdown.Visible = true;
            div_brk_stop.Visible = false;

            string brk_typ = ds.Tables[0].Rows[0]["break_type"].ToString();
            string dif_tm = ds.Tables[0].Rows[0]["diff_time"].ToString();

            drp_break.Text = brk_typ;

            lbl_brk_name.Text = brk_typ;
            string[] splt_time = dif_tm.Split(':');
            int hr = 0, min = 0, sec = 0;
            hr = Convert.ToInt32(splt_time[0].ToString());
            min = Convert.ToInt32(splt_time[1].ToString());
            sec = Convert.ToInt32(splt_time[2].ToString());
            hid_Ticker.Value = new TimeSpan(hr, min, sec).ToString();
        }
    }

    protected void chktaxinfo_Click(object sender, EventArgs e)
    {
        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
        Taxinfomail.Visible = true;
        pagedimmer.Visible = true;
    }

    //NewTax   

    protected void ddlPymntFrqncy_SelectedIndexChanged(object sender, EventArgs e)
    {
        foreach (GridViewRow row in GridEntity.Rows)
        {
            DropDownList ddlFreq = (DropDownList)row.FindControl("ddlPymntFrqncy");
            GridView gvNest = (GridView)row.FindControl("gvNested");
            DataTable dt = new DataTable();

            if (ddlFreq.SelectedItem.Text == "Annual")
            {
                //dt.Columns.Add("EntityTypes");
                dt.Columns.Add("TaxAmount");
                dt.Columns.Add("PaymentStatus");

                for (int i = 0; i < 1; i++)
                {
                    DataRow dr = dt.NewRow();

                    dt.Rows.Add(dr);
                }
                gvNest.DataSource = dt;
                gvNest.DataBind();
            }
            if (ddlFreq.SelectedItem.Text == "Semi-Annual")
            {
                //dt.Columns.Add("EntityTypes");
                dt.Columns.Add("TaxAmount");
                dt.Columns.Add("PaymentStatus");

                for (int i = 0; i < 2; i++)
                {
                    DataRow dr = dt.NewRow();

                    dt.Rows.Add(dr);
                }
                gvNest.DataSource = dt;
                gvNest.DataBind();
            }
            if (ddlFreq.SelectedItem.Text == "Instalments")
            {
                //dt.Columns.Add("EntityTypes");
                dt.Columns.Add("TaxAmount");
                dt.Columns.Add("PaymentStatus");

                for (int i = 0; i < 3; i++)
                {
                    DataRow dr = dt.NewRow();

                    dt.Rows.Add(dr);
                }
                gvNest.DataSource = dt;
                gvNest.DataBind();
            }
            if (ddlFreq.SelectedItem.Text == "Quartely")
            {
                //dt.Columns.Add("EntityTypes");
                dt.Columns.Add("TaxAmount");
                dt.Columns.Add("PaymentStatus");

                for (int i = 0; i < 4; i++)
                {
                    DataRow dr = dt.NewRow();

                    dt.Rows.Add(dr);
                }
                gvNest.DataSource = dt;
                gvNest.DataBind();
            }
        }
    }



    protected void GridView4_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.ForeColor = System.Drawing.Color.Red;
        }
    }
    public string Between(string Text, string FirstString, string LastString)
    {

        string STR = Text;
        string STRFirst = FirstString;
        string STRLast = LastString;
        string FinalString;
        int Pos1 = STR.IndexOf(FirstString) + FirstString.Length;
        int Pos2 = STR.IndexOf(LastString);
        FinalString = STR.Substring(Pos1, Pos2 - Pos1);
        FinalString = FinalString.Replace(System.Environment.NewLine, string.Empty);
        return FinalString;

    }
    public static string Before(string value, string a)
    {
        int posA = value.IndexOf(a);
        if (posA == -1)
        {
            return "";
        }
        return value.Substring(0, posA);
    }
    public static string After(string value, string a)
    {
        int posA = value.LastIndexOf(a);
        if (posA == -1)
        {
            return "";
        }
        int adjustedPosA = posA + a.Length;
        if (adjustedPosA >= value.Length)
        {
            return "";
        }
        return value.Substring(adjustedPosA);
    }

    protected void Button1_Click(object sender, EventArgs e)
    {
        Button1.Enabled = false;
        lblStatus.Text = "";
        gettitleflexdata();
        Button1.Enabled = true;
    }

    protected void btnokpop_Click(object sender, EventArgs e)
    {
        pagedimmer.Visible = false;
        DivCAstate.Visible = false;
    }
    protected void BtnScrapMsg_Click(object sender, EventArgs e)
    {
        pagedimmer.Visible = false;
        ScrapDiv.Visible = false;
        con.ExecuteQuery("update record_status set view_data='Yes' where order_no='" + myVariables.Orderno + "'");
    }
    public void CheckAlert()
    {
        DataSet ds = gl.GetCountyId(myVariables.State, myVariables.County);
        if (ds.Tables[0].Rows.Count > 0)
        {
            string addresstype = ds.Tables[0].Rows[0]["Address_Type"].ToString();
            string countyID = ds.Tables[0].Rows[0]["State_County_Id"].ToString();
            string statename = ds.Tables[0].Rows[0]["state_name"].ToString();
            string countyname = ds.Tables[0].Rows[0]["county_name"].ToString();

            if (addresstype != "0")
            {
                if (DetailsView1.Rows.Count == 0 && GridView1.Rows.Count == 0 && GridView2.Rows.Count == 0)
                {
                    scrapgrd.Visible = false;
                    con.ExecuteQuery("update record_status set scrape_status=3 where order_no='" + myVariables.Orderno + "'");
                }
                else
                {
                    ScrapDiv.Visible = true;
                }
            }
        }
    }
    protected void BtnScrapMsgNo_Click(object sender, EventArgs e)
    {
        string data = "1";
        ScrapDiv.Visible = false;

        if (DetailsView1.Rows.Count == 0 && GridView1.Rows.Count == 0 && GridView2.Rows.Count == 0)
        {
            con.ExecuteQuery("update record_status set scrape_status=3 where order_no='" + myVariables.Orderno + "'");
        }
        else
        {
            data = "0";

        }
        data = data + "0";
        con.ExecuteQuery("update record_status set view_data='" + data + "' where order_no='" + myVariables.Orderno + "'");

    }
    private decimal? TryConvertToDecimal(String incoming)
    {
        try
        {
            return Convert.ToDecimal(incoming);
        }
        catch
        {
            return null;
        }
    }

    //strmicx production
    protected void loadgridtax()
    {
        string query = "";
        if (Lblprocessname.Text == "PRODUCTION" || Lblprocessname.Text == "keyingdu")
        {
            query = "select * from tbl_search_tax_key where OrderNo='" + Lblorderno.Text + "' order by Priority asc";
        }
        else
        {
            query = "select * from tbl_search_tax_qc where OrderNo='" + Lblorderno.Text + "' order by Priority asc";
        }
        DataSet ds = gl.ExecuteQuery(query);
        gvtaxdetails.DataSource = ds.Tables[0];
        gvtaxdetails.DataBind();
        if (ds.Tables[0].Rows.Count > 0)
        {
            //GridViewRow FirstRow = gvtaxdetails.Rows[0];
            //Button btnUp = (Button)FirstRow.FindControl("btnUp");
            //btnUp.Enabled = false;
        }
        if (ds.Tables[0].Rows.Count == 0)
        {
            btnadd.Enabled = true;
        }
    }

    //strmicx production
    protected void btnadd_Click(object sender, EventArgs e)
    {
        string TaxType = null, TaxYear = null, EndYear = null, ParcelId = null, TaxBill = null;
        string DelinquentTaxes = null, SpecialAssessments = null, OrderComments = null;
        //tax   
        if (txtstrTaxType.Text == "0")
        {
            txtstrTaxType.Text = "Select Tax Type";
        }
        var str1 = "0.00";
        var str2 = "0.00";
        var str3 = "0.00";
        var str4 = "0.00";
        int fpaid = 0, fdue = 0;
        int spaid = 0, sdue = 0;
        int thpaid = 0, thdue = 0;
        int fhpaid = 0, fhdue = 0;

        try
        {
            int payfrq = 0;
            if (txtstrPaymentFrequency.Text.Trim() == "Annual")
            {
                payfrq = 1;
                if (txtstrParcelId.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                    return;
                }
                if (txtstrTaxType.Text == "Select Tax Type")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                    return;
                }
                if (txtdeliquent.Text == "Select")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Delinquent Status')", true);
                    return;
                }
                if (txtstrTaxYear.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                    return;
                }
                if (txtstrTaxYear.Text.Length < 4)
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                    return;
                }
                if (txtstrEndYear.Text != "")
                {
                    if (txtstrEndYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                        return;
                    }
                }

                if (txtTaxBill.Text == "Select Tax Bill")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Bill')", true);
                    return;
                }
                if (txtstrRemaingBlnce1.Text.ToString() != "0.00")
                {
                    double number1 = Convert.ToDouble(txtstrRemaingBlnce1.Text);
                    str1 = number1.ToString("N", CultureInfo.InvariantCulture);
                }
                else
                {
                    str1 = "0.00";
                }
                txtstrRemaingBlnce2.Text = "0.00";
                txtstrRemaingBlnce3.Text = "0.00";
                txtstrRemaingBlnce4.Text = "0.00";
                if (txtstrTaxStatus1.Text == "Paid") { fpaid = 1; }
                else if (txtstrTaxStatus1.Text == "Due") { fdue = 1; }
                txtstrTaxStatus2.Text = "";
                if (txtstrTaxStatus2.Text == "") { spaid = 0; }
                else if (txtstrTaxStatus2.Text == "") { sdue = 0; }
                txtstrTaxStatus3.Text = "";
                if (txtstrTaxStatus3.Text == "") { thpaid = 0; }
                else if (txtstrTaxStatus4.Text == "") { thdue = 0; }
                txtstrTaxStatus4.Text = "";
                if (txtstrTaxStatus4.Text == "") { fhpaid = 0; }
                else if (txtstrTaxStatus4.Text == "") { fhdue = 0; }
                if (txtstrRemaingBlnce1.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance1')", true);
                    return;
                }
                if (txtstrTaxStatus1.Text != "Select" && txtstrExmpStatus1.Text != "Select")
                {

                }
                else if (txtstrTaxStatus1.Text == "Select" || txtstrExmpStatus1.Text == "Select")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Inst.Paid/Due?1 and  Exempt/Relevy?1')", true);
                    return;
                }
                else
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Inst.Paid/Due?1 and  Exempt/Relevy?1')", true);
                    return;
                }

                if (txtstrTaxAmount1.Text != "")
                {
                    if (txtstrTaxAmount1.Text == txtstrDiscountAmount1.Text)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount1 and Discount Amount1 Should not be same')", true);
                        return;

                    }
                }
                if (txtdeliquent.Text == "Yes")
                {
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        return;
                    }
                    if (TaxType == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        return;
                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            return;
                        }
                    }


                    if (txtdelitaxstatus.Text != "" && txtpayoffgood.Text != "" && txtinitialinstall.Text != "")
                    {
                    }
                    else if (txtdelitaxstatus.Text == "" || txtpayoffgood.Text == "" || txtinitialinstall.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Deliquent Tax Year,PayOff Good Thru Date,Initial Installment Date')", true);
                        return;
                    }
                    else
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Deliquent Tax Year,PayOff Good Thru Date,Initial Installment Date')", true);
                        return;
                    }
                    if (Convert.ToDecimal(txtpayoffamount.Text) <= Convert.ToDecimal("0.00"))
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('PayOff Amount in Delinquent Status Section should be greater than zero')", true);
                        return;
                    }
                    if (txtnotapplicable.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select any one option in TaxSale-Not Applicable(Delinquent Section)')", true);
                        return;
                    }
                    if (txtnotapplicable.Text == "No")
                    {
                        if (txtdatetaxsale.Text != "" && txtlastdayred.Text != "")
                        {

                        }
                        else
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Date of Sale Tax and Last Day To Redeem')", true);
                            return;
                        }
                    }

                }

                if (txtSpcelAsst.Text == "Yes")
                {
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        return;
                    }
                    if (TaxType == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        return;
                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            return;
                        }
                    }

                    if (txtdescription.Text != "" && txtspecialassno.Text != "" && txtnoinstall.Text != "" && txtinstallpaid.Text != "" && txtamountspecial.Text != "")
                    {
                    }
                    else if ((txtdescription.Text == "" || txtspecialassno.Text == "" || txtnoinstall.Text == "" || txtinstallpaid.Text == "" || txtamountspecial.Text == ""))
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Empty Fields in Special Assessment Section')", true);
                        return;
                    }
                    else
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Empty Fields in Special Assessment Section')", true);
                        return;
                    }
                    if (Convert.ToDecimal(txtamountspecial.Text) <= Convert.ToDecimal("0.00"))
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Amount in Special Assessment Section should be greater than zero')", true);
                        return;
                    }
                }
            }
            else if (txtstrPaymentFrequency.Text.Trim() == "Semiannual")
            {
                payfrq = 2;
                if (txtstrParcelId.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                    return;
                }
                if (txtstrTaxType.Text == "Select Tax Type")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                    return;

                }
                if (txtstrTaxYear.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                    return;
                }

                if (txtdeliquent.Text == "Select")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Delinquent Status')", true);
                    return;
                }

                if (txtstrTaxYear.Text.Length < 4)
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                    return;
                }
                if (txtstrEndYear.Text != "")
                {
                    if (txtstrEndYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                        return;
                    }
                }

                if (txtTaxBill.Text == "Select Tax Bill")
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Bill')", true);
                    return;

                }
                if (txtstrRemaingBlnce1.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance1')", true);
                    return;
                }
                if (txtstrRemaingBlnce2.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance2')", true);
                    return;
                }
                if (txtstrRemaingBlnce1.Text.ToString() != "0.00")
                {
                    double number1 = Convert.ToDouble(txtstrRemaingBlnce1.Text);
                    str1 = number1.ToString("N", CultureInfo.InvariantCulture);
                }
                else
                {
                    str1 = "0.00";
                }

                if (txtstrRemaingBlnce2.Text.ToString() != "0.00")
                {
                    double number2 = Convert.ToDouble(txtstrRemaingBlnce2.Text);
                    str2 = number2.ToString("N", CultureInfo.InvariantCulture);
                }
                else
                {
                    str2 = "0.00";
                }

                txtstrRemaingBlnce3.Text = "0.00";
                txtstrRemaingBlnce4.Text = "0.00";
                if (txtstrTaxStatus1.Text == "Paid") { fpaid = 1; }
                else if (txtstrTaxStatus1.Text == "Due") { fdue = 1; }
                if (txtstrTaxStatus2.Text == "Paid") { spaid = 1; }
                else if (txtstrTaxStatus2.Text == "Due") { sdue = 1; }
                txtstrTaxStatus3.Text = "";
                if (txtstrTaxStatus3.Text == "") { thpaid = 0; }
                else if (txtstrTaxStatus4.Text == "") { thdue = 0; }
                txtstrTaxStatus4.Text = "";
                if (txtstrTaxStatus4.Text == "") { fhpaid = 0; }
                else if (txtstrTaxStatus4.Text == "") { fhdue = 0; }
                if (txtstrTaxStatus1.Text != "Select" && txtstrExmpStatus1.Text != "Select" && txtstrTaxStatus2.Text != "Select" && txtstrExmpStatus2.Text != "Select")
                {

                }
                else if (txtstrTaxStatus1.Text == "Select" || txtstrExmpStatus1.Text == "Select" || txtstrTaxStatus2.Text == "Select" || txtstrExmpStatus2.Text == "Select")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Inst.Paid/Due?1,Inst.Paid/Due?2 and Exempt/Relevy?1,Exempt/Relevy?2')", true);
                    return;
                }
                else
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Inst.Paid/Due?1,Inst.Paid/Due?2 and Exempt/Relevy?1,Exempt/Relevy?2')", true);
                    return;
                }
                if (txtstrTaxAmount1.Text != "")
                {
                    if (txtstrTaxAmount1.Text == txtstrDiscountAmount1.Text)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount1 and Discount Amount1 Should not be same')", true);
                        return;
                    }
                }
                if (txtstrTaxAmount2.Text != "")
                {
                    if (txtstrTaxAmount2.Text == txtstrDiscountAmount2.Text)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount2 and Discount Amount2 Should not be same')", true);
                        return;
                    }
                }
                if (txtdeliquent.Text == "Yes")
                {
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        return;
                    }
                    if (TaxType == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        return;
                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            return;
                        }
                    }

                    if (txtdelitaxstatus.Text != "" && txtpayoffgood.Text != "" && txtinitialinstall.Text != "")
                    {
                    }
                    else if (txtdelitaxstatus.Text == "" || txtpayoffgood.Text == "" || txtinitialinstall.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Deliquent Tax Year,PayOff Good Thru Date,Initial Installment Date')", true);
                        return;
                    }
                    else
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Deliquent Tax Year,PayOff Good Thru Date,Initial Installment Date')", true);
                        return;
                    }
                    if (Convert.ToDecimal(txtpayoffamount.Text) <= Convert.ToDecimal("0.00"))
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('PayOff Amount in Delinquent Status Section should be greater than zero')", true);
                        return;
                    }
                    if (txtnotapplicable.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select any one option in TaxSale-Not Applicable(Delinquent Section)')", true);
                        return;
                    }
                    if (txtnotapplicable.Text == "No")
                    {
                        if (txtdatetaxsale.Text != "" && txtlastdayred.Text != "")
                        {

                        }
                        else
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Date of Sale Tax and Last Day To Redeem')", true);
                            return;
                        }
                    }
                }

                if (txtSpcelAsst.Text == "Yes")
                {
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        return;
                    }
                    if (TaxType == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        return;
                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            return;
                        }
                    }

                    if (txtdescription.Text != "" && txtspecialassno.Text != "" && txtnoinstall.Text != "" && txtinstallpaid.Text != "" && txtamountspecial.Text != "")
                    {
                    }
                    else if ((txtdescription.Text == "" || txtspecialassno.Text == "" || txtnoinstall.Text == "" || txtinstallpaid.Text == "" || txtamountspecial.Text == ""))
                    {
                        if (txtnotapplicable.SelectedItem.Text == "Yes")
                        {
                            txtdatetaxsale.Enabled = false;
                            txtlastdayred.Enabled = false;
                            txtdatetaxsale.Text = "";
                            txtlastdayred.Text = "";
                        }
                        else if (txtnotapplicable.SelectedItem.Text == "No")
                        {
                            txtdatetaxsale.Enabled = true;
                            txtlastdayred.Enabled = true;

                        }
                        else
                        {
                            txtdatetaxsale.Enabled = true;
                            txtlastdayred.Enabled = true;

                        }
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Empty Fields in Special Assessment Section')", true);
                        return;

                    }
                    else
                    {
                        if (txtnotapplicable.SelectedItem.Text == "Yes")
                        {
                            txtdatetaxsale.Enabled = false;
                            txtlastdayred.Enabled = false;
                            txtdatetaxsale.Text = "";
                            txtlastdayred.Text = "";
                        }
                        else if (txtnotapplicable.SelectedItem.Text == "No")
                        {
                            txtdatetaxsale.Enabled = true;
                            txtlastdayred.Enabled = true;

                        }
                        else
                        {
                            txtdatetaxsale.Enabled = true;
                            txtlastdayred.Enabled = true;

                        }
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Empty Fields in Special Assessment Section')", true);
                        return;
                    }
                    if (Convert.ToDecimal(txtamountspecial.Text) <= Convert.ToDecimal("0.00"))
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Amount in Special Assessment Section should be greater than zero')", true);
                        return;
                    }
                }
            }
            else if (txtstrPaymentFrequency.Text.Trim() == "Quarterly")
            {
                payfrq = 3;
                if (txtstrParcelId.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                    return;
                }
                if (txtstrTaxType.Text == "Select Tax Type")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                    return;

                }
                if (txtstrTaxYear.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                    return;
                }

                if (txtdeliquent.Text == "Select")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Delinquent Status')", true);
                    return;
                }

                if (txtstrTaxYear.Text.Length < 4)
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                    return;
                }
                if (txtstrEndYear.Text != "")
                {
                    if (txtstrEndYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                        return;
                    }
                }


                if (txtTaxBill.Text == "Select Tax Bill")
                {

                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Bill')", true);
                    return;

                }
                if (txtstrRemaingBlnce1.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance1')", true);
                    return;
                }
                if (txtstrRemaingBlnce2.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance2')", true);
                    return;
                }
                if (txtstrRemaingBlnce3.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance3')", true);
                    return;
                }
                if (txtstrRemaingBlnce4.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance4')", true);
                    return;
                }
                if (txtstrRemaingBlnce1.Text.ToString() != "0.00")
                {
                    double number1 = Convert.ToDouble(txtstrRemaingBlnce1.Text);
                    str1 = number1.ToString("N", CultureInfo.InvariantCulture);
                }
                else
                {
                    str1 = "0.00";
                }

                if (txtstrRemaingBlnce2.Text.ToString() != "0.00")
                {
                    double number2 = Convert.ToDouble(txtstrRemaingBlnce2.Text);
                    str2 = number2.ToString("N", CultureInfo.InvariantCulture);
                }
                else
                {
                    str2 = "0.00";
                }

                if (txtstrRemaingBlnce3.Text.ToString() != "0.00")
                {
                    double number3 = Convert.ToDouble(txtstrRemaingBlnce3.Text);
                    str3 = number3.ToString("N", CultureInfo.InvariantCulture);
                }
                else
                {
                    str3 = "0.00";
                }

                if (txtstrRemaingBlnce4.Text.ToString() != "0.00")
                {
                    double number4 = Convert.ToDouble(txtstrRemaingBlnce4.Text);
                    str4 = number4.ToString("N", CultureInfo.InvariantCulture);
                }
                else
                {
                    str4 = "0.00";
                }
                if (txtstrTaxStatus1.Text == "Paid") { fpaid = 1; }
                else if (txtstrTaxStatus1.Text == "Due") { fdue = 1; }
                if (txtstrTaxStatus2.Text == "Paid") { spaid = 1; }
                else if (txtstrTaxStatus2.Text == "Due") { sdue = 1; }
                if (txtstrTaxStatus3.Text == "Paid") { thpaid = 1; }
                else if (txtstrTaxStatus3.Text == "Due") { thdue = 1; }
                if (txtstrTaxStatus4.Text == "Paid") { fhpaid = 1; }
                else if (txtstrTaxStatus4.Text == "Due") { fhdue = 1; }
                if (txtstrTaxStatus1.Text != "Select" && txtstrExmpStatus1.Text != "Select" && txtstrTaxStatus2.Text != "Select" && txtstrExmpStatus2.Text != "Select" && txtstrTaxStatus3.Text != "Select" && txtstrExmpStatus3.Text != "Select" && txtstrTaxStatus4.Text != "Select" && txtstrExmpStatus4.Text != "Select")
                {

                }
                else if (txtstrTaxStatus1.Text == "Select" || txtstrExmpStatus1.Text == "Select" || txtstrTaxStatus2.Text == "Select" || txtstrExmpStatus2.Text == "Select" || txtstrTaxStatus3.Text == "Select" || txtstrExmpStatus3.Text == "Select" || txtstrTaxStatus4.Text == "Select" || txtstrExmpStatus4.Text == "Select")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Inst.Paid/Due?1,Inst.Paid/Due?2,Inst.Paid/Due?3,Inst.Paid/Due?4 and Exempt/Relevy?1,Exempt/Relevy?2,Exempt/Relevy?3,Exempt/Relevy?4')", true);
                    return;
                }
                else
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Inst.Paid/Due?1,Inst.Paid/Due?2,Inst.Paid/Due?3,Inst.Paid/Due?4 and Exempt/Relevy?1,Exempt/Relevy?2,Exempt/Relevy?3,Exempt/Relevy?4')", true);
                    return;
                }
                if (txtstrTaxAmount1.Text != "")
                {
                    if (txtstrTaxAmount1.Text == txtstrDiscountAmount1.Text)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount1 and Discount Amount1 Should not be same')", true);
                        return;

                    }

                }
                if (txtstrTaxAmount2.Text != "")
                {
                    if (txtstrTaxAmount2.Text == txtstrDiscountAmount2.Text)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount2 and Discount Amount2 Should not be same')", true);
                        return;
                    }
                }
                if (txtstrTaxAmount3.Text != "")
                {
                    if (txtstrTaxAmount3.Text == txtstrDiscountAmount3.Text)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount3 and Discount Amount3 Should not be same')", true);
                        return;
                    }
                }
                if (txtstrTaxAmount4.Text != "")
                {
                    if (txtstrTaxAmount4.Text == txtstrDiscountAmount4.Text)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount4 and Discount Amount4 Should not be same')", true);
                        return;
                    }
                }
                if (txtdeliquent.Text == "Yes")
                {
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        return;
                    }
                    if (TaxType == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        return;

                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            return;
                        }
                    }


                    if (txtdelitaxstatus.Text != "" && txtpayoffgood.Text != "" && txtinitialinstall.Text != "")
                    {
                    }
                    else if (txtdelitaxstatus.Text == "" || txtpayoffgood.Text == "" || txtinitialinstall.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Deliquent Tax Year,PayOff Good Thru Date,Initial Installment Date')", true);
                        return;
                    }
                    else
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Deliquent Tax Year,PayOff Good Thru Date,Initial Installment Date')", true);
                        return;
                    }
                    if (Convert.ToDecimal(txtpayoffamount.Text) <= Convert.ToDecimal("0.00"))
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('PayOff Amount in Delinquent Status Section should be greater than zero')", true);
                        return;
                    }
                    if (txtnotapplicable.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select any one option in TaxSale-Not Applicable(Delinquent Section)')", true);
                        return;
                    }
                    if (txtnotapplicable.Text == "No")
                    {
                        if (txtdatetaxsale.Text != "" && txtlastdayred.Text != "")
                        {

                        }
                        else
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Date of Sale Tax and Last Day To Redeem')", true);
                            return;
                        }
                    }
                }

                if (txtSpcelAsst.Text == "Yes")
                {
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        return;
                    }
                    if (TaxType == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        return;
                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            return;
                        }
                    }

                    if (txtdescription.Text != "" && txtspecialassno.Text != "" && txtnoinstall.Text != "" && txtinstallpaid.Text != "" && txtamountspecial.Text != "")
                    {
                    }
                    else if ((txtdescription.Text == "" || txtspecialassno.Text == "" || txtnoinstall.Text == "" || txtinstallpaid.Text == "" || txtamountspecial.Text == ""))
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Empty Fields in Special Assessment Section')", true);
                        return;
                    }
                    else
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Empty Fields in Special Assessment Section')", true);
                        return;
                    }
                    if (Convert.ToDecimal(txtamountspecial.Text) <= Convert.ToDecimal("0.00"))
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Amount in Special Assessment Section should be greater than zero')", true);
                        return;
                    }
                }
            }
            else
            {
                if (txtstrParcelId.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                    return;
                }
                if (txtstrTaxType.Text == "Select Tax Type")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Tax Type')", true);
                    return;
                }
                if (txtstrTaxYear.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                    return;
                }
                if (txtdeliquent.Text == "Select")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Delinquent Status')", true);
                    return;
                }
                if (txtstrTaxYear.Text.Length < 4)
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                    return;
                }
                if (txtstrEndYear.Text != "")
                {
                    if (txtstrEndYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                        return;
                    }
                }

                payfrq = 0;
                ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Any One Option in Payment Frequency')", true);
                return;
            }



            //int fpaid = 0, fdue = 0;
            //int spaid = 0, sdue = 0;
            //int thpaid = 0, thdue = 0;
            //int fhpaid = 0, fhdue = 0;

            //if (txtstrTaxStatus1.Text == "Paid") { fpaid = 1; }
            //else if (txtstrTaxStatus1.Text == "Due") { fdue = 1; }
            //if (txtstrTaxStatus2.Text == "Paid") { spaid = 1; }
            //else if (txtstrTaxStatus2.Text == "Due") { sdue = 1; }
            //if (txtstrTaxStatus3.Text == "Paid") { thpaid = 1; }
            //else if (txtstrTaxStatus3.Text == "Due") { thdue = 1; }
            //if (txtstrTaxStatus4.Text == "Paid") { fhpaid = 1; }
            //else if (txtstrTaxStatus4.Text == "Due") { fhdue = 1; }


            if (txtstrTaxType.Text.Trim() != string.Empty)
            {
                TaxType = txtstrTaxType.Text.Trim();
            }

            if (txtTaxBill.Text.Trim() != string.Empty)
            { TaxBill = txtTaxBill.Text.Trim(); }

            if (txtstrTaxYear.Text.Trim() != string.Empty)
            { TaxYear = txtstrTaxYear.Text.Trim(); }
            if (txtstrEndYear.Text.Trim() != string.Empty)
            { EndYear = txtstrEndYear.Text.Trim(); }
            if (txtstrParcelId.Text.Trim() != string.Empty)
            { ParcelId = txtstrParcelId.Text.Trim(); }
            if (txtdeliquent.Text.Trim() != string.Empty)
            { DelinquentTaxes = txtdeliquent.Text.Trim(); }
            //Special Assmnt
            if (txtSpcelAsst.Text.Trim() != string.Empty)
            { SpecialAssessments = txtSpcelAsst.Text.Trim(); }


            if (txtnotapplicable.SelectedItem.Text == "Yes")
            {
                txtdatetaxsale.Enabled = false;
                txtlastdayred.Enabled = false;
                txtdatetaxsale.Text = "";
                txtlastdayred.Text = "";
            }
            else if (txtnotapplicable.SelectedItem.Text == "No")
            {
                txtdatetaxsale.Enabled = true;
                txtlastdayred.Enabled = true;

            }
            else
            {
                txtdatetaxsale.Enabled = true;
                txtlastdayred.Enabled = true;

            }
            if (txtdeliquent.Text == "Select")
            {
                txtdeliquent.Text = "";
            }
            //Special Assmnt
            if (txtSpcelAsst.Text == "Select")
            {
                txtSpcelAsst.Text = "";
            }




            string query = "";

            if (TaxType != "" && ParcelId != "")
            {
                query = "select TaxType,ParcelId from tbl_search_tax_key where TaxType='" + TaxType + "' and ParcelId = '" + ParcelId + "'";
            }
            DataTable dt = new DataTable();
            MySqlConnection con = new MySqlConnection(ConfigurationManager.ConnectionStrings["MysqlConnection"].ConnectionString);
            MySqlCommand cmd = new MySqlCommand(query, con);
            MySqlDataAdapter sda = new MySqlDataAdapter(cmd);
            sda.Fill(dt);
            string ftaxtype1 = "";
            string fparcelid1 = "";
            foreach (DataRow row in dt.Rows)
            {
                ftaxtype1 = row["TaxType"].ToString();
                fparcelid1 = row["ParcelId"].ToString();
            }


            if (ftaxtype1 != "" && fparcelid1 != "")
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax ID and Tax Type Combination Already Exists')", true);
                return;
            }


            //txtstrRemaingBlnce1.Text = hdntxtbxTaksit1.Value;
            //txtstrRemaingBlnce2.Text = hdntxtbxTaksit2.Value;
            //txtstrRemaingBlnce3.Text = hdntxtbxTaksit3.Value;
            //txtstrRemaingBlnce4.Text = hdntxtbxTaksit4.Value;


            if (TaxType != "Select Tax Type")
            {
                int result = gl.InsertTaxData(Lblorderno.Text.Trim(), TaxType, TaxYear, EndYear, ParcelId, DelinquentTaxes, SpecialAssessments, TaxBill, OrderComments,
                                              txtstrTaxStatus1.Text.Trim(), payfrq,
                                              fpaid, fdue, txtstrTaxAmount1.Text.Trim(), txtstrDiscountAmount1.Text.Trim(), txtstrAmountPaid1.Text.Trim(), str1.Trim(), txtstrExmpStatus1.Text.Trim(),
                                              spaid, sdue, txtstrTaxAmount2.Text.Trim(), txtstrDiscountAmount2.Text.Trim(), txtstrAmountPaid2.Text.Trim(), str2.Trim(), txtstrExmpStatus2.Text.Trim(),
                                              thpaid, thdue, txtstrTaxAmount3.Text.Trim(), txtstrDiscountAmount3.Text.Trim(), txtstrAmountPaid3.Text.Trim(), str3.Trim(), txtstrExmpStatus3.Text.Trim(),
                                              fhpaid, fhdue, txtstrTaxAmount4.Text.Trim(), txtstrDiscountAmount4.Text.Trim(), txtstrAmountPaid4.Text.Trim(), str4.Trim(), txtstrExmpStatus4.Text.Trim(),
                                              txtdescription.Text.Trim(), txtspecialassno.Text.Trim(), txtnoinstall.Text.Trim(), txtinstallpaid.Text.Trim(), txtamountspecial.Text.Trim(),
                                              txtdelitaxstatus.Text.Trim(), txtpayoffamount.Text.Trim(), txtpayoffgood.Text.Trim(), txtinitialinstall.Text.Trim(), txtnotapplicable.SelectedItem.Text,
                                              txtdatetaxsale.Text.Trim(), txtlastdayred.Text.Trim(), "Insert", Lblprocessname.Text, "", SessionHandler.UserName);
                cleartaxfields();
                loadgridtax();
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Data Inserted Successfully')", true);
                return;
            }
            if (TaxType == "Select Tax Type")
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                return;

            }
        }

        catch (Exception ex)
        {

        }
    }

    public void cleartaxfields()
    {
        //tax general info
        txtstrTaxType.Text = null;
        //TaxBill
        txtTaxBill.Text = null;
        txtstrTaxYear.Text = null;
        txtstrEndYear.Text = null;
        txtstrParcelId.Text = null;
        //txtordercomments.Text = null;

        txtstrPaymentFrequency.Text = "Select";
        txtdeliquent.Text = "Select";

        //Special Assmnt
        txtSpcelAsst.Text = "Select";

        //payment frequency section
        txtstrTaxStatus1.Text = "Select";
        txtstrTaxAmount1.Text = null;
        txtstrDiscountAmount1.Text = null;
        txtstrAmountPaid1.Text = null;
        txtstrRemaingBlnce1.Text = null;
        txtstrExmpStatus1.Text = null;

        txtstrTaxStatus2.Text = "Select";
        txtstrTaxAmount2.Text = null;
        txtstrDiscountAmount2.Text = null;
        txtstrAmountPaid2.Text = null;
        txtstrRemaingBlnce2.Text = null;
        txtstrExmpStatus2.Text = null;

        txtstrTaxStatus3.Text = "Select";
        txtstrTaxAmount3.Text = null;
        txtstrDiscountAmount3.Text = null;
        txtstrAmountPaid3.Text = null;
        txtstrRemaingBlnce3.Text = null;
        txtstrExmpStatus3.Text = null;

        txtstrTaxStatus4.Text = "Select";
        txtstrTaxAmount4.Text = null;
        txtstrDiscountAmount4.Text = null;
        txtstrAmountPaid4.Text = null;
        txtstrRemaingBlnce4.Text = null;
        txtstrExmpStatus4.Text = null;

        //Special assessment section
        txtdescription.Text = null;
        txtspecialassno.Text = null;
        txtnoinstall.Text = null;
        txtinstallpaid.Text = null;
        txtamountspecial.Text = null;

        //delinquent tax details
        txtdelitaxstatus.Text = null;
        txtpayoffamount.Text = null;
        txtpayoffgood.Text = null;
        txtinitialinstall.Text = null;
        txtnotapplicable.Text = "Select";
        txtdatetaxsale.Text = null;
        txtlastdayred.Text = null;
    }

    protected void gvtaxdetails_RowEditing(object sender, GridViewEditEventArgs e)
    {
        try
        {
            gvtaxdetails.EditIndex = e.NewEditIndex;
            //loadgridtax();
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    protected void gvtaxdetails_RowUpdating(object sender, GridViewUpdateEventArgs e)
    {
        try
        {
            gvtaxdetails.EditIndex = -1;
            //loadgridtax();
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    protected void gvtaxdetails_RowCommand(object sender, GridViewCommandEventArgs e)
    {
        try
        {
            string GVCommand = e.CommandName.ToLower();

            if (GVCommand == "edit")
            {
                string Item_ID = (e.CommandArgument).ToString();
                GridViewRow row = (GridViewRow)(((LinkButton)e.CommandSource).NamingContainer);
                int rid = row.RowIndex;
                string query = "";
                string query1 = "";
                string query2 = "";

                if (Lblprocessname.Text == "PRODUCTION" || Lblprocessname.Text == "keyingdu")
                {
                    query1 = "select DelinquentStatus,SpecialAssessment from tbl_search_tax_key where searchkey_Id = '" + Item_ID + "'";
                    DataTable dt = new DataTable();
                    MySqlConnection con = new MySqlConnection(ConfigurationManager.ConnectionStrings["MysqlConnection"].ConnectionString);
                    MySqlCommand cmd = new MySqlCommand(query1, con);
                    MySqlDataAdapter sda = new MySqlDataAdapter(cmd);
                    sda.Fill(dt);

                    string fDelinquent1 = "";
                    string fSpecial1 = "";
                    foreach (DataRow row1 in dt.Rows)
                    {
                        fDelinquent1 = row1["DelinquentStatus"].ToString();
                        fSpecial1 = row1["SpecialAssessment"].ToString();
                    }
                    if ((fDelinquent1 == "Select" || fDelinquent1 == "No") && (fSpecial1 == "Select" || fSpecial1 == "No"))
                    {
                        query = "select * from tbl_search_tax_key where searchkey_Id = '" + Item_ID + "'";

                        DataSet ds = new DataSet();
                        ds = gl.ExecuteQuery(query);


                        string fpaid = ds.Tables[0].Rows[0]["firstpaid"].ToString(), fdue = ds.Tables[0].Rows[0]["firstdue"].ToString();
                        string spaid = ds.Tables[0].Rows[0]["secoundpaid"].ToString(), sdue = ds.Tables[0].Rows[0]["secounddue"].ToString();
                        string thpaid = ds.Tables[0].Rows[0]["thirdpaid"].ToString(), thdue = ds.Tables[0].Rows[0]["thirddue"].ToString();
                        string fhpaid = ds.Tables[0].Rows[0]["fourthpaid"].ToString(), fhdue = ds.Tables[0].Rows[0]["fourthdue"].ToString();

                        if (fpaid == "1") { txtstrTaxStatus1.Text = "Paid"; }
                        else if (fdue == "1") { txtstrTaxStatus1.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus1.Text = "Select";
                        }
                        if (spaid == "1") { txtstrTaxStatus2.Text = "Paid"; }

                        else if (sdue == "1") { txtstrTaxStatus2.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus2.Text = "Select";
                        }
                        if (thpaid == "1") { txtstrTaxStatus3.Text = "Paid"; }
                        else if (thdue == "1") { txtstrTaxStatus3.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus3.Text = "Select";
                        }
                        if (fhpaid == "1") { txtstrTaxStatus4.Text = "Paid"; }
                        else if (fhdue == "1") { txtstrTaxStatus4.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus4.Text = "Select";
                        }

                        //tax general details
                        txtstrTaxType.Text = ds.Tables[0].Rows[0]["TaxType"].ToString().Replace("&nbsp;", "");

                        //TaxBill
                        txtTaxBill.Text = ds.Tables[0].Rows[0]["TaxBill"].ToString().Replace("&nbsp;", "");

                        txtstrTaxYear.Text = ds.Tables[0].Rows[0]["TaxYear"].ToString().Replace("&nbsp;", "");
                        txtstrEndYear.Text = ds.Tables[0].Rows[0]["EndYear"].ToString().Replace("&nbsp;", "");
                        txtstrParcelId.Text = ds.Tables[0].Rows[0]["ParcelId"].ToString().Replace("&nbsp;", "");

                        //txtdelitaxstatus.Text = ds.Tables[0].Rows[0]["DelinquentTaxYear"].ToString().Replace("&nbsp;", "");
                        txtdeliquent.Text = ds.Tables[0].Rows[0]["DelinquentStatus"].ToString().Replace("&nbsp;", "");
                        txtSpcelAsst.Text = ds.Tables[0].Rows[0]["SpecialAssessment"].ToString().Replace("&nbsp;", "");

                        var deliq = ds.Tables[0].Rows[0]["DelinquentStatus"].ToString().Replace("&nbsp;", "");
                        var Special = ds.Tables[0].Rows[0]["SpecialAssessment"].ToString().Replace("&nbsp;", "");

                        if (deliq == "Yes")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtdeliquent.Text = "Yes";
                        }

                        if (Special == "Yes")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtSpcelAsst.Text = "Yes";
                        }
                        //paymentfrequency
                        var test = ds.Tables[0].Rows[0]["payfreq"].ToString().Replace("&nbsp;", "");



                        if (test == "1")
                        {

                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Annual";
                        }
                        else if (test == "2")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Semiannual";
                        }
                        else if (test == "3")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Quarterly";
                        }
                        else
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Select";
                        }


                        //tax payment details                
                        txtstrTaxAmount1.Text = ds.Tables[0].Rows[0]["TaxAmount"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount1.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid1.Text = ds.Tables[0].Rows[0]["TaxAmountPaid"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce1.Text = ds.Tables[0].Rows[0]["RemainingBalance"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus1.Text = ds.Tables[0].Rows[0]["ExemptionStatus"].ToString().Replace("&nbsp;", "");

                        txtstrTaxAmount2.Text = ds.Tables[0].Rows[0]["TaxAmount1"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount2.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount1"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid2.Text = ds.Tables[0].Rows[0]["TaxAmountPaid1"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce2.Text = ds.Tables[0].Rows[0]["RemainingBalance1"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus2.Text = ds.Tables[0].Rows[0]["ExemptionStatus1"].ToString().Replace("&nbsp;", "");


                        txtstrTaxAmount3.Text = ds.Tables[0].Rows[0]["TaxAmount2"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount3.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount2"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid3.Text = ds.Tables[0].Rows[0]["TaxAmountPaid2"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce3.Text = ds.Tables[0].Rows[0]["RemainingBalance2"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus3.Text = ds.Tables[0].Rows[0]["ExemptionStatus2"].ToString().Replace("&nbsp;", "");


                        txtstrTaxAmount4.Text = ds.Tables[0].Rows[0]["TaxAmount3"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount4.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount3"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid4.Text = ds.Tables[0].Rows[0]["TaxAmountPaid3"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce4.Text = ds.Tables[0].Rows[0]["RemainingBalance3"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus4.Text = ds.Tables[0].Rows[0]["ExemptionStatus3"].ToString().Replace("&nbsp;", "");

                        string remain1 = txtstrRemaingBlnce1.Text.Substring(0, 1);
                        string remain2 = txtstrRemaingBlnce2.Text.Substring(0, 1);
                        string remain3 = txtstrRemaingBlnce3.Text.Substring(0, 1);
                        string remain4 = txtstrRemaingBlnce4.Text.Substring(0, 1);
                        if (Convert.ToChar(remain1) == '-')
                        {
                            txtstrRemaingBlnce1.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce1.Enabled = true;
                        }
                        if (Convert.ToChar(remain2) == '-')
                        {
                            txtstrRemaingBlnce2.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce2.Enabled = true;
                        }
                        if (Convert.ToChar(remain3) == '-')
                        {
                            txtstrRemaingBlnce3.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce3.Enabled = true;
                        }
                        if (Convert.ToChar(remain4) == '-')
                        {
                            txtstrRemaingBlnce4.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce4.Enabled = true;
                        }

                    }
                    else if (fDelinquent1 == "Select" || fDelinquent1 == "No")
                    {
                        query = "select * from tbl_search_tax_key B join tbl_search_key_special_assessment_data C on B.OrderNo = C.ordernumber and B.searchkey_Id=C.special_key_Id where B.searchkey_Id = '" + Item_ID + "'";
                        DataSet ds = new DataSet();
                        ds = gl.ExecuteQuery(query);


                        string fpaid = ds.Tables[0].Rows[0]["firstpaid"].ToString(), fdue = ds.Tables[0].Rows[0]["firstdue"].ToString();
                        string spaid = ds.Tables[0].Rows[0]["secoundpaid"].ToString(), sdue = ds.Tables[0].Rows[0]["secounddue"].ToString();
                        string thpaid = ds.Tables[0].Rows[0]["thirdpaid"].ToString(), thdue = ds.Tables[0].Rows[0]["thirddue"].ToString();
                        string fhpaid = ds.Tables[0].Rows[0]["fourthpaid"].ToString(), fhdue = ds.Tables[0].Rows[0]["fourthdue"].ToString();

                        if (fpaid == "1") { txtstrTaxStatus1.Text = "Paid"; }
                        else if (fdue == "1") { txtstrTaxStatus1.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus1.Text = "Select";
                        }
                        if (spaid == "1") { txtstrTaxStatus2.Text = "Paid"; }

                        else if (sdue == "1") { txtstrTaxStatus2.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus2.Text = "Select";
                        }
                        if (thpaid == "1") { txtstrTaxStatus3.Text = "Paid"; }
                        else if (thdue == "1") { txtstrTaxStatus3.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus3.Text = "Select";
                        }
                        if (fhpaid == "1") { txtstrTaxStatus4.Text = "Paid"; }
                        else if (fhdue == "1") { txtstrTaxStatus4.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus4.Text = "Select";
                        }

                        //tax general details
                        txtstrTaxType.Text = ds.Tables[0].Rows[0]["TaxType"].ToString().Replace("&nbsp;", "");

                        //TaxBill
                        txtTaxBill.Text = ds.Tables[0].Rows[0]["TaxBill"].ToString().Replace("&nbsp;", "");

                        txtstrTaxYear.Text = ds.Tables[0].Rows[0]["TaxYear"].ToString().Replace("&nbsp;", "");
                        txtstrEndYear.Text = ds.Tables[0].Rows[0]["EndYear"].ToString().Replace("&nbsp;", "");
                        txtstrParcelId.Text = ds.Tables[0].Rows[0]["ParcelId"].ToString().Replace("&nbsp;", "");

                        txtdeliquent.Text = ds.Tables[0].Rows[0]["DelinquentStatus"].ToString().Replace("&nbsp;", "");
                        //Special Assmnt
                        txtSpcelAsst.Text = ds.Tables[0].Rows[0]["SpecialAssessment"].ToString().Replace("&nbsp;", "");
                        var Special = ds.Tables[0].Rows[0]["SpecialAssessment"].ToString().Replace("&nbsp;", "");

                        if (Special == "Yes")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtSpcelAsst.Text = "Yes";
                        }
                        //paymentfrequency
                        var test = ds.Tables[0].Rows[0]["payfreq"].ToString().Replace("&nbsp;", "");

                        if (test == "1")
                        {

                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Annual";
                        }
                        else if (test == "2")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Semiannual";
                        }
                        else if (test == "3")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Quarterly";
                        }
                        else
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Select";
                        }

                        if (ds.Tables[0].Rows[0]["SpecialAssessment"].ToString().Replace("&nbsp;", "") == "")
                        {
                            txtdescription.Text = "";
                            txtspecialassno.Text = "";
                            txtnoinstall.Text = "";
                            txtinstallpaid.Text = "";
                            txtamountspecial.Text = "0.00";
                        }
                        else if (ds.Tables[0].Rows[0]["SpecialAssessment"].ToString().Replace("&nbsp;", "") == "No")
                        {
                            txtdescription.Text = "";
                            txtspecialassno.Text = "";
                            txtnoinstall.Text = "";
                            txtinstallpaid.Text = "";
                            txtamountspecial.Text = "0.00";
                        }

                        //tax payment details                
                        txtstrTaxAmount1.Text = ds.Tables[0].Rows[0]["TaxAmount"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount1.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid1.Text = ds.Tables[0].Rows[0]["TaxAmountPaid"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce1.Text = ds.Tables[0].Rows[0]["RemainingBalance"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus1.Text = ds.Tables[0].Rows[0]["ExemptionStatus"].ToString().Replace("&nbsp;", "");

                        txtstrTaxAmount2.Text = ds.Tables[0].Rows[0]["TaxAmount1"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount2.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount1"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid2.Text = ds.Tables[0].Rows[0]["TaxAmountPaid1"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce2.Text = ds.Tables[0].Rows[0]["RemainingBalance1"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus2.Text = ds.Tables[0].Rows[0]["ExemptionStatus1"].ToString().Replace("&nbsp;", "");


                        txtstrTaxAmount3.Text = ds.Tables[0].Rows[0]["TaxAmount2"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount3.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount2"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid3.Text = ds.Tables[0].Rows[0]["TaxAmountPaid2"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce3.Text = ds.Tables[0].Rows[0]["RemainingBalance2"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus3.Text = ds.Tables[0].Rows[0]["ExemptionStatus2"].ToString().Replace("&nbsp;", "");


                        txtstrTaxAmount4.Text = ds.Tables[0].Rows[0]["TaxAmount3"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount4.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount3"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid4.Text = ds.Tables[0].Rows[0]["TaxAmountPaid3"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce4.Text = ds.Tables[0].Rows[0]["RemainingBalance3"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus4.Text = ds.Tables[0].Rows[0]["ExemptionStatus3"].ToString().Replace("&nbsp;", "");

                        //Special assessment section
                        txtdescription.Text = ds.Tables[0].Rows[0]["description"].ToString().Replace("&nbsp;", "");
                        txtspecialassno.Text = ds.Tables[0].Rows[0]["Special_assessment_number"].ToString().Replace("&nbsp;", "");
                        txtnoinstall.Text = ds.Tables[0].Rows[0]["number_of_installment"].ToString().Replace("&nbsp;", "");
                        txtinstallpaid.Text = ds.Tables[0].Rows[0]["installments_paid"].ToString().Replace("&nbsp;", "");
                        txtamountspecial.Text = ds.Tables[0].Rows[0]["Amount"].ToString().Replace("&nbsp;", "");


                        string remain1 = txtstrRemaingBlnce1.Text.Substring(0, 1);
                        string remain2 = txtstrRemaingBlnce2.Text.Substring(0, 1);
                        string remain3 = txtstrRemaingBlnce3.Text.Substring(0, 1);
                        string remain4 = txtstrRemaingBlnce4.Text.Substring(0, 1);
                        if (Convert.ToChar(remain1) == '-')
                        {
                            txtstrRemaingBlnce1.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce1.Enabled = true;
                        }
                        if (Convert.ToChar(remain2) == '-')
                        {
                            txtstrRemaingBlnce2.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce2.Enabled = true;
                        }
                        if (Convert.ToChar(remain3) == '-')
                        {
                            txtstrRemaingBlnce3.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce3.Enabled = true;
                        }
                        if (Convert.ToChar(remain4) == '-')
                        {
                            txtstrRemaingBlnce4.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce4.Enabled = true;
                        }

                    }
                    else if (fSpecial1 == "Select" || fSpecial1 == "No")
                    {
                        query = "select * from tbl_search_tax_key A join tbl_search_keying_delinquent_data B on A.OrderNo = B.ordernumber and A.searchkey_Id =B.searchkey_Id where A.searchkey_Id = '" + Item_ID + "'";
                        DataSet ds = new DataSet();
                        ds = gl.ExecuteQuery(query);


                        string fpaid = ds.Tables[0].Rows[0]["firstpaid"].ToString(), fdue = ds.Tables[0].Rows[0]["firstdue"].ToString();
                        string spaid = ds.Tables[0].Rows[0]["secoundpaid"].ToString(), sdue = ds.Tables[0].Rows[0]["secounddue"].ToString();
                        string thpaid = ds.Tables[0].Rows[0]["thirdpaid"].ToString(), thdue = ds.Tables[0].Rows[0]["thirddue"].ToString();
                        string fhpaid = ds.Tables[0].Rows[0]["fourthpaid"].ToString(), fhdue = ds.Tables[0].Rows[0]["fourthdue"].ToString();

                        if (fpaid == "1") { txtstrTaxStatus1.Text = "Paid"; }
                        else if (fdue == "1") { txtstrTaxStatus1.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus1.Text = "Select";
                        }
                        if (spaid == "1") { txtstrTaxStatus2.Text = "Paid"; }

                        else if (sdue == "1") { txtstrTaxStatus2.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus2.Text = "Select";
                        }
                        if (thpaid == "1") { txtstrTaxStatus3.Text = "Paid"; }
                        else if (thdue == "1") { txtstrTaxStatus3.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus3.Text = "Select";
                        }
                        if (fhpaid == "1") { txtstrTaxStatus4.Text = "Paid"; }
                        else if (fhdue == "1") { txtstrTaxStatus4.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus4.Text = "Select";
                        }

                        //tax general details
                        txtstrTaxType.Text = ds.Tables[0].Rows[0]["TaxType"].ToString().Replace("&nbsp;", "");

                        //TaxBill
                        txtTaxBill.Text = ds.Tables[0].Rows[0]["TaxBill"].ToString().Replace("&nbsp;", "");

                        txtstrTaxYear.Text = ds.Tables[0].Rows[0]["TaxYear"].ToString().Replace("&nbsp;", "");
                        txtstrEndYear.Text = ds.Tables[0].Rows[0]["EndYear"].ToString().Replace("&nbsp;", "");
                        txtstrParcelId.Text = ds.Tables[0].Rows[0]["ParcelId"].ToString().Replace("&nbsp;", "");

                        txtdelitaxstatus.Text = ds.Tables[0].Rows[0]["DelinquentTaxYear"].ToString().Replace("&nbsp;", "");
                        txtdeliquent.Text = ds.Tables[0].Rows[0]["DelinquentStatus"].ToString().Replace("&nbsp;", "");
                        txtSpcelAsst.Text = ds.Tables[0].Rows[0]["SpecialAssessment"].ToString().Replace("&nbsp;", "");

                        var deliq = ds.Tables[0].Rows[0]["DelinquentStatus"].ToString().Replace("&nbsp;", "");


                        if (deliq == "Yes")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtdeliquent.Text = "Yes";
                        }

                        //paymentfrequency
                        var test = ds.Tables[0].Rows[0]["payfreq"].ToString().Replace("&nbsp;", "");



                        if (test == "1")
                        {

                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Annual";
                        }
                        else if (test == "2")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Semiannual";
                        }
                        else if (test == "3")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Quarterly";
                        }
                        else
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Select";
                        }
                        if (ds.Tables[0].Rows[0]["DelinquentStatus"].ToString().Replace("&nbsp;", "") == "")
                        {
                            txtdelitaxstatus.Text = "";
                            txtpayoffamount.Text = "0.00";
                            txtpayoffgood.Text = "";
                            txtinitialinstall.Text = "";
                            txtnotapplicable.Text = "";
                            txtdatetaxsale.Text = "";
                            txtlastdayred.Text = "";
                        }
                        else if (ds.Tables[0].Rows[0]["DelinquentStatus"].ToString().Replace("&nbsp;", "") == "No")
                        {
                            txtdelitaxstatus.Text = "";
                            txtpayoffamount.Text = "0.00";
                            txtpayoffgood.Text = "";
                            txtinitialinstall.Text = "";
                            txtnotapplicable.Text = "";
                            txtdatetaxsale.Text = "";
                            txtlastdayred.Text = "";
                        }


                        //tax payment details                
                        txtstrTaxAmount1.Text = ds.Tables[0].Rows[0]["TaxAmount"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount1.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid1.Text = ds.Tables[0].Rows[0]["TaxAmountPaid"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce1.Text = ds.Tables[0].Rows[0]["RemainingBalance"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus1.Text = ds.Tables[0].Rows[0]["ExemptionStatus"].ToString().Replace("&nbsp;", "");

                        txtstrTaxAmount2.Text = ds.Tables[0].Rows[0]["TaxAmount1"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount2.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount1"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid2.Text = ds.Tables[0].Rows[0]["TaxAmountPaid1"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce2.Text = ds.Tables[0].Rows[0]["RemainingBalance1"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus2.Text = ds.Tables[0].Rows[0]["ExemptionStatus1"].ToString().Replace("&nbsp;", "");


                        txtstrTaxAmount3.Text = ds.Tables[0].Rows[0]["TaxAmount2"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount3.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount2"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid3.Text = ds.Tables[0].Rows[0]["TaxAmountPaid2"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce3.Text = ds.Tables[0].Rows[0]["RemainingBalance2"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus3.Text = ds.Tables[0].Rows[0]["ExemptionStatus2"].ToString().Replace("&nbsp;", "");


                        txtstrTaxAmount4.Text = ds.Tables[0].Rows[0]["TaxAmount3"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount4.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount3"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid4.Text = ds.Tables[0].Rows[0]["TaxAmountPaid3"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce4.Text = ds.Tables[0].Rows[0]["RemainingBalance3"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus4.Text = ds.Tables[0].Rows[0]["ExemptionStatus3"].ToString().Replace("&nbsp;", "");



                        //delinquent tax details

                        txtpayoffamount.Text = ds.Tables[0].Rows[0]["payoffamount"].ToString().Replace("&nbsp;", "");
                        txtpayoffgood.Text = ds.Tables[0].Rows[0]["goodthroughdate"].ToString().Replace("&nbsp;", "");
                        txtinitialinstall.Text = ds.Tables[0].Rows[0]["duedate"].ToString().Replace("&nbsp;", "");
                        txtnotapplicable.Text = ds.Tables[0].Rows[0]["notapplicable"].ToString().Replace("&nbsp;", "");
                        txtdatetaxsale.Text = ds.Tables[0].Rows[0]["dateoftaxsale"].ToString().Replace("&nbsp;", "");
                        txtlastdayred.Text = ds.Tables[0].Rows[0]["lastdateredeem"].ToString().Replace("&nbsp;", "");
                        var NotApplicable = ds.Tables[0].Rows[0]["notapplicable"].ToString().Replace("&nbsp;", "");
                        if (NotApplicable == "Yes")
                        {
                            txtdatetaxsale.Enabled = false;
                            txtlastdayred.Enabled = false;
                            txtdatetaxsale.Text = "";
                            txtlastdayred.Text = "";
                        }
                        else if (NotApplicable == "No")
                        {
                            txtdatetaxsale.Enabled = true;
                            txtlastdayred.Enabled = true;

                        }
                        else
                        {
                            txtdatetaxsale.Enabled = true;
                            txtlastdayred.Enabled = true;
                        }
                        string remain1 = txtstrRemaingBlnce1.Text.Substring(0, 1);
                        string remain2 = txtstrRemaingBlnce2.Text.Substring(0, 1);
                        string remain3 = txtstrRemaingBlnce3.Text.Substring(0, 1);
                        string remain4 = txtstrRemaingBlnce4.Text.Substring(0, 1);
                        if (Convert.ToChar(remain1) == '-')
                        {
                            txtstrRemaingBlnce1.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce1.Enabled = true;
                        }
                        if (Convert.ToChar(remain2) == '-')
                        {
                            txtstrRemaingBlnce2.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce2.Enabled = true;
                        }
                        if (Convert.ToChar(remain3) == '-')
                        {
                            txtstrRemaingBlnce3.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce3.Enabled = true;
                        }
                        if (Convert.ToChar(remain4) == '-')
                        {
                            txtstrRemaingBlnce4.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce4.Enabled = true;
                        }

                    }
                    else
                    {
                        query = "select * from tbl_search_tax_key A join tbl_search_keying_delinquent_data B on A.OrderNo = B.ordernumber and A.searchkey_Id =B.searchkey_Id  join tbl_search_key_special_assessment_data C on B.ordernumber = C.ordernumber and B.searchkey_Id=C.special_key_Id where A.searchkey_Id = '" + Item_ID + "'";
                        DataSet ds = new DataSet();
                        ds = gl.ExecuteQuery(query);


                        string fpaid = ds.Tables[0].Rows[0]["firstpaid"].ToString(), fdue = ds.Tables[0].Rows[0]["firstdue"].ToString();
                        string spaid = ds.Tables[0].Rows[0]["secoundpaid"].ToString(), sdue = ds.Tables[0].Rows[0]["secounddue"].ToString();
                        string thpaid = ds.Tables[0].Rows[0]["thirdpaid"].ToString(), thdue = ds.Tables[0].Rows[0]["thirddue"].ToString();
                        string fhpaid = ds.Tables[0].Rows[0]["fourthpaid"].ToString(), fhdue = ds.Tables[0].Rows[0]["fourthdue"].ToString();

                        if (fpaid == "1") { txtstrTaxStatus1.Text = "Paid"; }
                        else if (fdue == "1") { txtstrTaxStatus1.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus1.Text = "Select";
                        }
                        if (spaid == "1") { txtstrTaxStatus2.Text = "Paid"; }

                        else if (sdue == "1") { txtstrTaxStatus2.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus2.Text = "Select";
                        }
                        if (thpaid == "1") { txtstrTaxStatus3.Text = "Paid"; }
                        else if (thdue == "1") { txtstrTaxStatus3.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus3.Text = "Select";
                        }
                        if (fhpaid == "1") { txtstrTaxStatus4.Text = "Paid"; }
                        else if (fhdue == "1") { txtstrTaxStatus4.Text = "Due"; }
                        else
                        {
                            txtstrTaxStatus4.Text = "Select";
                        }

                        //tax general details
                        txtstrTaxType.Text = ds.Tables[0].Rows[0]["TaxType"].ToString().Replace("&nbsp;", "");

                        //TaxBill
                        txtTaxBill.Text = ds.Tables[0].Rows[0]["TaxBill"].ToString().Replace("&nbsp;", "");

                        txtstrTaxYear.Text = ds.Tables[0].Rows[0]["TaxYear"].ToString().Replace("&nbsp;", "");
                        txtstrEndYear.Text = ds.Tables[0].Rows[0]["EndYear"].ToString().Replace("&nbsp;", "");
                        txtstrParcelId.Text = ds.Tables[0].Rows[0]["ParcelId"].ToString().Replace("&nbsp;", "");
                        //txtordercomments.Text = ds.Tables[0].Rows[0]["OrderComments"].ToString().Replace("&nbsp;", "");
                        txtdelitaxstatus.Text = ds.Tables[0].Rows[0]["DelinquentTaxYear"].ToString().Replace("&nbsp;", "");
                        txtdeliquent.Text = ds.Tables[0].Rows[0]["DelinquentStatus"].ToString().Replace("&nbsp;", "");
                        //Special Assmnt
                        txtSpcelAsst.Text = ds.Tables[0].Rows[0]["SpecialAssessment"].ToString().Replace("&nbsp;", "");

                        var deliq = ds.Tables[0].Rows[0]["DelinquentStatus"].ToString().Replace("&nbsp;", "");
                        var Special = ds.Tables[0].Rows[0]["SpecialAssessment"].ToString().Replace("&nbsp;", "");

                        if (deliq == "Yes")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtdeliquent.Text = "Yes";
                        }

                        if (Special == "Yes")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtSpcelAsst.Text = "Yes";
                        }
                        //paymentfrequency
                        var test = ds.Tables[0].Rows[0]["payfreq"].ToString().Replace("&nbsp;", "");



                        if (test == "1")
                        {

                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Annual";
                        }
                        else if (test == "2")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Semiannual";
                        }
                        else if (test == "3")
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Quarterly";
                        }
                        else
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            txtstrPaymentFrequency.Text = "Select";
                        }
                        if (ds.Tables[0].Rows[0]["DelinquentStatus"].ToString().Replace("&nbsp;", "") == "")
                        {
                            txtdelitaxstatus.Text = "";
                            txtpayoffamount.Text = "0.00";
                            txtpayoffgood.Text = "";
                            txtinitialinstall.Text = "";
                            txtnotapplicable.Text = "";
                            txtdatetaxsale.Text = "";
                            txtlastdayred.Text = "";
                        }
                        else if (ds.Tables[0].Rows[0]["DelinquentStatus"].ToString().Replace("&nbsp;", "") == "No")
                        {
                            txtdelitaxstatus.Text = "";
                            txtpayoffamount.Text = "0.00";
                            txtpayoffgood.Text = "";
                            txtinitialinstall.Text = "";
                            txtnotapplicable.Text = "";
                            txtdatetaxsale.Text = "";
                            txtlastdayred.Text = "";
                        }

                        if (ds.Tables[0].Rows[0]["SpecialAssessment"].ToString().Replace("&nbsp;", "") == "")
                        {
                            txtdescription.Text = "";
                            txtspecialassno.Text = "";
                            txtnoinstall.Text = "";
                            txtinstallpaid.Text = "";
                            txtamountspecial.Text = "0.00";
                        }
                        else if (ds.Tables[0].Rows[0]["SpecialAssessment"].ToString().Replace("&nbsp;", "") == "No")
                        {
                            txtdescription.Text = "";
                            txtspecialassno.Text = "";
                            txtnoinstall.Text = "";
                            txtinstallpaid.Text = "";
                            txtamountspecial.Text = "0.00";
                        }

                        //tax payment details                
                        txtstrTaxAmount1.Text = ds.Tables[0].Rows[0]["TaxAmount"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount1.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid1.Text = ds.Tables[0].Rows[0]["TaxAmountPaid"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce1.Text = ds.Tables[0].Rows[0]["RemainingBalance"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus1.Text = ds.Tables[0].Rows[0]["ExemptionStatus"].ToString().Replace("&nbsp;", "");

                        txtstrTaxAmount2.Text = ds.Tables[0].Rows[0]["TaxAmount1"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount2.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount1"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid2.Text = ds.Tables[0].Rows[0]["TaxAmountPaid1"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce2.Text = ds.Tables[0].Rows[0]["RemainingBalance1"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus2.Text = ds.Tables[0].Rows[0]["ExemptionStatus1"].ToString().Replace("&nbsp;", "");


                        txtstrTaxAmount3.Text = ds.Tables[0].Rows[0]["TaxAmount2"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount3.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount2"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid3.Text = ds.Tables[0].Rows[0]["TaxAmountPaid2"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce3.Text = ds.Tables[0].Rows[0]["RemainingBalance2"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus3.Text = ds.Tables[0].Rows[0]["ExemptionStatus2"].ToString().Replace("&nbsp;", "");


                        txtstrTaxAmount4.Text = ds.Tables[0].Rows[0]["TaxAmount3"].ToString().Replace("&nbsp;", "");
                        txtstrDiscountAmount4.Text = ds.Tables[0].Rows[0]["TaxDiscountAmount3"].ToString().Replace("&nbsp;", "");
                        txtstrAmountPaid4.Text = ds.Tables[0].Rows[0]["TaxAmountPaid3"].ToString().Replace("&nbsp;", "");
                        txtstrRemaingBlnce4.Text = ds.Tables[0].Rows[0]["RemainingBalance3"].ToString().Replace("&nbsp;", "");
                        txtstrExmpStatus4.Text = ds.Tables[0].Rows[0]["ExemptionStatus3"].ToString().Replace("&nbsp;", "");

                        //Special assessment section
                        txtdescription.Text = ds.Tables[0].Rows[0]["description"].ToString().Replace("&nbsp;", "");
                        txtspecialassno.Text = ds.Tables[0].Rows[0]["Special_assessment_number"].ToString().Replace("&nbsp;", "");
                        txtnoinstall.Text = ds.Tables[0].Rows[0]["number_of_installment"].ToString().Replace("&nbsp;", "");
                        txtinstallpaid.Text = ds.Tables[0].Rows[0]["installments_paid"].ToString().Replace("&nbsp;", "");
                        txtamountspecial.Text = ds.Tables[0].Rows[0]["Amount"].ToString().Replace("&nbsp;", "");

                        //delinquent tax details
                        //txtdelitaxstatus.Text = ds.Tables[0].Rows[0]["DelinquentStatus"].ToString().Replace("&nbsp;", "");
                        txtpayoffamount.Text = ds.Tables[0].Rows[0]["payoffamount"].ToString().Replace("&nbsp;", "");
                        txtpayoffgood.Text = ds.Tables[0].Rows[0]["goodthroughdate"].ToString().Replace("&nbsp;", "");
                        txtinitialinstall.Text = ds.Tables[0].Rows[0]["duedate"].ToString().Replace("&nbsp;", "");
                        txtnotapplicable.Text = ds.Tables[0].Rows[0]["notapplicable"].ToString().Replace("&nbsp;", "");
                        txtdatetaxsale.Text = ds.Tables[0].Rows[0]["dateoftaxsale"].ToString().Replace("&nbsp;", "");
                        txtlastdayred.Text = ds.Tables[0].Rows[0]["lastdateredeem"].ToString().Replace("&nbsp;", "");
                        var NotApplicable = ds.Tables[0].Rows[0]["notapplicable"].ToString().Replace("&nbsp;", "");
                        if (NotApplicable == "Yes")
                        {
                            txtdatetaxsale.Enabled = false;
                            txtlastdayred.Enabled = false;
                            txtdatetaxsale.Text = "";
                            txtlastdayred.Text = "";
                        }
                        else if (NotApplicable == "No")
                        {
                            txtdatetaxsale.Enabled = true;
                            txtlastdayred.Enabled = true;

                        }
                        else
                        {
                            txtdatetaxsale.Enabled = true;
                            txtlastdayred.Enabled = true;
                        }
                        string remain1 = txtstrRemaingBlnce1.Text.Substring(0, 1);
                        string remain2 = txtstrRemaingBlnce2.Text.Substring(0, 1);
                        string remain3 = txtstrRemaingBlnce3.Text.Substring(0, 1);
                        string remain4 = txtstrRemaingBlnce4.Text.Substring(0, 1);
                        if (Convert.ToChar(remain1) == '-')
                        {
                            txtstrRemaingBlnce1.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce1.Enabled = true;
                        }
                        if (Convert.ToChar(remain2) == '-')
                        {
                            txtstrRemaingBlnce2.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce2.Enabled = true;
                        }
                        if (Convert.ToChar(remain3) == '-')
                        {
                            txtstrRemaingBlnce3.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce3.Enabled = true;
                        }
                        if (Convert.ToChar(remain4) == '-')
                        {
                            txtstrRemaingBlnce4.Enabled = true;
                        }
                        else
                        {
                            txtstrRemaingBlnce4.Enabled = true;
                        }

                    }
                }
                else
                {
                    query = "select * from tbl_search_tax_qc where ID='" + Item_ID + "'";
                }

                LinkButton lnkedit = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkEdit");
                btnadd.Enabled = false;

                lnkedit.CommandName = "Update";
                lnkedit.CssClass = "glyphicon glyphicon-ok";
                lnkedit.ToolTip = "Update";
                lnkedit.OnClientClick = "javascript : return confirm('Are you sure, want to update this Row?');";

                LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                lnkcancel.Visible = true;



            }

            else if (GVCommand == "update")
            {
                string Item_ID = (e.CommandArgument).ToString();
                GridViewRow row = (GridViewRow)(((LinkButton)e.CommandSource).NamingContainer);
                int rid = row.RowIndex;
                LinkButton lnkedit = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkEdit");
                var str1 = "0.00";
                var str2 = "0.00";
                var str3 = "0.00";
                var str4 = "0.00";
                int fpaid = 0, fdue = 0;
                int spaid = 0, sdue = 0;
                int thpaid = 0, thdue = 0;
                int fhpaid = 0, fhdue = 0;

                lnkedit.CommandName = "Update";
                lnkedit.CssClass = "glyphicon glyphicon-ok";
                lnkedit.ToolTip = "Update";
                if (txtstrTaxType.Text == "0")
                {
                    txtstrTaxType.Text = "Select Tax Type";
                }

                int payfrq = 0;
                if (txtstrPaymentFrequency.Text.Trim() == "Annual")
                {
                    payfrq = 1;
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxType.Text == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtdeliquent.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Delinquent Status')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;
                        }
                    }

                    if (txtTaxBill.Text == "Select Tax Bill")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Bill')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrRemaingBlnce1.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance1')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }

                    if (txtstrRemaingBlnce1.Text.ToString() != "0.00")
                    {
                        double number1 = Convert.ToDouble(txtstrRemaingBlnce1.Text);
                        str1 = number1.ToString("N", CultureInfo.InvariantCulture);
                    }
                    else
                    {
                        str1 = "0.00";
                    }
                    txtstrRemaingBlnce2.Text = "0.00";
                    txtstrRemaingBlnce3.Text = "0.00";
                    txtstrRemaingBlnce4.Text = "0.00";
                    if (txtstrTaxStatus1.Text == "Paid") { fpaid = 1; }
                    else if (txtstrTaxStatus1.Text == "Due") { fdue = 1; }
                    txtstrTaxStatus2.Text = "";
                    if (txtstrTaxStatus2.Text == "") { spaid = 0; }
                    else if (txtstrTaxStatus2.Text == "") { sdue = 0; }
                    txtstrTaxStatus3.Text = "";
                    if (txtstrTaxStatus3.Text == "") { thpaid = 0; }
                    else if (txtstrTaxStatus4.Text == "") { thdue = 0; }
                    txtstrTaxStatus4.Text = "";
                    if (txtstrTaxStatus4.Text == "") { fhpaid = 0; }
                    else if (txtstrTaxStatus4.Text == "") { fhdue = 0; }

                    if (txtstrTaxAmount1.Text != "")
                    {
                        if (txtstrTaxAmount1.Text == txtstrDiscountAmount1.Text)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount1 and Discount Amount1 Should not be same')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;

                        }

                    }

                }
                else if (txtstrPaymentFrequency.Text.Trim() == "Semiannual")
                {
                    payfrq = 2;
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxType.Text == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtdeliquent.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Delinquent Status')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;
                        }
                    }

                    if (txtTaxBill.Text == "Select Tax Bill")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Bill')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrRemaingBlnce1.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance1')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrRemaingBlnce2.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance2')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }

                    if (txtstrRemaingBlnce1.Text.ToString() != "0.00")
                    {
                        double number1 = Convert.ToDouble(txtstrRemaingBlnce1.Text);
                        str1 = number1.ToString("N", CultureInfo.InvariantCulture);
                    }
                    else
                    {
                        str1 = "0.00";
                    }

                    if (txtstrRemaingBlnce2.Text.ToString() != "0.00")
                    {
                        double number2 = Convert.ToDouble(txtstrRemaingBlnce2.Text);
                        str2 = number2.ToString("N", CultureInfo.InvariantCulture);
                    }
                    else
                    {
                        str2 = "0.00";
                    }
                    txtstrRemaingBlnce3.Text = "0.00";
                    txtstrRemaingBlnce4.Text = "0.00";
                    if (txtstrTaxStatus1.Text == "Paid") { fpaid = 1; }
                    else if (txtstrTaxStatus1.Text == "Due") { fdue = 1; }
                    if (txtstrTaxStatus2.Text == "Paid") { spaid = 1; }
                    else if (txtstrTaxStatus2.Text == "Due") { sdue = 1; }
                    txtstrTaxStatus3.Text = "";
                    if (txtstrTaxStatus3.Text == "") { thpaid = 0; }
                    else if (txtstrTaxStatus4.Text == "") { thdue = 0; }
                    txtstrTaxStatus4.Text = "";
                    if (txtstrTaxStatus4.Text == "") { fhpaid = 0; }
                    else if (txtstrTaxStatus4.Text == "") { fhdue = 0; }
                    if (txtstrTaxAmount1.Text != "")
                    {
                        if (txtstrTaxAmount1.Text == txtstrDiscountAmount1.Text)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount1 and Discount Amount1 Should not be same')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;
                        }

                    }
                    if (txtstrTaxAmount2.Text != "")
                    {
                        if (txtstrTaxAmount2.Text == txtstrDiscountAmount2.Text)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount2 and Discount Amount2 Should not be same')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;

                        }
                    }
                }
                else if (txtstrPaymentFrequency.Text.Trim() == "Quarterly")
                {
                    payfrq = 3;
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxType.Text == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtdeliquent.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Delinquent Status')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;
                        }
                    }

                    if (txtTaxBill.Text == "Select Tax Bill")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Bill')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrRemaingBlnce1.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance1')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrRemaingBlnce2.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance2')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrRemaingBlnce3.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance3')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrRemaingBlnce4.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance4')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }

                    if (txtstrRemaingBlnce1.Text.ToString() != "0.00")
                    {
                        double number1 = Convert.ToDouble(txtstrRemaingBlnce1.Text);
                        str1 = number1.ToString("N", CultureInfo.InvariantCulture);
                    }
                    else
                    {
                        str1 = "0.00";
                    }

                    if (txtstrRemaingBlnce2.Text.ToString() != "0.00")
                    {
                        double number2 = Convert.ToDouble(txtstrRemaingBlnce2.Text);
                        str2 = number2.ToString("N", CultureInfo.InvariantCulture);
                    }
                    else
                    {
                        str2 = "0.00";
                    }

                    if (txtstrRemaingBlnce3.Text.ToString() != "0.00")
                    {
                        double number3 = Convert.ToDouble(txtstrRemaingBlnce3.Text);
                        str3 = number3.ToString("N", CultureInfo.InvariantCulture);

                    }
                    else
                    {
                        str3 = "0.00";
                    }

                    if (txtstrRemaingBlnce4.Text.ToString() != "0.00")
                    {
                        double number4 = Convert.ToDouble(txtstrRemaingBlnce4.Text);
                        str4 = number4.ToString("N", CultureInfo.InvariantCulture);
                    }
                    else
                    {
                        str4 = "0.00";
                    }
                    if (txtstrTaxStatus1.Text == "Paid") { fpaid = 1; }
                    else if (txtstrTaxStatus1.Text == "Due") { fdue = 1; }
                    if (txtstrTaxStatus2.Text == "Paid") { spaid = 1; }
                    else if (txtstrTaxStatus2.Text == "Due") { sdue = 1; }
                    if (txtstrTaxStatus3.Text == "Paid") { thpaid = 1; }
                    else if (txtstrTaxStatus4.Text == "Due") { thdue = 1; }
                    if (txtstrTaxStatus4.Text == "Paid") { fhpaid = 1; }
                    else if (txtstrTaxStatus4.Text == "Due") { fhdue = 1; }
                    if (txtstrTaxAmount1.Text != "")
                    {
                        if (txtstrTaxAmount1.Text == txtstrDiscountAmount1.Text)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount1 and Discount Amount1 Should not be same')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;
                        }

                    }
                    if (txtstrTaxAmount2.Text != "")
                    {
                        if (txtstrTaxAmount2.Text == txtstrDiscountAmount2.Text)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount2 and Discount Amount2 Should not be same')", true);

                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;

                        }
                    }
                    if (txtstrTaxAmount3.Text != "")
                    {
                        if (txtstrTaxAmount3.Text == txtstrDiscountAmount3.Text)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount3 and Discount Amount3 Should not be same')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;
                        }
                    }
                    if (txtstrTaxAmount4.Text != "")
                    {
                        if (txtstrTaxAmount4.Text == txtstrDiscountAmount4.Text)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Inst.Amount4 and Discount Amount4 Should not be same')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;

                        }
                    }
                }
                else
                {
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxType.Text == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Tax Type')", true);
                        return;
                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtdeliquent.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Delinquent Status')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;
                        }
                    }

                    payfrq = 0;
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Any One Option in Payment Frequency')", true);
                    return;
                }





                string TaxType = null, TaxYear = null, EndYear = null, ParcelId = null, TaxBill = null;

                string DelinquentTaxes = null, SpecialAssessments = null, OrderComments = null;


                //tax                                                
                if (txtstrTaxType.Text.Trim() != string.Empty)
                { TaxType = txtstrTaxType.Text.Trim(); }



                if (txtstrTaxYear.Text.Trim() != string.Empty)
                { TaxYear = txtstrTaxYear.Text.Trim(); }
                if (txtstrEndYear.Text.Trim() != string.Empty)
                { EndYear = txtstrEndYear.Text.Trim(); }
                if (txtstrParcelId.Text.Trim() != string.Empty)
                { ParcelId = txtstrParcelId.Text.Trim(); }
                if (txtdeliquent.Text.Trim() != string.Empty)
                { DelinquentTaxes = txtdeliquent.Text.Trim(); }
                //Special Assmnt
                if (txtSpcelAsst.Text.Trim() != string.Empty)
                { SpecialAssessments = txtSpcelAsst.Text.Trim(); }

                //TaxBill
                if (txtTaxBill.Text.Trim() != string.Empty)
                { TaxBill = txtTaxBill.Text.Trim(); }

                if (DelinquentTaxes == "Yes")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                }
                if (DelinquentTaxes == "select")
                {
                    txtdeliquent.Text = "";
                }

                if (SpecialAssessments == "Yes")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                }
                if (SpecialAssessments == "select")
                {
                    txtSpcelAsst.Text = "";
                }


                if (txtstrPaymentFrequency.Text.Trim() == "Annual")
                {
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxType.Text == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;

                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtdeliquent.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Delinquent Status')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;
                        }
                    }

                    if (txtTaxBill.Text == "Select Tax Bill")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Bill')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxStatus1.Text != "Select" && txtstrExmpStatus1.Text != "Select")
                    {

                    }
                    else if (txtstrTaxStatus1.Text == "Select" || txtstrExmpStatus1.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Inst.Paid/Due?1 and Exempt/Relevy?1')", true);
                        rid = row.RowIndex;
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    else
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Inst.Paid/Due?1 and  Exempt/Relevy?1')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        rid = row.RowIndex;
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                }
                else if (txtstrPaymentFrequency.Text.Trim() == "Semiannual")
                {
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxType.Text == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        rid = row.RowIndex;
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;

                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtdeliquent.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Delinquent Status')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;
                        }
                    }


                    if (txtTaxBill.Text == "Select Tax Bill")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Bill')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }

                    if (txtstrTaxStatus1.Text != "Select" && txtstrExmpStatus1.Text != "Select" && txtstrTaxStatus2.Text != "Select" && txtstrExmpStatus2.Text != "Select")
                    {

                    }
                    else if (txtstrTaxStatus1.Text == "Select" || txtstrExmpStatus1.Text == "Select" || txtstrTaxStatus2.Text == "Select" || txtstrExmpStatus2.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Inst.Paid/Due?1,Inst.Paid/Due?2 and Exempt/Relevy?1,Exempt/Relevy?2')", true);

                        rid = row.RowIndex;
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    else
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Inst.Paid/Due?1,Inst.Paid/Due?2 and Exempt/Relevy?1,Exempt/Relevy?2')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        rid = row.RowIndex;
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                }
                else if (txtstrPaymentFrequency.Text.Trim() == "Quarterly")
                {
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxType.Text == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        rid = row.RowIndex;
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtdeliquent.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Delinquent Status')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;
                        }
                    }

                    if (txtTaxBill.Text == "Select Tax Bill")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Bill')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxStatus1.Text != "Select" && txtstrExmpStatus1.Text != "Select" && txtstrTaxStatus2.Text != "Select" && txtstrExmpStatus2.Text != "Select" && txtstrTaxStatus3.Text != "Select" && txtstrExmpStatus3.Text != "Select" && txtstrTaxStatus4.Text != "Select" && txtstrExmpStatus4.Text != "Select")
                    {

                    }
                    else if (txtstrTaxStatus1.Text == "Select" || txtstrExmpStatus1.Text == "Select" || txtstrTaxStatus2.Text == "Select" || txtstrExmpStatus2.Text == "Select" || txtstrTaxStatus3.Text == "Select" || txtstrExmpStatus3.Text == "Select" || txtstrTaxStatus4.Text == "Select" || txtstrExmpStatus4.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Inst.Paid/Due?1,Inst.Paid/Due?2,Inst.Paid/Due?3,Inst.Paid/Due?4 and Exempt/Relevy?1,Exempt/Relevy?2,Exempt/Relevy?3,Exempt/Relevy?4')", true);
                        Item_ID = (e.CommandArgument).ToString();

                        rid = row.RowIndex;
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    else
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select Inst.Paid/Due?1,Inst.Paid/Due?2,Inst.Paid/Due?3,Inst.Paid/Due?4 and Exempt/Relevy?1,Exempt/Relevy?2,Exempt/Relevy?3,Exempt/Relevy?4')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        rid = row.RowIndex;
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                }
                else
                {

                }

                if (TaxType == "Select Tax Type")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                    Item_ID = (e.CommandArgument).ToString();
                    rid = row.RowIndex;
                    lnkedit.CommandName = "Update";
                    lnkedit.CssClass = "glyphicon glyphicon-ok";
                    lnkedit.ToolTip = "Update";
                    LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                    lnkcancel.Visible = true;
                    return;
                    //cleartaxfields();
                }

                if (txtdeliquent.Text == "Yes")
                {
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxType.Text == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        rid = row.RowIndex;
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;
                        }
                    }

                    if (txtdelitaxstatus.Text != "" && txtpayoffgood.Text != "" && txtinitialinstall.Text != "")
                    {

                    }
                    else if (txtdelitaxstatus.Text == "" || txtpayoffgood.Text == "" || txtinitialinstall.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Deliquent Tax Year,PayOff Good Thru Date,Initial Installment Date')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        rid = row.RowIndex;
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    else
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Deliquent Tax Year,PayOff Good Thru Date,Initial Installment Date')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        rid = row.RowIndex;
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (Convert.ToDecimal(txtpayoffamount.Text) <= Convert.ToDecimal("0.00"))
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('PayOff Amount in Delinquent Status Section should be greater than zero')", true);
                        return;
                    }
                    if (txtnotapplicable.Text == "Select")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select any one option in TaxSale-Not Applicable(Delinquent Section)')", true);
                        return;
                    }
                    if (txtnotapplicable.Text == "No")
                    {
                        if (txtdatetaxsale.Text != "" && txtlastdayred.Text != "")
                        {

                        }
                        else if (txtdatetaxsale.Text == "" || txtlastdayred.Text == "")
                        {

                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Date of Sale Tax and Last Day To Redeem')", true);
                            rid = row.RowIndex;
                            Item_ID = (e.CommandArgument).ToString();
                            row = (GridViewRow)(((LinkButton)e.CommandSource).NamingContainer);
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";

                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;

                            return;

                        }
                        else
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Date of Sale Tax and Last Day To Redeem')", true);
                            rid = row.RowIndex;
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;

                            return;
                        }
                    }
                }

                if (txtSpcelAsst.Text == "Yes")
                {
                    if (txtstrParcelId.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax ID')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxType.Text == "Select Tax Type")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Tax Type')", true);
                        rid = row.RowIndex;
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Tax Year')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrTaxYear.Text.Length < 4)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Year should be 4 Numeric Characters')", true);
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (txtstrEndYear.Text != "")
                    {
                        if (txtstrEndYear.Text.Length < 4)
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('End Year should be 4 Numeric Characters')", true);
                            Item_ID = (e.CommandArgument).ToString();
                            lnkedit.CommandName = "Update";
                            lnkedit.CssClass = "glyphicon glyphicon-ok";
                            lnkedit.ToolTip = "Update";
                            LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                            lnkcancel.Visible = true;
                            return;
                        }
                    }

                    if (txtdescription.Text != "" && txtspecialassno.Text != "" && txtnoinstall.Text != "" && txtinstallpaid.Text != "" && txtamountspecial.Text != "")
                    {

                    }
                    else
                    {
                        if (txtnotapplicable.SelectedItem.Text == "Yes")
                        {
                            txtdatetaxsale.Enabled = false;
                            txtlastdayred.Enabled = false;
                            txtdatetaxsale.Text = "";
                            txtlastdayred.Text = "";
                        }
                        else if (txtnotapplicable.SelectedItem.Text == "No")
                        {
                            txtdatetaxsale.Enabled = true;
                            txtlastdayred.Enabled = true;

                        }
                        else
                        {
                            txtdatetaxsale.Enabled = true;
                            txtlastdayred.Enabled = true;

                        }

                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Empty Fields in Special Assessment Section')", true);
                        rid = row.RowIndex;
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                    if (Convert.ToDecimal(txtamountspecial.Text) <= Convert.ToDecimal("0.00"))
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Amount in Special Assessment Section should be greater than zero')", true);
                        rid = row.RowIndex;
                        Item_ID = (e.CommandArgument).ToString();
                        lnkedit.CommandName = "Update";
                        lnkedit.CssClass = "glyphicon glyphicon-ok";
                        lnkedit.ToolTip = "Update";
                        LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                        lnkcancel.Visible = true;
                        return;
                    }
                }
                if (txtstrRemaingBlnce1.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance1')", true);
                    rid = row.RowIndex;
                    Item_ID = (e.CommandArgument).ToString();
                    lnkedit.CommandName = "Update";
                    lnkedit.CssClass = "glyphicon glyphicon-ok";
                    lnkedit.ToolTip = "Update";
                    LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                    lnkcancel.Visible = true;
                    return;
                }
                if (txtstrRemaingBlnce2.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance2')", true);
                    rid = row.RowIndex;
                    Item_ID = (e.CommandArgument).ToString();
                    lnkedit.CommandName = "Update";
                    lnkedit.CssClass = "glyphicon glyphicon-ok";
                    lnkedit.ToolTip = "Update";
                    LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                    lnkcancel.Visible = true;
                    return;
                }
                if (txtstrRemaingBlnce3.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance3')", true);
                    rid = row.RowIndex;
                    Item_ID = (e.CommandArgument).ToString();
                    lnkedit.CommandName = "Update";
                    lnkedit.CssClass = "glyphicon glyphicon-ok";
                    lnkedit.ToolTip = "Update";
                    LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                    lnkcancel.Visible = true;
                    return;
                }
                if (txtstrRemaingBlnce4.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Remaining Balance4')", true);
                    rid = row.RowIndex;
                    Item_ID = (e.CommandArgument).ToString();
                    lnkedit.CommandName = "Update";
                    lnkedit.CssClass = "glyphicon glyphicon-ok";
                    lnkedit.ToolTip = "Update";
                    LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                    lnkcancel.Visible = true;
                    return;
                }
                //double number1 = Convert.ToDouble(txtstrRemaingBlnce1.Text);
                //double number2 = Convert.ToDouble(txtstrRemaingBlnce2.Text);
                //double number3 = Convert.ToDouble(txtstrRemaingBlnce3.Text);
                //double number4 = Convert.ToDouble(txtstrRemaingBlnce4.Text);
                //var str1 = number1.ToString("N", CultureInfo.InvariantCulture);
                //var str2 = number2.ToString("N", CultureInfo.InvariantCulture);
                //var str3 = number3.ToString("N", CultureInfo.InvariantCulture);
                //var str4 = number4.ToString("N", CultureInfo.InvariantCulture);

                string query = "";
                if (TaxType != "" && ParcelId != "")//select Count equal to zero
                {
                    query = "select TaxType,ParcelId,searchkey_ID from tbl_search_tax_key where TaxType='" + TaxType + "' and ParcelId = '" + ParcelId + "'";
                    DataTable dt = new DataTable();
                    MySqlConnection con = new MySqlConnection(ConfigurationManager.ConnectionStrings["MysqlConnection"].ConnectionString);
                    MySqlCommand cmd = new MySqlCommand(query, con);
                    MySqlDataAdapter sda = new MySqlDataAdapter(cmd);
                    sda.Fill(dt);
                    if (dt.Rows.Count == 0)
                    {

                    }
                    string fID1 = "";
                    string ftaxtype1 = "";
                    string fparcelid1 = "";
                    foreach (DataRow row1 in dt.Rows)
                    {
                        fID1 = row1["searchkey_ID"].ToString();
                        ftaxtype1 = row1["TaxType"].ToString();
                        fparcelid1 = row1["ParcelId"].ToString();
                    }


                    if (ftaxtype1 != "" && fparcelid1 != "")
                    {
                        if (fID1 == Item_ID)
                        {
                            query = "select TaxType,ParcelId,searchkey_ID from tbl_search_tax_key where TaxType='" + TaxType + "' and ParcelId = '" + ParcelId + "'";
                            DataTable dt1 = new DataTable();
                            MySqlConnection con1 = new MySqlConnection(ConfigurationManager.ConnectionStrings["MysqlConnection"].ConnectionString);
                            MySqlCommand cmd1 = new MySqlCommand(query, con1);
                            MySqlDataAdapter sda1 = new MySqlDataAdapter(cmd1);
                            sda1.Fill(dt1);
                            if (dt.Rows.Count == 1)
                            {

                            }
                            if (dt1.Rows.Count > 1)
                            {
                                ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax ID and Tax Type Combination Already Exists')", true);
                                return;
                            }
                        }
                        if (fID1 != Item_ID)
                        {
                            query = "select TaxType,ParcelId,searchkey_ID from tbl_search_tax_key where TaxType='" + TaxType + "' and ParcelId = '" + ParcelId + "'";
                            DataTable dt1 = new DataTable();
                            MySqlConnection con1 = new MySqlConnection(ConfigurationManager.ConnectionStrings["MysqlConnection"].ConnectionString);
                            MySqlCommand cmd1 = new MySqlCommand(query, con1);
                            MySqlDataAdapter sda1 = new MySqlDataAdapter(cmd1);
                            sda1.Fill(dt1);
                            if (dt1.Rows.Count == 1)
                            {
                                ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax ID and Tax Type Combination Already Exists')", true);
                                return;
                            }
                            if (dt1.Rows.Count > 1)
                            {
                                ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax ID and Tax Type Combination Already Exists')", true);
                                return;
                            }
                        }


                    }


                }

                if (TaxType != "Select Tax Type")
                {
                    //TaxBill1
                    int result = gl.InsertTaxData(Lblorderno.Text.Trim(), TaxType, TaxYear, EndYear, ParcelId, DelinquentTaxes, SpecialAssessments, TaxBill, OrderComments,
                                            txtstrTaxStatus1.Text.Trim(), payfrq,
                                            fpaid, fdue, txtstrTaxAmount1.Text.Trim(), txtstrDiscountAmount1.Text.Trim(), txtstrAmountPaid1.Text.Trim(), str1.Trim(), txtstrExmpStatus1.Text.Trim(),
                                            spaid, sdue, txtstrTaxAmount2.Text.Trim(), txtstrDiscountAmount2.Text.Trim(), txtstrAmountPaid2.Text.Trim(), str2.Trim(), txtstrExmpStatus2.Text.Trim(),
                                            thpaid, thdue, txtstrTaxAmount3.Text.Trim(), txtstrDiscountAmount3.Text.Trim(), txtstrAmountPaid3.Text.Trim(), str3.Trim(), txtstrExmpStatus3.Text.Trim(),
                                            fhpaid, fhdue, txtstrTaxAmount4.Text.Trim(), txtstrDiscountAmount4.Text.Trim(), txtstrAmountPaid4.Text.Trim(), str4.Trim(), txtstrExmpStatus4.Text.Trim(),
                                            txtdescription.Text.Trim(), txtspecialassno.Text.Trim(), txtnoinstall.Text.Trim(), txtinstallpaid.Text.Trim(), txtamountspecial.Text.Trim(),
                                            txtdelitaxstatus.Text.Trim(), txtpayoffamount.Text.Trim(), txtpayoffgood.Text.Trim(), txtinitialinstall.Text.Trim(), txtnotapplicable.SelectedItem.Text,
                                            txtdatetaxsale.Text.Trim(), txtlastdayred.Text.Trim(), "Update", Lblprocessname.Text, Item_ID, SessionHandler.UserName);

                    loadgridtax();
                    cleartaxfields();
                    lnkedit.CommandName = "Edit";
                    lnkedit.CssClass = "glyphicon glyphicon-edit";
                    lnkedit.ToolTip = "Edit";
                    btnadd.Enabled = true;
                    LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                    lnkcancel.Visible = false;
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Data Updated Successfully')", true);
                }
                else
                {
                    btnadd.Enabled = false;
                    lnkedit.CommandName = "Update";
                    lnkedit.CssClass = "glyphicon glyphicon-ok";
                    lnkedit.ToolTip = "Update";
                    lnkedit.OnClientClick = "javascript : return confirm('Are you sure, want to update this Row?');";
                    loadgridtax();
                    LinkButton lnkcancel = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkCancel");
                    lnkcancel.Visible = true;
                }

            }
            else if (GVCommand == "delete")
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
                string Item_ID = (e.CommandArgument).ToString();
                GridViewRow row = (GridViewRow)(((LinkButton)e.CommandSource).NamingContainer);
                int result = gl.DeleteGrid(Item_ID, Lblprocessname.Text, "TAX");
                loadgridtax();
                btnadd.Enabled = true;
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Record Deleted Successfully')", true);
                cleartaxfields();
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    protected void gvtaxdetails_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
    {
        {
            gvtaxdetails.EditIndex = -1;
            btnadd.Enabled = true;
            loadgridtax();
            cleartaxfields();
        }
    }

    protected void gvtaxdetails_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {

    }


    //Multiple Deliquent

    //protected void BindGrid()
    //{
    //    if (txtdeliquent.Text == "Yes")
    //    {
    //        MultiDel.DataSource = (DataTable)ViewState["MultiDel"];
    //        MultiDel.DataBind();
    //    }

    //}
    //protected void MultiDeliquent_Click(object sender, EventArgs e)
    //{
    //    DataTable mdt = (DataTable)ViewState["MultiDel"];
    //    if (txtdeliquent.Text == "Yes")
    //    {
    //        if (txtdelitaxstatus.Text != "" && txtpayoffgood.Text != "" && txtinitialinstall.Text != "")
    //        {

    //        }
    //        else if (txtdelitaxstatus.Text == "" || txtpayoffgood.Text == "" || txtinitialinstall.Text == "")
    //        {
    //            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Deliquent Tax Year,PayOff Good Thru Date,Initial Installment Date')", true);
    //            return;
    //        }
    //        else
    //        {
    //            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Deliquent Tax Year,PayOff Good Thru Date,Initial Installment Date')", true);
    //            return;
    //        }
    //        if (Convert.ToDecimal(txtpayoffamount.Text) <= Convert.ToDecimal("0.00"))
    //        {
    //            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('PayOff Amount in Delinquent Status Section should be greater than zero')", true);
    //            return;
    //        }
    //        if (txtnotapplicable.Text == "Select")
    //        {
    //            ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select any one option in TaxSale-Not Applicable')", true);
    //            return;
    //        }
    //        if (txtnotapplicable.Text == "No")
    //        {
    //            if (txtdatetaxsale.Text != "" && txtlastdayred.Text != "")
    //            {

    //            }
    //            else if (txtdatetaxsale.Text == "" || txtlastdayred.Text == "")
    //            {
    //                ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Date of Sale Tax and Last Day To Redeem')", true);
    //                return;

    //            }
    //            else
    //            {
    //                ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Date of Sale Tax and Last Day To Redeem')", true);
    //                return;
    //            }
    //        }
    //        if (txtnotapplicable.Text == "Yes")
    //        {
    //            txtdatetaxsale.Enabled = false;
    //            txtlastdayred.Enabled = false;
    //            txtdatetaxsale.Text = "";
    //            txtlastdayred.Text = "";
    //        }
    //        else if (txtnotapplicable.Text == "No")
    //        {
    //            txtdatetaxsale.Enabled = true;
    //            txtlastdayred.Enabled = true;

    //        }
    //        else
    //        {
    //            txtdatetaxsale.Enabled = true;
    //            txtlastdayred.Enabled = true;
    //        }
    //           mdt.Rows.Add(txtdelitaxstatus.Text.Trim(), txtpayoffamount.Text.Trim(), txtpayoffgood.Text.Trim(), txtinitialinstall.Text.Trim(), txtnotapplicable.Text.Trim(), txtdatetaxsale.Text.Trim(), txtlastdayred.Text.Trim());
    //           ViewState["MultiDel"] = mdt;
    //           this.BindGrid();
    //           ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //           ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtVisible1();", true);
    //        }

    //        txtdelitaxstatus.Text = string.Empty;
    //        txtpayoffamount.Text = string.Empty;
    //        txtpayoffgood.Text = string.Empty;
    //        txtinitialinstall.Text = string.Empty;
    //        txtnotapplicable.Text = string.Empty;
    //        txtdatetaxsale.Text = string.Empty;
    //        txtlastdayred.Text = string.Empty;


    //}

    //protected void MultiDel_RowDeleting(object sender, GridViewDeleteEventArgs e)
    //{
    //    int index = Convert.ToInt32(e.RowIndex);
    //    DataTable dt = (DataTable)ViewState["MultiDel"];
    //    dt.Rows[index].Delete();
    //    ViewState["MultiDel"] = dt;
    //    BindGrid();
    //}

    //protected void MultiDel_RowEditing(object sender, GridViewEditEventArgs e)
    //{
    //    try
    //    {
    //        MultiDel.EditIndex = e.NewEditIndex;
    //        BindGrid();
    //        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtVisible1();", true);
    //    }
    //    catch (Exception ex)
    //    {
    //        throw ex;
    //    }
    //}

    //protected void MultiDel_RowCommand(object sender, GridViewCommandEventArgs e)
    //{
    //    string Item_ID = (e.CommandArgument).ToString();
    //    GridViewRow row = (GridViewRow)(((LinkButton)e.CommandSource).NamingContainer);
    //    int rid = row.RowIndex;
    //    LinkButton lnkedit = (LinkButton)MultiDel.Rows[rid].FindControl("LnkEdit");
    //    DataTable mdt = (DataTable)ViewState["MultiDel"];
    //    try
    //    {
    //        string GVCommand = e.CommandName.ToLower();
    //        if (GVCommand == "edit")
    //        {
    //            //int rowIndex = Convert.ToInt32(e.CommandArgument);
    //            //GridViewRow row1 = GridView1.Rows[rowIndex];
    //            //string Item_ID = (e.CommandArgument).ToString();
    //            //GridViewRow row = (GridViewRow)(((LinkButton)e.CommandSource).NamingContainer);
    //            //int rid = row.RowIndex;

    //            string description = (row.FindControl("txtdescription") as TextBox).Text;
    //            string specialassno = row.Cells[1].Text;
    //            string noinstall = row.Cells[2].Text;
    //            string installpaid = row.Cells[3].Text;
    //            string amountspecial = row.Cells[4].Text;
    //            txtdescription.Text = description;
    //            txtspecialassno.Text = specialassno;
    //            txtnoinstall.Text = noinstall;
    //            txtinstallpaid.Text = installpaid;
    //            txtamountspecial.Text = amountspecial;
    //            btnSpecialAssesment.Enabled = false;
    //            //LinkButton lnkedit = (LinkButton)gvtaxdetails.Rows[rid].FindControl("LnkEdit");
    //            LinkButton lnkcancel = (LinkButton)MultiDel.Rows[rid].FindControl("LnkCancel");
    //            lnkedit.CommandName = "Update";
    //            lnkedit.CssClass = "glyphicon glyphicon-ok";
    //            lnkedit.ToolTip = "Update";
    //            lnkedit.OnClientClick = "javascript : return confirm('Are you sure, want to update this Row?');";
    //            lnkcancel.Visible = true;
    //            //// loadgridtax();
    //        }

    //        else if (GVCommand == "update")
    //        {

    //            int rowIndex = Convert.ToInt32(e.CommandArgument);
    //            GridViewRow row1 = GridView1.Rows[rowIndex];
    //            btnSpecialAssesment.Enabled = false;

    //            LinkButton lnkcancel = (LinkButton)MultiDel.Rows[rid].FindControl("LnkCancel");
    //            lnkedit.CommandName = "Edit";
    //            lnkedit.CssClass = "glyphicon glyphicon-edit";
    //            lnkedit.ToolTip = "Edit";
    //            BindGrid();
    //            lnkcancel.Visible = false;

    //            if (txtdeliquent.Text == "Yes")
    //            {
    //                if (txtdelitaxstatus.Text != "" && txtpayoffgood.Text != "" && txtinitialinstall.Text != "")
    //                {

    //                }
    //                else if (txtdelitaxstatus.Text == "" || txtpayoffgood.Text == "" || txtinitialinstall.Text == "")
    //                {
    //                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Deliquent Tax Year,PayOff Good Thru Date,Initial Installment Date')", true);
    //                    rid = row.RowIndex;
    //                    lnkedit.CommandName = "Update";
    //                    lnkedit.CssClass = "glyphicon glyphicon-ok";
    //                    lnkedit.ToolTip = "Update";
    //                    lnkcancel.Visible = true;
    //                    return;
    //                }
    //                else
    //                {
    //                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Deliquent Tax Year,PayOff Good Thru Date,Initial Installment Date')", true);
    //                    Item_ID = (e.CommandArgument).ToString();
    //                    rid = row.RowIndex;

    //                    lnkedit.CommandName = "Update";
    //                    lnkedit.CssClass = "glyphicon glyphicon-ok";
    //                    lnkedit.ToolTip = "Update";
    //                    lnkcancel.Visible = true;
    //                    return;
    //                }
    //                if (Convert.ToDecimal(txtpayoffamount.Text) <= Convert.ToDecimal("0.00"))
    //                {
    //                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('PayOff Amount in Delinquent Status Section should be greater than zero')", true);
    //                    return;
    //                }
    //                if (txtnotapplicable.Text == "Select")
    //                {
    //                    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //                    ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Select any one option in TaxSale-Not Applicable')", true);
    //                    return;
    //                }
    //                if (txtnotapplicable.Text == "No")
    //                {
    //                    if (txtdatetaxsale.Text != "" && txtlastdayred.Text != "")
    //                    {

    //                    }
    //                    else if (txtdatetaxsale.Text == "" || txtlastdayred.Text == "")
    //                    {

    //                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Date of Sale Tax and Last Day To Redeem')", true);
    //                        rid = row.RowIndex;
    //                        Item_ID = (e.CommandArgument).ToString();
    //                        row = (GridViewRow)(((LinkButton)e.CommandSource).NamingContainer);
    //                        lnkedit.CommandName = "Update";
    //                        lnkedit.CssClass = "glyphicon glyphicon-ok";
    //                        lnkedit.ToolTip = "Update";
    //                        lnkcancel.Visible = true;
    //                        return;

    //                    }
    //                    else
    //                    {
    //                        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Choose Date of Sale Tax and Last Day To Redeem')", true);
    //                        rid = row.RowIndex;
    //                        Item_ID = (e.CommandArgument).ToString();
    //                        lnkedit.CommandName = "Update";
    //                        lnkedit.CssClass = "glyphicon glyphicon-ok";
    //                        lnkedit.ToolTip = "Update";
    //                        lnkcancel.Visible = true;
    //                        return;
    //                    }
    //                }
    //                mdt.Rows.Add(txtdelitaxstatus.Text.Trim(), txtpayoffamount.Text.Trim(), txtpayoffgood.Text.Trim(), txtinitialinstall.Text.Trim(), txtnotapplicable.Text.Trim(), txtdatetaxsale.Text.Trim(), txtlastdayred.Text.Trim());
    //                ViewState["MultiDel"] = mdt;
    //                this.BindGrid();
    //                txtdelitaxstatus.Text = string.Empty;
    //                txtpayoffamount.Text = string.Empty;
    //                txtpayoffgood.Text = string.Empty;
    //                txtinitialinstall.Text = string.Empty;
    //                txtnotapplicable.Text = string.Empty;
    //                txtdatetaxsale.Text = string.Empty;
    //                txtlastdayred.Text = string.Empty;
    //            }            
    //      }
    //        else if (GVCommand == "delete")
    //        { 
    //            BindGridSpecial();
    //            //System.Text.StringBuilder sb = new System.Text.StringBuilder();
    //            //sb.Append("<script type = 'text/javascript'>");
    //            //sb.Append("window.onload=function(){");
    //            //sb.Append("ShowMessageSucess('");
    //            //sb.Append("')};");
    //            //sb.Append("</script>");
    //            //Page.ClientScript.RegisterClientScriptBlock(this.GetType(), "Message", sb.ToString());
    //        }
    //    }
    //    catch (Exception ex)
    //    {
    //        throw ex;
    //    }
    //}


    //Multiple Special Assessment Section
    //protected void BindGridSpecial()
    //{
    //    if (txtSpcelAsst.Text == "Yes")
    //    {
    //        MultiSpecial.DataSource = (DataTable)ViewState["MultiSpecial"];
    //        MultiSpecial.DataBind();
    //    }
    //}
    //protected void MultiSpecial_Click(object sender, EventArgs e)
    //{

    //    DataTable mdt1 = (DataTable)ViewState["MultiSpecial"];
    //    if (txtdescription.Text.Trim() == "" || txtspecialassno.Text.Trim() == "" || txtnoinstall.Text.Trim() == "" || txtinstallpaid.Text.Trim() == "" || txtamountspecial.Text.Trim() == "")
    //    {
    //        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Please Fill Fields in Special Assessment Section')", true);
    //        return;
    //    }
    //    if (Convert.ToDecimal(txtamountspecial.Text) <= Convert.ToDecimal("0.00"))
    //    {
    //        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Amount in Special Assessment Section should be greater than zero')", true);
    //        return;
    //    }

    //    mdt1.Rows.Add(txtdescription.Text.Trim(), txtspecialassno.Text.Trim(), txtnoinstall.Text.Trim(), txtinstallpaid.Text.Trim(), txtamountspecial.Text.Trim());
    //    ViewState["MultiSpecial"] = mdt1;
    //    this.BindGridSpecial();
    //    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //    ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtVisible();", true);
    //    txtdescription.Text = string.Empty;
    //    txtspecialassno.Text = string.Empty;
    //    txtnoinstall.Text = string.Empty;
    //    txtinstallpaid.Text = string.Empty;
    //    txtamountspecial.Text = string.Empty;
    //}

    //protected void MultiSpecial_RowDeleting(object sender, GridViewDeleteEventArgs e)
    //{
    //    int index = Convert.ToInt32(e.RowIndex);
    //    DataTable dt = (DataTable)ViewState["MultiSpecial"];
    //    dt.Rows[index].Delete();
    //    ViewState["MultiSpecial"] = dt;
    //    BindGridSpecial();
    //}

    //protected void MultiSpecial_RowEditing(object sender, GridViewEditEventArgs e)
    //{
    //    try
    //    {
    //        MultiSpecial.EditIndex = e.NewEditIndex;
    //        BindGridSpecial();
    //        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtpayment();", true);
    //        ScriptManager.RegisterStartupScript(this, this.GetType(), "Pop", "txtVisible();", true);
    //    }
    //    catch (Exception ex)
    //    {
    //        throw ex;
    //    }
    //}

    //protected void MultiSpecial_RowCommand(object sender, GridViewCommandEventArgs e)
    //{
    //    try
    //    {
    //        string GVCommand = e.CommandName.ToLower();

    //        if (GVCommand == "edit")
    //        {
    //            int rowIndex = Convert.ToInt32(e.CommandArgument);
    //            GridViewRow row1 = GridView1.Rows[rowIndex];
    //            string description = (row1.FindControl("txtdescription") as TextBox).Text;
    //            string specialassno = row1.Cells[1].Text;
    //            string noinstall = row1.Cells[2].Text;
    //            string installpaid = row1.Cells[3].Text;
    //            string amountspecial = row1.Cells[4].Text;
    //            txtdescription.Text = description;
    //            txtspecialassno.Text = specialassno;
    //            txtnoinstall.Text = noinstall;
    //            txtinstallpaid.Text = installpaid;
    //            txtamountspecial.Text = amountspecial;
    //            //ClientScript.RegisterStartupScript(this.GetType(), "alert", "alert('Description: " + description + "\\nSpecialassno: " + specialassno + "');", true);

    //            LinkButton lnkedit = (LinkButton)MultiSpecial.Rows[rowIndex].FindControl("LnkEdit");
    //            btnSpecialAssesment.Enabled = false;
    //            // lnkedit.Text = "Update";
    //            lnkedit.CommandName = "Update";
    //            lnkedit.CssClass = "glyphicon glyphicon-ok";
    //            lnkedit.ToolTip = "Update";
    //            lnkedit.OnClientClick = "javascript : return confirm('Are you sure, want to update this Row?');";
    //            LinkButton lnkcancel = (LinkButton)MultiSpecial.Rows[rowIndex].FindControl("LnkCancel");
    //            lnkcancel.Visible = true;
    //            //// loadgridtax();
    //        }

    //        else if (GVCommand == "update")
    //        {

    //            int rowIndex = Convert.ToInt32(e.CommandArgument);
    //            GridViewRow row1 = GridView1.Rows[rowIndex];
    //            LinkButton lnkedit = (LinkButton)MultiSpecial.Rows[rowIndex].FindControl("LnkEdit");
    //            btnSpecialAssesment.Enabled = false;
    //            lnkedit.CommandName = "Edit";
    //            lnkedit.CssClass = "glyphicon glyphicon-edit";
    //            lnkedit.ToolTip = "Edit";
    //            BindGridSpecial();
    //            LinkButton lnkcancel = (LinkButton)MultiSpecial.Rows[rowIndex].FindControl("LnkCancel");
    //            lnkcancel.Visible = false;
    //        }
    //        else if (GVCommand == "delete")
    //        {
    //            string Item_ID = (e.CommandArgument).ToString();
    //            GridViewRow row = (GridViewRow)(((LinkButton)e.CommandSource).NamingContainer);
    //            int rid = row.RowIndex;
    //            BindGridSpecial();
    //            ////System.Text.StringBuilder sb = new System.Text.StringBuilder();
    //            ////sb.Append("<script type = 'text/javascript'>");
    //            ////sb.Append("window.onload=function(){");
    //            ////sb.Append("ShowMessageSucess('");
    //            ////sb.Append("')};");
    //            ////sb.Append("</script>");
    //            ////Page.ClientScript.RegisterClientScriptBlock(this.GetType(), "Message", sb.ToString());
    //        }
    //    }
    //    catch (Exception ex)
    //    {
    //        throw ex;
    //    }
    //}


    //Keying Qc Comparison 

    protected void Compatebtn_Click(object sender, EventArgs e)
    {
        LblUpload.Text = "";
        string[] validFileTypes = { "pdf" };
        string ext = System.IO.Path.GetExtension(FileUpload1.PostedFile.FileName);
        bool isValidFile = false;
        for (int i = 0; i < validFileTypes.Length; i++)
        {
            if (ext == "." + validFileTypes[i])
            {
                isValidFile = true;
                break;
            }
        }
        if (ext == "")
        {
            LblUpload.ForeColor = System.Drawing.Color.Red;
            LblUpload.Text = "Please Choose a File";
            return;
        }

        if (!isValidFile)
        {
            LblUpload.ForeColor = System.Drawing.Color.Red;
            LblUpload.Text = "Invalid File. Please upload a File with pdf extension " +
                           string.Join(",", validFileTypes);
        }

        else
        {
            pdfpath = Server.MapPath(System.IO.Path.Combine("~/PdfFiles/") + FileUpload1.FileName);

            if (System.IO.File.Exists(pdfpath))
            {
                System.GC.Collect();
                System.GC.WaitForPendingFinalizers();
                System.IO.File.Delete(pdfpath);
                FileUpload1.SaveAs(pdfpath);
                Bindmismatcheddata();
            }
            else
            {
                FileUpload1.SaveAs(pdfpath);
                Bindmismatcheddata();
            }
        }
    }

    private void Bindmismatcheddata()
    {
        PdfReader reader = new PdfReader(pdfpath);
        int PageNum = reader.NumberOfPages;
        string[] words1;
        string line = "";
        var ordnum = "";

        extractsamplepdftext();
        comparision();
        comparision1();

        MySqlConnection con = new MySqlConnection(ConfigurationManager.ConnectionStrings["MysqlConnection"].ConnectionString);

        string currentText = string.Empty;
        StringBuilder text2 = new StringBuilder();
        for (int i = 1; i <= PageNum; i++)
        {
            currentText = PdfTextExtractor.GetTextFromPage(reader, i, new LocationTextExtractionStrategy());
            words1 = currentText.Split('\n');

            for (int b = 0, len1 = words1.Length; b < len1; b++)
            {
                line = Encoding.UTF8.GetString(Encoding.UTF8.GetBytes(words1[b]));

                if (line.Contains("Order Number: "))
                {
                    string ordernumber = line;
                    ordnum = Regex.Match(ordernumber, @"Number: (.+?) ").Groups[1].Value;

                    if (ordnum.Trim() == Lblorderno.Text.Trim())
                    {
                        con.Open();
                        MySqlCommand cmd11 = new MySqlCommand("SELECT distinct t.ParcelId,t.TaxType FROM tbl_search_tax_key t  where t.OrderNo = '" + Lblorderno.Text + "' and t.TaxType is not null and t.ParcelId is not null;", con);
                        MySqlDataAdapter nuda11 = new MySqlDataAdapter(cmd11);
                        DataTable nudt11 = new DataTable();
                        nuda11.Fill(nudt11);

                        MySqlCommand cmd22 = new MySqlCommand("SELECT distinct t.ParcelId,t.TaxType FROM tbl_client_tool_data t  where t.OrderNo = '" + Lblorderno.Text + "' and t.TaxType is not null and t.ParcelId is not null;", con);
                        MySqlDataAdapter nuda22 = new MySqlDataAdapter(cmd22);
                        DataTable nudt22 = new DataTable();
                        nuda22.Fill(nudt22);

                        int countatt = 0;
                        int len2 = nudt11.Rows.Count;
                        int len3 = nudt22.Rows.Count;
                        for (int k = 0; k < len2; k++)
                        {
                            for (int h = 0; h < len3; h++)
                            {
                                string Parcel_ID = "";
                                string Tax_Type = "";
                                string Parcel_ID1 = "";
                                string Tax_Type1 = "";

                                foreach (DataRow alertdata in nudt11.Rows)
                                {
                                    Parcel_ID = alertdata["ParcelId"].ToString();
                                    Tax_Type = alertdata["TaxType"].ToString();
                                    foreach (DataRow alertdata1 in nudt22.Rows)
                                    {
                                        Parcel_ID1 = alertdata1["ParcelId"].ToString();
                                        Tax_Type1 = alertdata1["TaxType"].ToString();
                                        if ((Parcel_ID == Parcel_ID1) && (Tax_Type == Tax_Type1))
                                        {
                                            countatt = countatt + 1;
                                        }
                                    }
                                }
                            }
                        }

                        if (countatt >= 1)
                        {
                            pagedimmer.Visible = true;
                            MismatchPopup.Visible = true;
                        }
                        else
                        {
                            ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Tax Id and Tax Type should be same in Keying Data and Client Tool Data')", true);
                            return;
                        }

                        int attemptdetails = 0;
                        MySqlCommand cmd1 = new MySqlCommand("SELECT OrderNo,Attempt FROM tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1 ", con);
                        MySqlDataReader dr = cmd1.ExecuteReader();
                        if (dr.Read())
                        {
                            PopOrderno.Text = dr["OrderNo"].ToString();
                            attemptdetails = Convert.ToInt32(dr["Attempt"].ToString());
                        }
                        con.Close();

                        using (MySqlConnection con4 = new MySqlConnection(constr))
                        {
                            using (MySqlCommand cmd4 = new MySqlCommand("SELECT t.Parcel_id,t.TaxType,m.FieldLabel as Field_id, t.Mismatch_Keying_Data, t.Mismatch_ClientTool_Data FROM tbl_mismatch_data1 t join tbl_field_master m on m.Field_id = t.Field_id where t.OrderNo = '" + Lblorderno.Text + "' and t.Attempt = '" + attemptdetails + "'"))
                            {
                                using (MySqlDataAdapter sda4 = new MySqlDataAdapter())
                                {
                                    cmd4.Connection = con4;
                                    sda4.SelectCommand = cmd4;
                                    using (DataTable dt4 = new DataTable())
                                    {
                                        sda4.Fill(dt4);
                                        GridView_Mismatch.DataSource = dt4;
                                        GridView_Mismatch.DataBind();
                                        PopMismatch.Text = GridView_Mismatch.Rows.Count.ToString();
                                        deleteclienttooldata();
                                        deletedelinquentdata();
                                        deletespecialassessment();
                                    }
                                }
                            }
                        }
                        pagedimmer.Visible = true;
                        MismatchPopup.Visible = true;
                    }
                }
            }
        }

    }

    private void deleteclienttooldata()
    {
        MySqlConnection dbdel = new MySqlConnection(constr);
        dbdel.Open();
        string delete = "delete from tbl_client_tool_data where OrderNo = '" + Lblorderno.Text + "'";
        MySqlCommand cmddel = new MySqlCommand(delete, dbdel);
        int d = cmddel.ExecuteNonQuery();
        dbdel.Close();
    }

    private void deletedelinquentdata()
    {
        MySqlConnection dbdel = new MySqlConnection(constr);
        dbdel.Open();
        string delete = "delete from tbl_client_tool_delinquent_data where ordernumber = '" + Lblorderno.Text + "'";
        MySqlCommand cmddel = new MySqlCommand(delete, dbdel);
        int d = cmddel.ExecuteNonQuery();
        dbdel.Close();
    }

    private void deletespecialassessment()
    {
        MySqlConnection dbdel = new MySqlConnection(constr);
        dbdel.Open();
        string delete = "delete from tbl_client_tool_special_assessment_data where ordernumber = '" + Lblorderno.Text + "'";
        MySqlCommand cmddel = new MySqlCommand(delete, dbdel);
        int d = cmddel.ExecuteNonQuery();
        dbdel.Close();
    }


    string constr = ConfigurationManager.ConnectionStrings["MysqlConnection"].ConnectionString;

    private void extractsamplepdftext()
    {
        string currentText = string.Empty;
        StringBuilder text2 = new StringBuilder();
        PdfReader reader = new PdfReader(pdfpath);

        int PageNum = reader.NumberOfPages;
        string[] words;
        string line = "";

        for (int i = 1; i <= PageNum; i++)
        {
            currentText = PdfTextExtractor.GetTextFromPage(reader, i, new LocationTextExtractionStrategy());
            words = currentText.Split('\n');

            if (words.Contains("Please wait... "))
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Incorrect Pdf File Format')", true);
                return;
            }

            var ordnum = "";
            var txtype = "";
            var txyr = "";
            var edyr = "";
            var parcelid = "";
            var payfreq = "";
            string test = "";


            //delinquent status
            string delinquentstatusdetails = "";

            //Inst Amount
            string firstamount = "";
            string secondamount = "";
            string thirdamount = "";
            string fourthamount = "";

            //Inst Amount Paid
            string firstamountpaid = "";
            string secondamountpaid = "";
            string thirdamountpaid = "";
            string fourthamountpaid = "";

            //Inst paid due
            string firstpaiddue = "";
            string secondpaiddue = "";
            string thirdpaiddue = "";
            string fourthpaiddue = "";

            //Remaining Balance
            string remainingbalance1 = "";
            string remainingbalance2 = "";
            string remainingbalance3 = "";
            string remainingbalance4 = "";

            //Discount Amount
            string discountamount1 = "";
            string discountamount2 = "";
            string discountamount3 = "";
            string discountamount4 = "";

            //Exempt Relev
            string exemptrelev1 = "";
            string exemptrelev2 = "";
            string exemptrelev3 = "";
            string exemptrelev4 = "";

            //taxbill
            string txbill = "";

            //delinquent status
            string delinquentstatus = "";
            string delinquentstatus1 = "";

            string delinqtaxyear = "";
            string delinqtaxyear1 = "";
            string delinqtaxyear2 = "";
            string delinqyr = "";

            string payoff = "";
            string payoff1 = "";
            string payoff2 = "";
            string payoff3 = "";

            string payoffamount = "";
            string goodthrdate = "";
            string duedate = "";

            string notapplicable = "";
            string notappli = "";

            string taxsales = "";
            string lasday = "";


            string taxsal = "";
            string lastday = "";


            //special assessment
            string Spl_Description = "";
            string Spl_Assm_Num = "";
            string Spl_No_Inst = "";
            string Spl_Inst_Paid = "";
            string Spl_Amount = "";

            for (int b = 0, len = words.Length; b < len; b++)
            {
                line = Encoding.UTF8.GetString(Encoding.UTF8.GetBytes(words[b]));

                if (line.Contains("Order Number: "))
                {
                    string ordernumber = line;
                    ordnum = Regex.Match(ordernumber, @"Number: (.+?) ").Groups[1].Value;

                    //ordnum = Lblorderno.Text;
                    if (ordnum.Trim() != Lblorderno.Text.Trim())
                    {
                        LblUpload.Text = "";
                        pagedimmer.Visible = false;
                        MismatchPopup.Visible = false;
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "alertMessage", "alert('Order Number Not Matched')", true);
                        return;
                    }
                }
            }

            for (int j = 0, len = words.Length; j < len; j++)
            {
                line = Encoding.UTF8.GetString(Encoding.UTF8.GetBytes(words[j]));

                if (line.Contains("Order Number: "))
                {
                    string ordernumber = line;
                    ordnum = Regex.Match(ordernumber, @"Number: (.+?) ").Groups[1].Value;
                    //ordnum = Lblorderno.Text;
                }
                else if (line.Contains("Tax Agency Type: "))
                {
                    string taxtype = line.Replace("Tax Agency Type: ", "$");
                    taxtype = taxtype.Replace("Tax Year Start Date:", "$");
                    string[] ai = taxtype.Split('$');
                    txtype = ai[1].ToString();

                    //txtype = Regex.Replace(txtype, @"\s", "");

                    MySqlConnection db = new MySqlConnection(constr);
                    db.Open();
                    string insert1 = "insert into tbl_client_comparisonnew (OrderNumber,TaxType,Parcel_Id) values ('" + ordnum + "','" + txtype + "','" + parcelid + "')";

                    MySqlCommand cmd = new MySqlCommand(insert1, db);
                    int m = cmd.ExecuteNonQuery();
                    db.Close();
                }
                else if (line.Contains("Tax Year:") && (line.Contains("Tax Id")))
                {
                    string taxdetails = line.Replace("Tax Id", "$");
                    taxdetails = taxdetails.Replace("Tax Year:", "$");
                    taxdetails = taxdetails.Replace("End Year (if applicable):", "$");
                    taxdetails = taxdetails.Replace(" TBD Estimate", "$");

                    if (taxdetails.Contains("TBD ✔ Estimate"))
                    {
                        taxdetails = taxdetails.Replace("TBD ✔ Estimate", "$");
                    }

                    string[] ai = taxdetails.Split('$');

                    parcelid = ai[1].ToString();

                    //parcelid = Regex.Replace(parcelid, @"\s", "");

                    txyr = ai[2].ToString();
                    edyr = ai[3].ToString();
                }

                else if (line.Contains("End Year:"))
                {
                    string endyear = line;
                    edyr = Regex.Match(endyear, @"applicable): (.+?) ").Groups[1].Value;
                    test = edyr;
                }

                else if (line.Contains("Payment Frequency: "))
                {
                    string paymentfrequency = line;
                    payfreq = Regex.Match(paymentfrequency, @"Frequency: (.+?) ").Groups[1].Value;
                }

                else if (line.Contains("Inst. Amount: "))
                {
                    string taxamoun = line.Replace("Inst. Amount:", "$");
                    string[] ai = taxamoun.Split('$');

                    firstamount = ai[1].ToString();
                    secondamount = ai[2].ToString();
                    thirdamount = ai[3].ToString();
                    fourthamount = ai[4].ToString();
                }

                else if (line.Contains("Inst. Amount Paid: "))
                {
                    string amountpaiddetails = line.Replace("Inst. Amount Paid:", "$");
                    string[] ai = amountpaiddetails.Split('$');

                    firstamountpaid = ai[1].ToString();
                    secondamountpaid = ai[2].ToString();
                    thirdamountpaid = ai[3].ToString();
                    fourthamountpaid = ai[4].ToString();
                }

                else if (line.Contains("Inst. Paid/Due? "))
                {
                    string Inst = line.Replace("Inst. Paid/Due?", "$");
                    string[] ai = Inst.Split('$');

                    firstpaiddue = ai[1].ToString().Trim();
                    secondpaiddue = ai[2].ToString().Trim();
                    thirdpaiddue = ai[3].ToString().Trim();
                    fourthpaiddue = ai[4].ToString().Trim();
                }

                else if (line.Contains("Amount: ") && (line.Contains("Remaining Balance: ") && (line.Contains("Good Through Date:"))))
                {
                    string remainingb = line.Replace("Remaining Balance:", "$");
                }

                else if (line.Contains("Remaining Balance: "))
                {
                    string remainingbalancedetails = line.Replace("Remaining Balance:", "$");
                    string[] ai = remainingbalancedetails.Split('$');

                    remainingbalance1 = ai[1].ToString();
                    remainingbalance2 = ai[2].ToString();
                    remainingbalance3 = ai[3].ToString();
                    remainingbalance4 = ai[4].ToString();
                }

                else if (line.Contains("Discount Amount: "))
                {
                    string discountamountdetails = line.Replace("Discount Amount:", "$");
                    string[] ai = discountamountdetails.Split('$');

                    discountamount1 = ai[1].ToString();
                    discountamount2 = ai[2].ToString();
                    discountamount3 = ai[3].ToString();
                    discountamount4 = ai[4].ToString();
                }

                else if (line.Contains("Exempt/Relevy ? "))
                {
                    string exempt = line.Replace("Exempt/Relevy ?", "$");
                    string[] ai = exempt.Split('$');

                    exemptrelev1 = ai[1].ToString();
                    exemptrelev2 = ai[2].ToString();
                    exemptrelev3 = ai[3].ToString();
                    exemptrelev4 = ai[4].ToString();

                    if (exemptrelev1 == " ")
                    {
                        exemptrelev1 = "No";
                    }
                    if (exemptrelev2 == " ")
                    {
                        exemptrelev2 = "No";
                    }
                    if (exemptrelev3 == " ")
                    {
                        exemptrelev3 = "No";
                    }
                    if (exemptrelev4 == "")
                    {
                        exemptrelev4 = "No";
                    }

                    if (exemptrelev1 == " ✔ ")
                    {
                        exemptrelev1 = "Yes";
                    }
                    if (exemptrelev2 == " ✔ ")
                    {
                        exemptrelev2 = "Yes";
                    }
                    if (exemptrelev3 == " ✔ ")
                    {
                        exemptrelev3 = "Yes";
                    }
                    if (exemptrelev4 == " ✔")
                    {
                        exemptrelev4 = "Yes";
                    }
                }
                else if (line.Contains("✔"))
                {
                    exemptrelev1 = "Yes";
                    exemptrelev2 = "No";
                    exemptrelev3 = "No";
                    exemptrelev4 = "No";
                }
                else if (line.Contains("Tax Bill: "))
                {
                    string taxbill = line;
                    txbill = Regex.Match(taxbill, @"Tax Bill: (.+?) ").Groups[1].Value;

                    if (taxbill.Contains("Current"))
                    {
                        txbill = "Current";
                    }
                    else if (taxbill.Contains("Previous"))
                    {
                        txbill = "Previous";
                    }
                }


                //delinquent status 
                else if (line.Contains("Are there any delinquencies? "))
                {
                    delinquentstatus = line.Replace("Are there any delinquencies?", "$");
                    delinquentstatus1 = delinquentstatus.Replace("Is this property taxed as the primary residence?", "$");
                    string[] ai = delinquentstatus1.Split('$');
                    delinquentstatusdetails = ai[1].ToString().Trim();

                    if (delinquentstatusdetails == "✔")
                    {
                        delinquentstatusdetails = delinquentstatusdetails.Replace("✔", "Yes");
                    }
                }

                if (line.Contains("Delinquent Tax Year: "))
                {
                    delinqtaxyear = line.Replace("Base Amount Due:", "$");
                    delinqtaxyear1 = delinqtaxyear.Replace("Delinquent Tax Year:", "$");
                    delinqtaxyear2 = delinqtaxyear1.Replace("Roll Over Date:", "$");
                    string[] delinqyrr = delinqtaxyear2.Split('$');

                    delinqyr = delinqyrr[2].ToString().Trim();
                }

                else if (line.Contains("Payoff Amount: "))
                {
                    payoff = line.Replace("Penalties Amount Due Date:", "$");
                    payoff1 = payoff.Replace("Payoff Amount:", "$");
                    payoff2 = payoff1.Replace("Payoff Good Thru Date:", "$");
                    payoff3 = payoff2.Replace("Initial Installment Due Date:", "$");
                    string[] pff = payoff3.Split('$');

                    payoffamount = pff[2].ToString().Trim();
                    goodthrdate = pff[3].ToString().Trim();
                    duedate = pff[4].ToString().Trim();
                }
                else if (line.Contains("Not Applicable:"))
                {
                    notapplicable = line.Replace("Not Applicable:", "$");
                    string[] not = notapplicable.Split('$');
                    notappli = not[1].ToString().Trim();

                    if (notappli == "✔")
                    {
                        notappli = notappli.Replace("✔", "Yes");
                        try
                        {
                            MySqlConnection db1 = new MySqlConnection(constr);
                            db1.Open();
                            string insert = "insert into tbl_client_tool_delinquent_data (ordernumber,parcelid,taxtype,taxyear,delinquenttaxyear,payoffamount,goodthroughdate,duedate,notapplicable,dateoftaxsale,lastdateredeem) values ( '" + ordnum + "','" + parcelid + "','" + txtype + "','" + txyr + "','" + delinqyr + "','" + payoffamount + "','" + goodthrdate + "','" + duedate + "','" + notappli + "','" + taxsal + "','" + lastday + "')";
                            MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                            int m = cmd2.ExecuteNonQuery();
                            db1.Close();
                        }
                        catch (Exception ex)
                        {

                        }
                    }
                }
                else if (line.Contains("Date of Tax Sale: "))
                {
                    taxsales = line.Replace("Date of Tax Sale:", "$");
                    lasday = taxsales.Replace("Last Day to Redeem:", "$");
                    string[] sale = lasday.Split('$');

                    taxsal = sale[1].ToString().Trim();
                    lastday = sale[2].ToString().Trim();

                    if (taxsal != "" || lastday != "")
                    {
                        try
                        {
                            MySqlConnection db1 = new MySqlConnection(constr);
                            db1.Open();
                            string insert = "insert into tbl_client_tool_delinquent_data (ordernumber,parcelid,taxtype,taxyear,delinquenttaxyear,payoffamount,goodthroughdate,duedate,notapplicable,dateoftaxsale,lastdateredeem) values ( '" + ordnum + "','" + parcelid + "','" + txtype + "','" + txyr + "','" + delinqyr + "','" + payoffamount + "','" + goodthrdate + "','" + duedate + "','" + notappli + "','" + taxsal + "','" + lastday + "')";
                            MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                            int m = cmd2.ExecuteNonQuery();
                            db1.Close();
                        }

                        catch (Exception ex)
                        {

                        }
                    }
                }

                //special assessment details            
                if (line.Contains("Description:") && line.Contains("Special Assessment Number:") && line.Contains("Number Of Installments:"))
                {
                    string Specialdetails1 = line.Replace("Description: ", "$");
                    Specialdetails1 = Specialdetails1.Replace("Special Assessment Number:", "$");
                    Specialdetails1 = Specialdetails1.Replace("Number Of Installments:", "$");
                    Specialdetails1 = Specialdetails1.Replace("Installments: ", "$");

                    string[] si = Specialdetails1.Split('$');

                    Spl_Description = si[1].ToString();
                    Spl_Assm_Num = si[2].ToString().Trim();
                    Spl_No_Inst = si[3].ToString();
                }

                else if (line.Contains("Installments Paid: "))
                {
                    string InstallmentPaid = line;
                    Spl_Inst_Paid = Regex.Match(InstallmentPaid, @"Paid: (.+?) ").Groups[1].Value;

                    if (Spl_Inst_Paid == "Installments")
                    {
                        Spl_Inst_Paid = "";
                    }
                }

                else if (line.Contains("Through Date: "))
                {
                    string Amount = line;
                    Spl_Amount = Regex.Match(Amount, @"Amount: (.+?) ").Groups[1].Value;
                }

                else if (line.Contains("Comments:"))
                {
                    try
                    {
                        MySqlConnection db2 = new MySqlConnection(constr);
                        db2.Open();
                        string insert = "insert into tbl_client_tool_special_assessment_data (ordernumber,parcelid,taxtype,taxyear,description,special_assessment_number,number_of_installment,installments_paid,amount) values ( '" + ordnum + "','" + parcelid + "','" + txtype + "','" + txyr + "','" + Spl_Description + "','" + Spl_Assm_Num + "','" + Spl_No_Inst + "','" + Spl_Inst_Paid + "','" + Spl_Amount + "')";
                        MySqlCommand cmd3 = new MySqlCommand(insert, db2);
                        int m = cmd3.ExecuteNonQuery();
                        db2.Close();
                    }
                    catch (Exception ex)
                    {

                    }
                }
                else if (line.Contains("Are there any additional Exemptions?"))
                {
                    try
                    {
                        //ordernumber
                        string order = ordnum;
                        //taxtype
                        string txty = txtype;
                        //parcelid
                        string parid = parcelid;
                        //paymentfrequency
                        string payfre = payfreq;
                        if (payfre == "Annual")
                        {
                            payfre = "1";
                        }
                        else if (payfre == "Semi-Annual")
                        {
                            payfre = "2";
                        }
                        else if (payfre == "Quarterly")
                        {
                            payfre = "3";
                        }
                        //firstpaid
                        string firpd = "";
                        //firstdue
                        string firstdu = "";
                        //secondpaid
                        string secd = "";
                        //seconddue
                        string secdu = "";
                        //thirdpaid
                        string thirp = "";
                        //thirddue
                        string thirdu = "";
                        //fourthpaid
                        string fourp = "";
                        //fourthdue
                        string fourdu = "";
                        if (firstpaiddue == "Paid")
                        {
                            firpd = "1";
                        }
                        else if (firstpaiddue == "Due")
                        {
                            firstdu = "1";
                        }
                        if (secondpaiddue == "Paid")
                        {
                            secd = "1";
                        }
                        else if (secondpaiddue == "Due")
                        {
                            secdu = "1";
                        }
                        if (thirdpaiddue == "Paid")
                        {
                            thirp = "1";
                        }
                        else if (thirdpaiddue == "Due")
                        {
                            thirdu = "1";
                        }
                        if (fourthpaiddue == "Paid")
                        {
                            fourp = "1";
                        }
                        else if (fourthpaiddue == "Due")
                        {
                            fourdu = "1";
                        }

                        string taxagency = txtype;

                        DataTable dtsearch = new DataTable();
                        dtsearch = gl.FetchSearch_Keying(Lblorderno.Text);

                        MySqlConnection db1 = new MySqlConnection(constr);

                        MySqlCommand cmdnew = new MySqlCommand("select ordernumber,TaxType,Parcel_Id from tbl_client_comparisonnew where  ordernumber = '" + Lblorderno.Text + "'", db1);
                        MySqlDataAdapter da = new MySqlDataAdapter(cmdnew);
                        DataTable dt = new DataTable();
                        da.Fill(dt);


                        for (int i1 = 0; i1 < dtsearch.Rows.Count; i1++)
                        {
                            string searchorderno = dtsearch.Rows[i1]["OrderNo"].ToString().Trim();
                            string searchtaxtype = dtsearch.Rows[i1]["TaxType"].ToString().Trim();
                            string searchParcelId = dtsearch.Rows[i1]["ParcelId"].ToString().Trim();

                            //searchParcelId = Regex.Replace(searchParcelId, @"\s", "");
                            //searchtaxtype = Regex.Replace(searchtaxtype, @"\s", "");

                            for (int j1 = 0; j1 < dt.Rows.Count; j1++)
                            {
                                string taxtype = dt.Rows[j1]["TaxType"].ToString().Trim();
                                string parcelid1 = dt.Rows[j1]["Parcel_Id"].ToString().Trim();

                                //if (i1 == j1)
                                //{
                                if ((searchorderno == Lblorderno.Text) && (searchtaxtype == taxtype) && (searchParcelId == parcelid1))
                                {
                                    MySqlConnection db = new MySqlConnection(constr);
                                    db.Open();
                                    string insert = "insert into tbl_Client_Tool_Data (OrderNo,TaxType,TaxYear,EndYear,ParcelId,DelinquentStatus,payfreq,firstpaid,firstdue,TaxAmount,TaxDiscountAmount,TaxAmountPaid,RemainingBalance,ExemptionStatus,secoundpaid,secounddue,TaxAmount1,TaxDiscountAmount1,TaxAmountPaid1,RemainingBalance1,ExemptionStatus1,thirdpaid,thirddue,TaxAmount2,TaxDiscountAmount2,TaxAmountPaid2,RemainingBalance2,ExemptionStatus2,fourthpaid,fourthdue,TaxAmount3,TaxDiscountAmount3,TaxAmountPaid3,RemainingBalance3,ExemptionStatus3,taxbill) values ('" + order + "','" + taxtype + "','" + txyr + "','" + edyr + "','" + parcelid1 + "','" + delinquentstatusdetails + "','" + payfre + "','" + firpd + "','" + firstdu + "','" + firstamount + "','" + discountamount1 + "','" + firstamountpaid + "','" + remainingbalance1 + "','" + exemptrelev1 + "','" + secd + "','" + secdu + "','" + secondamount + "','" + discountamount2 + "','" + secondamountpaid + "','" + remainingbalance2 + "','" + exemptrelev2 + "','" + thirp + "','" + thirdu + "','" + thirdamount + "','" + discountamount3 + "','" + thirdamountpaid + "','" + remainingbalance3 + "','" + exemptrelev3 + "','" + fourp + "','" + fourdu + "','" + fourthamount + "','" + discountamount4 + "','" + fourthamountpaid + "','" + remainingbalance4 + "','" + exemptrelev4 + "','" + txbill + "' )";
                                    MySqlCommand cmd = new MySqlCommand(insert, db);
                                    int m = cmd.ExecuteNonQuery();
                                    db.Close();
                                }
                                //else
                                //{
                                //    mismatchLabel.Text = "No Record Found";
                                //}
                            }
                        }
                        //}

                        MySqlConnection dbdel = new MySqlConnection(constr);
                        dbdel.Open();
                        string delete = "delete from tbl_client_comparisonnew where ordernumber = '" + Lblorderno.Text + "'";
                        MySqlCommand cmddel = new MySqlCommand(delete, dbdel);
                        int d = cmddel.ExecuteNonQuery();
                        dbdel.Close();
                    }

                    catch (Exception ex)
                    {

                    }
                }
            }
        }
    }

    private void comparision1()
    {
        MySqlConnection db = new MySqlConnection(constr);

        DataTable dtsearch = new DataTable();
        dtsearch = gl.FetchSearch_Keying(Lblorderno.Text);

        DataTable dtclientdata = new DataTable();
        dtclientdata = gl.FetchClient_Data(Lblorderno.Text);


        string keytaxendyear = "";
        string clienttaxendyear = "";


        string keydelinquentstatus = "";
        string clientdelinquentstatus = "";


        string keypayfreq = "";
        string clientpayfreq = "";

        string keytaxyear = "";
        string clienttaxyear = "";

        //first installment
        string keyfirstpaid = "";
        string clientfirstpaid = "";

        string keyTaxAmount = "";
        string clientTaxAmount = "";

        string keyTaxAmountPaid = "";
        string clientTaxAmountPaid = "";

        string keyTaxDiscountAmount = "";
        string clientTaxDiscountAmount = "";

        string keyRemainingBalance = "";
        string clientRemainingBalance = "";

        string keyExemptionStatus = "";
        string clientExemptionStatus = "";


        //second installment
        string keysecondpaid = "";
        string clientsecondpaid = "";

        string keyTaxAmount1 = "";
        string clientTaxAmount1 = "";

        string keyTaxDiscountAmount1 = "";
        string clientTaxDiscountAmount1 = "";

        string keyTaxAmountPaid1 = "";
        string clientTaxAmountPaid1 = "";

        string keyRemainingBalance1 = "";
        string clientRemainingBalance1 = "";

        string keyExemptionStatus1 = "";
        string clientExemptionStatus1 = "";


        //third installment
        string keythirdpaid = "";
        string clienthirdpaid = "";

        string keyTaxAmount2 = "";
        string clientTaxAmount2 = "";

        string keyTaxDiscountAmount2 = "";
        string clientTaxDiscountAmount2 = "";

        string keyTaxAmountPaid2 = "";
        string clientTaxAmountPaid2 = "";

        string keyRemainingBalance2 = "";
        string clientRemainingBalance2 = "";

        string keyExemptionStatus2 = "";
        string clientExemptionStatus2 = "";

        //fourth installment           
        string keyfourthpaid = "";
        string clienfourthpaid = "";

        string keyTaxAmount3 = "";
        string clientTaxAmount3 = "";

        string keyTaxDiscountAmount3 = "";
        string clientTaxDiscountAmount3 = "";

        string keyTaxAmountPaid3 = "";
        string clientTaxAmountPaid3 = "";

        string keyRemainingBalance3 = "";
        string clientRemainingBalance3 = "";

        string keyExemptionStatus3 = "";
        string clientExemptionStatus3 = "";

        //taxbill
        string keytaxbill = "";
        string clienttaxbill = "";

        MySqlCommand attempt = new MySqlCommand("select OrderNo from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "'", db);
        MySqlDataAdapter da2 = new MySqlDataAdapter(attempt);
        DataTable dt2 = new DataTable();
        da2.Fill(dt2);

        MySqlCommand nuattempt = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
        MySqlDataAdapter nuda2 = new MySqlDataAdapter(nuattempt);
        DataTable nudt2 = new DataTable();
        nuda2.Fill(nudt2);


        dbatt = 0;
        attempts = 1;
        attemptcount = dt2.Rows.Count;

        foreach (DataRow noofattempts in nudt2.Rows)
        {
            noattempt = Convert.ToInt32(noofattempts["Attempt"].ToString());
        }

        jattempt = noattempt;

        noattempt = noattempt + 1;

        string insert = "";

        string clientparcelid = "";
        string clienttaxtype = "";

        for (int i = 0; i < dtsearch.Rows.Count; i++)
        {
            string keyorderno = dtsearch.Rows[i]["OrderNo"].ToString().Trim();
            string keyparcelid = dtsearch.Rows[i]["parcelId"].ToString().Trim();

            //keyparcelid = Regex.Replace(keyparcelid, @"\s", "");

            string keytaxtype = dtsearch.Rows[i]["TaxType"].ToString().Trim();

            //keytaxtype = Regex.Replace(keytaxtype, @"\s", "");


            for (int j = 0; j < dtclientdata.Rows.Count; j++)
            {
                clientparcelid = dtclientdata.Rows[j]["parcelId"].ToString().Trim();
                clienttaxtype = dtclientdata.Rows[j]["TaxType"].ToString().Trim();

                if (i == j)
                {
                    if ((keyparcelid == clientparcelid) && (keytaxtype == clienttaxtype))
                    {
                        if (dtsearch.Rows[i]["TaxYear"].ToString().Trim() != dtclientdata.Rows[j]["TaxYear"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            try
                            {
                                keytaxyear = dtsearch.Rows[i]["TaxYear"].ToString().Trim();
                                clienttaxyear = dtclientdata.Rows[j]["TaxYear"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();

                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                                Session["dbatt"] = null;
                                Session["noattempt"] = null;
                                Session["dtpar"] = null;
                                Session["dtatt"] = null;
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["EndYear"].ToString().Trim() != dtclientdata.Rows[j]["EndYear"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);


                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keytaxendyear = dtsearch.Rows[i]["EndYear"].ToString().Trim();
                                clienttaxendyear = dtclientdata.Rows[j]["EndYear"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["DelinquentStatus"].ToString().Trim() != dtclientdata.Rows[j]["DelinquentStatus"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);


                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keydelinquentstatus = dtsearch.Rows[i]["DelinquentStatus"].ToString().Trim();
                                clientdelinquentstatus = dtclientdata.Rows[j]["DelinquentStatus"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                                Session["dbatt"] = null;
                                Session["noattempt"] = null;
                                Session["dtpar"] = null;
                                Session["dtatt"] = null;
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["payfreq"].ToString().Trim() != dtclientdata.Rows[j]["payfreq"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keypayfreq = dtsearch.Rows[i]["payfreq"].ToString().Trim();
                                clientpayfreq = dtclientdata.Rows[j]["payfreq"].ToString().Trim();

                                if (keypayfreq == "1")
                                {
                                    keypayfreq = "Annual";
                                }
                                else if (keypayfreq == "2")
                                {
                                    keypayfreq = "Semi-Annual";
                                }
                                else if (keypayfreq == "3")
                                {
                                    keypayfreq = "Quarterly";
                                }

                                if (clientpayfreq == "1")
                                {
                                    clientpayfreq = "Annual";
                                }
                                else if (clientpayfreq == "2")
                                {
                                    clientpayfreq = "Semi-Annual";
                                }
                                else if (clientpayfreq == "3")
                                {
                                    clientpayfreq = "Quarterly";
                                }

                                if (keypayfreq != clientpayfreq)
                                {
                                    MySqlConnection db1 = new MySqlConnection(constr);
                                    db1.Open();
                                    if (attemptcount == 0)
                                    {
                                        if (parcel_con == 0)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }

                                        else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }

                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }

                                    else if (attemptcount > 0)
                                    {
                                        if (parcel_con == 0)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            if (dbatt == noattempt)
                                            {
                                                insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                            }
                                            else
                                            {
                                                insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                            }
                                        }
                                    }

                                    MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                    int m = cmd2.ExecuteNonQuery();
                                    db1.Close();
                                }
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["Inst.Paid/Due?1"].ToString().Trim() != dtclientdata.Rows[j]["Inst.Paid/Due?1"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyfirstpaid = dtsearch.Rows[i]["Inst.Paid/Due?1"].ToString().Trim();
                                clientfirstpaid = dtclientdata.Rows[j]["Inst.Paid/Due?1"].ToString().Trim();


                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                                Session["dbatt"] = null;
                                Session["noattempt"] = null;
                                Session["dtpar"] = null;
                                Session["dtatt"] = null;
                            }

                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxAmount"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmount"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmount = dtsearch.Rows[i]["TaxAmount"].ToString().Trim();
                                clientTaxAmount = dtclientdata.Rows[j]["TaxAmount"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["TaxDiscountAmount"].ToString().Trim() != dtclientdata.Rows[j]["TaxDiscountAmount"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxDiscountAmount = dtsearch.Rows[i]["TaxDiscountAmount"].ToString().Trim();
                                clientTaxDiscountAmount = dtclientdata.Rows[j]["TaxDiscountAmount"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxAmountPaid"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmountPaid"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmountPaid = dtsearch.Rows[i]["TaxAmountPaid"].ToString().Trim();
                                clientTaxAmountPaid = dtclientdata.Rows[j]["TaxAmountPaid"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["RemainingBalance"].ToString().Trim() != dtclientdata.Rows[j]["RemainingBalance"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyRemainingBalance = dtsearch.Rows[i]["RemainingBalance"].ToString().Trim();
                                clientRemainingBalance = dtclientdata.Rows[j]["RemainingBalance"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["ExemptionStatus"].ToString().Trim() != dtclientdata.Rows[j]["ExemptionStatus"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyExemptionStatus = dtsearch.Rows[i]["ExemptionStatus"].ToString().Trim();
                                clientExemptionStatus = dtclientdata.Rows[j]["ExemptionStatus"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["Inst.Paid/Due?2"].ToString().Trim() != dtclientdata.Rows[j]["Inst.Paid/Due?2"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keysecondpaid = dtsearch.Rows[i]["Inst.Paid/Due?2"].ToString().Trim();
                                clientsecondpaid = dtclientdata.Rows[j]["Inst.Paid/Due?2"].ToString().Trim();


                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxAmount1"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmount1"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmount1 = dtsearch.Rows[i]["TaxAmount1"].ToString().Trim();
                                clientTaxAmount1 = dtclientdata.Rows[j]["TaxAmount1"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["TaxDiscountAmount1"].ToString().Trim() != dtclientdata.Rows[j]["TaxDiscountAmount1"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            try
                            {
                                keyTaxDiscountAmount1 = dtsearch.Rows[i]["TaxDiscountAmount1"].ToString().Trim();
                                clientTaxDiscountAmount1 = dtclientdata.Rows[j]["TaxDiscountAmount1"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["TaxAmountPaid1"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmountPaid1"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmountPaid1 = dtsearch.Rows[i]["TaxAmountPaid1"].ToString().Trim();
                                clientTaxAmountPaid1 = dtclientdata.Rows[j]["TaxAmountPaid1"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["RemainingBalance1"].ToString().Trim() != dtclientdata.Rows[j]["RemainingBalance1"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyRemainingBalance1 = dtsearch.Rows[i]["RemainingBalance1"].ToString().Trim();
                                clientRemainingBalance1 = dtclientdata.Rows[j]["RemainingBalance1"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["ExemptionStatus1"].ToString().Trim() != dtclientdata.Rows[j]["ExemptionStatus1"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyExemptionStatus1 = dtsearch.Rows[i]["ExemptionStatus1"].ToString().Trim();
                                clientExemptionStatus1 = dtclientdata.Rows[j]["ExemptionStatus1"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["Inst.Paid/Due?3"].ToString().Trim() != dtclientdata.Rows[j]["Inst.Paid/Due?3"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keythirdpaid = dtsearch.Rows[i]["Inst.Paid/Due?3"].ToString().Trim();
                                clienthirdpaid = dtclientdata.Rows[j]["Inst.Paid/Due?3"].ToString().Trim();


                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxAmount2"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmount2"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmount2 = dtsearch.Rows[i]["TaxAmount2"].ToString().Trim();
                                clientTaxAmount2 = dtclientdata.Rows[j]["TaxAmount2"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxDiscountAmount2"].ToString().Trim() != dtclientdata.Rows[j]["TaxDiscountAmount2"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxDiscountAmount2 = dtsearch.Rows[i]["TaxDiscountAmount2"].ToString().Trim();
                                clientTaxDiscountAmount2 = dtclientdata.Rows[j]["TaxDiscountAmount2"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxAmountPaid2"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmountPaid2"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);


                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmountPaid2 = dtsearch.Rows[i]["TaxAmountPaid2"].ToString().Trim();
                                clientTaxAmountPaid2 = dtclientdata.Rows[j]["TaxAmountPaid2"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["RemainingBalance2"].ToString().Trim() != dtclientdata.Rows[j]["RemainingBalance2"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyRemainingBalance2 = dtsearch.Rows[i]["RemainingBalance2"].ToString().Trim();
                                clientRemainingBalance2 = dtclientdata.Rows[j]["RemainingBalance2"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["ExemptionStatus2"].ToString().Trim() != dtclientdata.Rows[j]["ExemptionStatus2"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);


                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyExemptionStatus2 = dtsearch.Rows[i]["ExemptionStatus2"].ToString().Trim();
                                clientExemptionStatus2 = dtclientdata.Rows[j]["ExemptionStatus2"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["Inst.Paid/Due?4"].ToString().Trim() != dtclientdata.Rows[j]["Inst.Paid/Due?4"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyfourthpaid = dtsearch.Rows[i]["Inst.Paid/Due?4"].ToString().Trim();
                                clienfourthpaid = dtclientdata.Rows[j]["Inst.Paid/Due?4"].ToString().Trim();


                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }

                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxAmount3"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmount3"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmount3 = dtsearch.Rows[i]["TaxAmount3"].ToString().Trim();
                                clientTaxAmount3 = dtclientdata.Rows[j]["TaxAmount3"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["TaxDiscountAmount3"].ToString().Trim() != dtclientdata.Rows[j]["TaxDiscountAmount3"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxDiscountAmount3 = dtsearch.Rows[i]["TaxDiscountAmount3"].ToString().Trim();
                                clientTaxDiscountAmount3 = dtclientdata.Rows[j]["TaxDiscountAmount3"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["TaxAmountPaid3"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmountPaid3"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null ORDER BY LastUpdate_DateTime DESC LIMIT 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmountPaid3 = dtsearch.Rows[i]["TaxAmountPaid3"].ToString().Trim();
                                clientTaxAmountPaid3 = dtclientdata.Rows[j]["TaxAmountPaid3"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["RemainingBalance3"].ToString().Trim() != dtclientdata.Rows[j]["RemainingBalance3"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyRemainingBalance3 = dtsearch.Rows[i]["RemainingBalance3"].ToString().Trim();
                                clientRemainingBalance3 = dtclientdata.Rows[j]["RemainingBalance3"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["ExemptionStatus3"].ToString().Trim() != dtclientdata.Rows[j]["ExemptionStatus3"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyExemptionStatus3 = dtsearch.Rows[i]["ExemptionStatus3"].ToString().Trim();
                                clientExemptionStatus3 = dtclientdata.Rows[j]["ExemptionStatus3"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["taxbill"].ToString().Trim() != dtclientdata.Rows[j]["TaxBill"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keytaxbill = dtsearch.Rows[i]["taxbill"].ToString().Trim();
                                clienttaxbill = dtclientdata.Rows[j]["TaxBill"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["DelinquentStatus"].ToString().Trim() == "Yes")
                        {
                            Delinquentdetailscomparision1();
                        }
                        if (dtsearch.Rows[i]["SpecialAssessment"].ToString().Trim() == "Yes")
                        {
                            specialassessmentdetailscomparision1();
                        }
                    }
                }
            }
        }
    }

    private void comparision()
    {
        MySqlConnection db = new MySqlConnection(constr);

        DataTable dtsearch = new DataTable();
        dtsearch = gl.FetchSearch_Keying(Lblorderno.Text);

        DataTable dtclientdata = new DataTable();
        dtclientdata = gl.FetchClient_Data(Lblorderno.Text);


        string keytaxendyear = "";
        string clienttaxendyear = "";


        string keydelinquentstatus = "";
        string clientdelinquentstatus = "";


        string keypayfreq = "";
        string clientpayfreq = "";

        string keytaxyear = "";
        string clienttaxyear = "";

        //first installment
        string keyfirstpaid = "";
        string clientfirstpaid = "";

        string keyTaxAmount = "";
        string clientTaxAmount = "";

        string keyTaxAmountPaid = "";
        string clientTaxAmountPaid = "";

        string keyTaxDiscountAmount = "";
        string clientTaxDiscountAmount = "";

        string keyRemainingBalance = "";
        string clientRemainingBalance = "";

        string keyExemptionStatus = "";
        string clientExemptionStatus = "";


        //second installment
        string keysecondpaid = "";
        string clientsecondpaid = "";

        string keyTaxAmount1 = "";
        string clientTaxAmount1 = "";

        string keyTaxDiscountAmount1 = "";
        string clientTaxDiscountAmount1 = "";

        string keyTaxAmountPaid1 = "";
        string clientTaxAmountPaid1 = "";

        string keyRemainingBalance1 = "";
        string clientRemainingBalance1 = "";

        string keyExemptionStatus1 = "";
        string clientExemptionStatus1 = "";


        //third installment
        string keythirdpaid = "";
        string clienthirdpaid = "";

        string keyTaxAmount2 = "";
        string clientTaxAmount2 = "";

        string keyTaxDiscountAmount2 = "";
        string clientTaxDiscountAmount2 = "";

        string keyTaxAmountPaid2 = "";
        string clientTaxAmountPaid2 = "";

        string keyRemainingBalance2 = "";
        string clientRemainingBalance2 = "";

        string keyExemptionStatus2 = "";
        string clientExemptionStatus2 = "";

        //fourth installment           
        string keyfourthpaid = "";
        string clienfourthpaid = "";

        string keyTaxAmount3 = "";
        string clientTaxAmount3 = "";

        string keyTaxDiscountAmount3 = "";
        string clientTaxDiscountAmount3 = "";

        string keyTaxAmountPaid3 = "";
        string clientTaxAmountPaid3 = "";

        string keyRemainingBalance3 = "";
        string clientRemainingBalance3 = "";

        string keyExemptionStatus3 = "";
        string clientExemptionStatus3 = "";

        //taxbill
        string keytaxbill = "";
        string clienttaxbill = "";

        MySqlCommand attempt = new MySqlCommand("select OrderNo from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "'", db);
        MySqlDataAdapter da2 = new MySqlDataAdapter(attempt);
        DataTable dt2 = new DataTable();
        da2.Fill(dt2);

        MySqlCommand nuattempt = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
        MySqlDataAdapter nuda2 = new MySqlDataAdapter(nuattempt);
        DataTable nudt2 = new DataTable();
        nuda2.Fill(nudt2);


        dbatt = 0;
        attempts = 1;
        attemptcount = dt2.Rows.Count;

        foreach (DataRow noofattempts in nudt2.Rows)
        {
            noattempt = Convert.ToInt32(noofattempts["Attempt"].ToString());
        }

        jattempt = noattempt;

        noattempt = noattempt + 1;

        string insert = "";

        string clientparcelid = "";
        string clienttaxtype = "";

        for (int i = 0; i < dtsearch.Rows.Count; i++)
        {
            string keyorderno = dtsearch.Rows[i]["OrderNo"].ToString().Trim();
            string keyparcelid = dtsearch.Rows[i]["parcelId"].ToString().Trim();

            //keyparcelid = Regex.Replace(keyparcelid, @"\s", "");

            string keytaxtype = dtsearch.Rows[i]["TaxType"].ToString().Trim();

            //keytaxtype = Regex.Replace(keytaxtype, @"\s", "");


            for (int j = 0; j < dtclientdata.Rows.Count; j++)
            {
                clientparcelid = dtclientdata.Rows[j]["parcelId"].ToString().Trim();
                clienttaxtype = dtclientdata.Rows[j]["TaxType"].ToString().Trim();

                if (i == j)
                {
                    if ((keyparcelid == clientparcelid) && (keytaxtype == clienttaxtype))
                    {
                        if (dtsearch.Rows[i]["TaxYear"].ToString().Trim() != dtclientdata.Rows[j]["TaxYear"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            try
                            {
                                keytaxyear = dtsearch.Rows[i]["TaxYear"].ToString().Trim();
                                clienttaxyear = dtclientdata.Rows[j]["TaxYear"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();

                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "2" + "','" + keytaxyear + "','" + clienttaxyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                                Session["dbatt"] = null;
                                Session["noattempt"] = null;
                                Session["dtpar"] = null;
                                Session["dtatt"] = null;
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["EndYear"].ToString().Trim() != dtclientdata.Rows[j]["EndYear"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);


                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keytaxendyear = dtsearch.Rows[i]["EndYear"].ToString().Trim();
                                clienttaxendyear = dtclientdata.Rows[j]["EndYear"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "3" + "','" + keytaxendyear + "','" + clienttaxendyear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["DelinquentStatus"].ToString().Trim() != dtclientdata.Rows[j]["DelinquentStatus"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);


                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keydelinquentstatus = dtsearch.Rows[i]["DelinquentStatus"].ToString().Trim();
                                clientdelinquentstatus = dtclientdata.Rows[j]["DelinquentStatus"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "5" + "','" + keydelinquentstatus + "','" + clientdelinquentstatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                                Session["dbatt"] = null;
                                Session["noattempt"] = null;
                                Session["dtpar"] = null;
                                Session["dtatt"] = null;
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["payfreq"].ToString().Trim() != dtclientdata.Rows[j]["payfreq"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keypayfreq = dtsearch.Rows[i]["payfreq"].ToString().Trim();
                                clientpayfreq = dtclientdata.Rows[j]["payfreq"].ToString().Trim();

                                if (keypayfreq == "1")
                                {
                                    keypayfreq = "Annual";
                                }
                                else if (keypayfreq == "2")
                                {
                                    keypayfreq = "Semi-Annual";
                                }
                                else if (keypayfreq == "3")
                                {
                                    keypayfreq = "Quarterly";
                                }

                                if (clientpayfreq == "1")
                                {
                                    clientpayfreq = "Annual";
                                }
                                else if (clientpayfreq == "2")
                                {
                                    clientpayfreq = "Semi-Annual";
                                }
                                else if (clientpayfreq == "3")
                                {
                                    clientpayfreq = "Quarterly";
                                }

                                if (keypayfreq != clientpayfreq)
                                {
                                    MySqlConnection db1 = new MySqlConnection(constr);
                                    db1.Open();
                                    if (attemptcount == 0)
                                    {
                                        if (parcel_con == 0)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }

                                        else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }

                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }

                                    else if (attemptcount > 0)
                                    {
                                        if (parcel_con == 0)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            if (dbatt == noattempt)
                                            {
                                                insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                            }
                                            else
                                            {
                                                insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "8" + "','" + keypayfreq + "','" + clientpayfreq + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                            }
                                        }
                                    }

                                    MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                    int m = cmd2.ExecuteNonQuery();
                                    db1.Close();
                                }
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["Inst.Paid/Due?1"].ToString().Trim() != dtclientdata.Rows[j]["Inst.Paid/Due?1"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyfirstpaid = dtsearch.Rows[i]["Inst.Paid/Due?1"].ToString().Trim();
                                clientfirstpaid = dtclientdata.Rows[j]["Inst.Paid/Due?1"].ToString().Trim();


                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "9" + "','" + keyfirstpaid + "','" + clientfirstpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                                Session["dbatt"] = null;
                                Session["noattempt"] = null;
                                Session["dtpar"] = null;
                                Session["dtatt"] = null;
                            }

                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxAmount"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmount"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmount = dtsearch.Rows[i]["TaxAmount"].ToString().Trim();
                                clientTaxAmount = dtclientdata.Rows[j]["TaxAmount"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "11" + "','" + keyTaxAmount + "','" + clientTaxAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["TaxDiscountAmount"].ToString().Trim() != dtclientdata.Rows[j]["TaxDiscountAmount"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxDiscountAmount = dtsearch.Rows[i]["TaxDiscountAmount"].ToString().Trim();
                                clientTaxDiscountAmount = dtclientdata.Rows[j]["TaxDiscountAmount"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "12" + "','" + keyTaxDiscountAmount + "','" + clientTaxDiscountAmount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxAmountPaid"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmountPaid"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmountPaid = dtsearch.Rows[i]["TaxAmountPaid"].ToString().Trim();
                                clientTaxAmountPaid = dtclientdata.Rows[j]["TaxAmountPaid"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "13" + "','" + keyTaxAmountPaid + "','" + clientTaxAmountPaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["RemainingBalance"].ToString().Trim() != dtclientdata.Rows[j]["RemainingBalance"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyRemainingBalance = dtsearch.Rows[i]["RemainingBalance"].ToString().Trim();
                                clientRemainingBalance = dtclientdata.Rows[j]["RemainingBalance"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "14" + "','" + keyRemainingBalance + "','" + clientRemainingBalance + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["ExemptionStatus"].ToString().Trim() != dtclientdata.Rows[j]["ExemptionStatus"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyExemptionStatus = dtsearch.Rows[i]["ExemptionStatus"].ToString().Trim();
                                clientExemptionStatus = dtclientdata.Rows[j]["ExemptionStatus"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "15" + "','" + keyExemptionStatus + "','" + clientExemptionStatus + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["Inst.Paid/Due?2"].ToString().Trim() != dtclientdata.Rows[j]["Inst.Paid/Due?2"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keysecondpaid = dtsearch.Rows[i]["Inst.Paid/Due?2"].ToString().Trim();
                                clientsecondpaid = dtclientdata.Rows[j]["Inst.Paid/Due?2"].ToString().Trim();


                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "16" + "','" + keysecondpaid + "','" + clientsecondpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxAmount1"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmount1"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmount1 = dtsearch.Rows[i]["TaxAmount1"].ToString().Trim();
                                clientTaxAmount1 = dtclientdata.Rows[j]["TaxAmount1"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "18" + "','" + keyTaxAmount1 + "','" + clientTaxAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["TaxDiscountAmount1"].ToString().Trim() != dtclientdata.Rows[j]["TaxDiscountAmount1"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            try
                            {
                                keyTaxDiscountAmount1 = dtsearch.Rows[i]["TaxDiscountAmount1"].ToString().Trim();
                                clientTaxDiscountAmount1 = dtclientdata.Rows[j]["TaxDiscountAmount1"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "19" + "','" + keyTaxDiscountAmount1 + "','" + clientTaxDiscountAmount1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["TaxAmountPaid1"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmountPaid1"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmountPaid1 = dtsearch.Rows[i]["TaxAmountPaid1"].ToString().Trim();
                                clientTaxAmountPaid1 = dtclientdata.Rows[j]["TaxAmountPaid1"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "20" + "','" + keyTaxAmountPaid1 + "','" + clientTaxAmountPaid1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["RemainingBalance1"].ToString().Trim() != dtclientdata.Rows[j]["RemainingBalance1"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyRemainingBalance1 = dtsearch.Rows[i]["RemainingBalance1"].ToString().Trim();
                                clientRemainingBalance1 = dtclientdata.Rows[j]["RemainingBalance1"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "21" + "','" + keyRemainingBalance1 + "','" + clientRemainingBalance1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["ExemptionStatus1"].ToString().Trim() != dtclientdata.Rows[j]["ExemptionStatus1"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyExemptionStatus1 = dtsearch.Rows[i]["ExemptionStatus1"].ToString().Trim();
                                clientExemptionStatus1 = dtclientdata.Rows[j]["ExemptionStatus1"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "22" + "','" + keyExemptionStatus1 + "','" + clientExemptionStatus1 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["Inst.Paid/Due?3"].ToString().Trim() != dtclientdata.Rows[j]["Inst.Paid/Due?3"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keythirdpaid = dtsearch.Rows[i]["Inst.Paid/Due?3"].ToString().Trim();
                                clienthirdpaid = dtclientdata.Rows[j]["Inst.Paid/Due?3"].ToString().Trim();


                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "23" + "','" + keythirdpaid + "','" + clienthirdpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxAmount2"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmount2"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmount2 = dtsearch.Rows[i]["TaxAmount2"].ToString().Trim();
                                clientTaxAmount2 = dtclientdata.Rows[j]["TaxAmount2"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "25" + "','" + keyTaxAmount2 + "','" + clientTaxAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxDiscountAmount2"].ToString().Trim() != dtclientdata.Rows[j]["TaxDiscountAmount2"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxDiscountAmount2 = dtsearch.Rows[i]["TaxDiscountAmount2"].ToString().Trim();
                                clientTaxDiscountAmount2 = dtclientdata.Rows[j]["TaxDiscountAmount2"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "26" + "','" + keyTaxDiscountAmount2 + "','" + clientTaxDiscountAmount2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxAmountPaid2"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmountPaid2"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);


                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmountPaid2 = dtsearch.Rows[i]["TaxAmountPaid2"].ToString().Trim();
                                clientTaxAmountPaid2 = dtclientdata.Rows[j]["TaxAmountPaid2"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "27" + "','" + keyTaxAmountPaid2 + "','" + clientTaxAmountPaid2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["RemainingBalance2"].ToString().Trim() != dtclientdata.Rows[j]["RemainingBalance2"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyRemainingBalance2 = dtsearch.Rows[i]["RemainingBalance2"].ToString().Trim();
                                clientRemainingBalance2 = dtclientdata.Rows[j]["RemainingBalance2"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "28" + "','" + keyRemainingBalance2 + "','" + clientRemainingBalance2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["ExemptionStatus2"].ToString().Trim() != dtclientdata.Rows[j]["ExemptionStatus2"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);


                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyExemptionStatus2 = dtsearch.Rows[i]["ExemptionStatus2"].ToString().Trim();
                                clientExemptionStatus2 = dtclientdata.Rows[j]["ExemptionStatus2"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "29" + "','" + keyExemptionStatus2 + "','" + clientExemptionStatus2 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["Inst.Paid/Due?4"].ToString().Trim() != dtclientdata.Rows[j]["Inst.Paid/Due?4"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyfourthpaid = dtsearch.Rows[i]["Inst.Paid/Due?4"].ToString().Trim();
                                clienfourthpaid = dtclientdata.Rows[j]["Inst.Paid/Due?4"].ToString().Trim();


                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "30" + "','" + keyfourthpaid + "','" + clienfourthpaid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }

                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["TaxAmount3"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmount3"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmount3 = dtsearch.Rows[i]["TaxAmount3"].ToString().Trim();
                                clientTaxAmount3 = dtclientdata.Rows[j]["TaxAmount3"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "32" + "','" + keyTaxAmount3 + "','" + clientTaxAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["TaxDiscountAmount3"].ToString().Trim() != dtclientdata.Rows[j]["TaxDiscountAmount3"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxDiscountAmount3 = dtsearch.Rows[i]["TaxDiscountAmount3"].ToString().Trim();
                                clientTaxDiscountAmount3 = dtclientdata.Rows[j]["TaxDiscountAmount3"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "33" + "','" + keyTaxDiscountAmount3 + "','" + clientTaxDiscountAmount3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["TaxAmountPaid3"].ToString().Trim() != dtclientdata.Rows[j]["TaxAmountPaid3"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null ORDER BY LastUpdate_DateTime DESC LIMIT 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyTaxAmountPaid3 = dtsearch.Rows[i]["TaxAmountPaid3"].ToString().Trim();
                                clientTaxAmountPaid3 = dtclientdata.Rows[j]["TaxAmountPaid3"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "34" + "','" + keyTaxAmountPaid3 + "','" + clientTaxAmountPaid3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["RemainingBalance3"].ToString().Trim() != dtclientdata.Rows[j]["RemainingBalance3"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyRemainingBalance3 = dtsearch.Rows[i]["RemainingBalance3"].ToString().Trim();
                                clientRemainingBalance3 = dtclientdata.Rows[j]["RemainingBalance3"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "35" + "','" + keyRemainingBalance3 + "','" + clientRemainingBalance3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["ExemptionStatus3"].ToString().Trim() != dtclientdata.Rows[j]["ExemptionStatus3"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyExemptionStatus3 = dtsearch.Rows[i]["ExemptionStatus3"].ToString().Trim();
                                clientExemptionStatus3 = dtclientdata.Rows[j]["ExemptionStatus3"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "36" + "','" + keyExemptionStatus3 + "','" + clientExemptionStatus3 + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                        if (dtsearch.Rows[i]["taxbill"].ToString().Trim() != dtclientdata.Rows[j]["TaxBill"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(nuattempt);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keytaxbill = dtsearch.Rows[i]["taxbill"].ToString().Trim();
                                clienttaxbill = dtclientdata.Rows[j]["TaxBill"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != clientparcelid || mismatchtaxtype != clienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + keyorderno + "','" + keyparcelid + "','" + keytaxtype + "','" + "49" + "','" + keytaxbill + "','" + clienttaxbill + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (dtsearch.Rows[i]["DelinquentStatus"].ToString().Trim() == "Yes")
                        {
                            Delinquentdetailscomparision();
                        }
                        if (dtsearch.Rows[i]["SpecialAssessment"].ToString().Trim() == "Yes")
                        {
                            specialassessmentdetailscomparision();
                        }
                    }
                }
            }
        }
    }

    private void Delinquentdetailscomparision()
    {
        MySqlConnection db = new MySqlConnection(constr);

        //Deliquent Comparision
        MySqlCommand Delsearchcmd = new MySqlCommand("select ordernumber,parcelid,taxtype,taxyear,delinquenttaxyear,payoffamount,goodthroughdate,duedate,notapplicable,dateoftaxsale,lastdateredeem from tbl_search_keying_delinquent_data where  ordernumber = '" + Lblorderno.Text + "'", db);
        MySqlCommand Delclientcmd = new MySqlCommand("select ordernumber,parcelid,taxtype,taxyear,delinquenttaxyear,payoffamount,goodthroughdate,duedate,notapplicable,dateoftaxsale,lastdateredeem from tbl_client_tool_delinquent_data where ordernumber = '" + Lblorderno.Text + "'", db);

        MySqlDataAdapter Delsearchda = new MySqlDataAdapter(Delsearchcmd);
        MySqlDataAdapter Delclientda = new MySqlDataAdapter(Delclientcmd);

        DataTable Delsearchdt = new DataTable();
        DataTable Delclientdt = new DataTable();

        Delsearchda.Fill(Delsearchdt);
        Delclientda.Fill(Delclientdt);

        //Deleinquent            
        string keyDeliquentYear = "";
        string clientDeliquentYear = "";

        string Keypayoffamount = "";
        string clientpayoffamount = "";

        string Keygoodthroughdate = "";
        string clientgoodthroughdate = "";

        string Keyduedate = "";
        string clientduedate = "";

        string Keynotapplicable = "";
        string clientnotapplicable = "";

        string Keydateoftaxsale = "";
        string clientdateoftaxsale = "";

        string Keylastdateredeem = "";
        string clientlastdateredeem = "";

        string insert = "";

        for (int i = 0; i < Delsearchdt.Rows.Count; i++)
        {
            string Delkeyorderno = Delsearchdt.Rows[i]["ordernumber"].ToString().Trim();
            string Delkeyparcelid = Delsearchdt.Rows[i]["parcelid"].ToString().Trim();
            string Deltaxtype = Delsearchdt.Rows[i]["taxtype"].ToString().Trim();
            string Deltaxyear = Delsearchdt.Rows[i]["taxyear"].ToString().Trim();

            //Delkeyparcelid = Regex.Replace(Delkeyparcelid, @"\s", "");
            //Deltaxtype = Regex.Replace(Deltaxtype, @"\s", "");

            for (int j = 0; j < Delclientdt.Rows.Count; j++)
            {
                string Delclientparcelid = Delclientdt.Rows[j]["parcelid"].ToString().Trim();
                string DelClienttaxyear = Delclientdt.Rows[j]["taxyear"].ToString().Trim();
                string DelClienttaxtype = Delclientdt.Rows[j]["taxtype"].ToString().Trim();

                if (i == j)
                {
                    if ((Delkeyparcelid == Delclientparcelid) && (Deltaxtype == DelClienttaxtype))
                    {
                        if (Delsearchdt.Rows[i]["delinquenttaxyear"].ToString().Trim() != Delclientdt.Rows[j]["delinquenttaxyear"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyDeliquentYear = Delsearchdt.Rows[i]["delinquenttaxyear"].ToString().Trim();
                                clientDeliquentYear = Delclientdt.Rows[j]["delinquenttaxyear"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }


                        if (Delsearchdt.Rows[i]["payoffamount"].ToString().Trim() != Delclientdt.Rows[j]["payoffamount"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                Keypayoffamount = Delsearchdt.Rows[i]["payoffamount"].ToString().Trim();
                                clientpayoffamount = Delclientdt.Rows[j]["payoffamount"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Delsearchdt.Rows[i]["goodthroughdate"].ToString().Trim() != Delclientdt.Rows[j]["goodthroughdate"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                Keygoodthroughdate = Delsearchdt.Rows[i]["goodthroughdate"].ToString().Trim();
                                clientgoodthroughdate = Delclientdt.Rows[j]["goodthroughdate"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Delsearchdt.Rows[i]["duedate"].ToString().Trim() != Delclientdt.Rows[j]["duedate"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                Keyduedate = Delsearchdt.Rows[i]["duedate"].ToString().Trim();
                                clientduedate = Delclientdt.Rows[j]["duedate"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Delsearchdt.Rows[i]["notapplicable"].ToString().Trim() != Delclientdt.Rows[j]["notapplicable"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                Keynotapplicable = Delsearchdt.Rows[i]["notapplicable"].ToString().Trim();
                                clientnotapplicable = Delclientdt.Rows[j]["notapplicable"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Delsearchdt.Rows[i]["dateoftaxsale"].ToString().Trim() != Delclientdt.Rows[j]["dateoftaxsale"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                Keydateoftaxsale = Delsearchdt.Rows[i]["dateoftaxsale"].ToString().Trim();
                                clientdateoftaxsale = Delclientdt.Rows[j]["dateoftaxsale"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Delsearchdt.Rows[i]["lastdateredeem"].ToString().Trim() != Delclientdt.Rows[j]["lastdateredeem"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                Keylastdateredeem = Delsearchdt.Rows[i]["lastdateredeem"].ToString().Trim();
                                clientlastdateredeem = Delclientdt.Rows[j]["lastdateredeem"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "48" + "','" + Keylastdateredeem + "','" + clientlastdateredeem + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "48" + "','" + Keylastdateredeem + "','" + clientlastdateredeem + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "48" + "','" + Keylastdateredeem + "','" + clientDeliquentYear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "48" + "','" + Keylastdateredeem + "','" + clientlastdateredeem + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "48" + "','" + Keylastdateredeem + "','" + clientlastdateredeem + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + "48" + "','" + Keylastdateredeem + "','" + clientlastdateredeem + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "48" + "','" + Keylastdateredeem + "','" + clientlastdateredeem + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                    }
                }
            }
        }
    }

    private void Delinquentdetailscomparision1()
    {
        MySqlConnection db = new MySqlConnection(constr);

        //Deliquent Comparision
        MySqlCommand Delsearchcmd = new MySqlCommand("select ordernumber,parcelid,taxtype,taxyear,delinquenttaxyear,payoffamount,goodthroughdate,duedate,notapplicable,dateoftaxsale,lastdateredeem from tbl_search_keying_delinquent_data where  ordernumber = '" + Lblorderno.Text + "'", db);
        MySqlCommand Delclientcmd = new MySqlCommand("select ordernumber,parcelid,taxtype,taxyear,delinquenttaxyear,payoffamount,goodthroughdate,duedate,notapplicable,dateoftaxsale,lastdateredeem from tbl_client_tool_delinquent_data where ordernumber = '" + Lblorderno.Text + "'", db);

        MySqlDataAdapter Delsearchda = new MySqlDataAdapter(Delsearchcmd);
        MySqlDataAdapter Delclientda = new MySqlDataAdapter(Delclientcmd);

        DataTable Delsearchdt = new DataTable();
        DataTable Delclientdt = new DataTable();

        Delsearchda.Fill(Delsearchdt);
        Delclientda.Fill(Delclientdt);

        //Deleinquent            
        string keyDeliquentYear = "";
        string clientDeliquentYear = "";

        string Keypayoffamount = "";
        string clientpayoffamount = "";

        string Keygoodthroughdate = "";
        string clientgoodthroughdate = "";

        string Keyduedate = "";
        string clientduedate = "";

        string Keynotapplicable = "";
        string clientnotapplicable = "";

        string Keydateoftaxsale = "";
        string clientdateoftaxsale = "";

        string Keylastdateredeem = "";
        string clientlastdateredeem = "";

        string insert = "";

        for (int i = 0; i < Delsearchdt.Rows.Count; i++)
        {
            string Delkeyorderno = Delsearchdt.Rows[i]["ordernumber"].ToString().Trim();
            string Delkeyparcelid = Delsearchdt.Rows[i]["parcelid"].ToString().Trim();
            string Deltaxtype = Delsearchdt.Rows[i]["taxtype"].ToString().Trim();
            string Deltaxyear = Delsearchdt.Rows[i]["taxyear"].ToString().Trim();

            //Delkeyparcelid = Regex.Replace(Delkeyparcelid, @"\s", "");
            //Deltaxtype = Regex.Replace(Deltaxtype, @"\s", "");

            for (int j = 0; j < Delclientdt.Rows.Count; j++)
            {
                string Delclientparcelid = Delclientdt.Rows[j]["parcelid"].ToString().Trim();
                string DelClienttaxyear = Delclientdt.Rows[j]["taxyear"].ToString().Trim();
                string DelClienttaxtype = Delclientdt.Rows[j]["taxtype"].ToString().Trim();

                if (i == j)
                {
                    if ((Delkeyparcelid == Delclientparcelid) && (Deltaxtype == DelClienttaxtype))
                    {
                        if (Delsearchdt.Rows[i]["delinquenttaxyear"].ToString().Trim() != Delclientdt.Rows[j]["delinquenttaxyear"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyDeliquentYear = Delsearchdt.Rows[i]["delinquenttaxyear"].ToString().Trim();
                                clientDeliquentYear = Delclientdt.Rows[j]["delinquenttaxyear"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "42" + "','" + keyDeliquentYear + "','" + clientDeliquentYear + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }


                        if (Delsearchdt.Rows[i]["payoffamount"].ToString().Trim() != Delclientdt.Rows[j]["payoffamount"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                Keypayoffamount = Delsearchdt.Rows[i]["payoffamount"].ToString().Trim();
                                clientpayoffamount = Delclientdt.Rows[j]["payoffamount"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "43" + "','" + Keypayoffamount + "','" + clientpayoffamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Delsearchdt.Rows[i]["goodthroughdate"].ToString().Trim() != Delclientdt.Rows[j]["goodthroughdate"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                Keygoodthroughdate = Delsearchdt.Rows[i]["goodthroughdate"].ToString().Trim();
                                clientgoodthroughdate = Delclientdt.Rows[j]["goodthroughdate"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "44" + "','" + Keygoodthroughdate + "','" + clientgoodthroughdate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Delsearchdt.Rows[i]["duedate"].ToString().Trim() != Delclientdt.Rows[j]["duedate"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                Keyduedate = Delsearchdt.Rows[i]["duedate"].ToString().Trim();
                                clientduedate = Delclientdt.Rows[j]["duedate"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "45" + "','" + Keyduedate + "','" + clientduedate + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Delsearchdt.Rows[i]["notapplicable"].ToString().Trim() != Delclientdt.Rows[j]["notapplicable"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                Keynotapplicable = Delsearchdt.Rows[i]["notapplicable"].ToString().Trim();
                                clientnotapplicable = Delclientdt.Rows[j]["notapplicable"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "46" + "','" + Keynotapplicable + "','" + clientnotapplicable + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Delsearchdt.Rows[i]["dateoftaxsale"].ToString().Trim() != Delclientdt.Rows[j]["dateoftaxsale"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                Keydateoftaxsale = Delsearchdt.Rows[i]["dateoftaxsale"].ToString().Trim();
                                clientdateoftaxsale = Delclientdt.Rows[j]["dateoftaxsale"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "47" + "','" + Keydateoftaxsale + "','" + clientdateoftaxsale + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Delsearchdt.Rows[i]["lastdateredeem"].ToString().Trim() != Delclientdt.Rows[j]["lastdateredeem"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                Keylastdateredeem = Delsearchdt.Rows[i]["lastdateredeem"].ToString().Trim();
                                clientlastdateredeem = Delclientdt.Rows[j]["lastdateredeem"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "48" + "','" + Keylastdateredeem + "','" + clientlastdateredeem + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "48" + "','" + Keylastdateredeem + "','" + clientlastdateredeem + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }

                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "48" + "','" + Keylastdateredeem + "','" + clientDeliquentYear + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }
                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "48" + "','" + Keylastdateredeem + "','" + clientlastdateredeem + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != Delclientparcelid || mismatchtaxtype != DelClienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "48" + "','" + Keylastdateredeem + "','" + clientlastdateredeem + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "48" + "','" + Keylastdateredeem + "','" + clientlastdateredeem + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + Delkeyorderno + "','" + Delkeyparcelid + "','" + Deltaxtype + "','" + "48" + "','" + Keylastdateredeem + "','" + clientlastdateredeem + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                    }
                }
            }
        }
    }

    private void specialassessmentdetailscomparision()
    {
        MySqlConnection db = new MySqlConnection(constr);

        string insert = "";

        //Special Assessment Comparision
        MySqlCommand Splsearchcmd = new MySqlCommand("select ordernumber,parcelid,taxtype,taxyear,description,special_assessment_number,number_of_installment,installments_paid,amount from tbl_search_key_special_assessment_data where ordernumber = '" + Lblorderno.Text + "'", db);
        MySqlCommand Splclientcmd = new MySqlCommand("select ordernumber,parcelid,taxtype,taxyear,description,special_assessment_number,number_of_installment,installments_paid,amount from tbl_client_tool_special_assessment_data where ordernumber = '" + Lblorderno.Text + "'", db);

        MySqlDataAdapter Splda = new MySqlDataAdapter(Splsearchcmd);
        MySqlDataAdapter Splda1 = new MySqlDataAdapter(Splclientcmd);

        DataTable Splsearchdt = new DataTable();
        DataTable Splclientdt = new DataTable();

        Splda.Fill(Splsearchdt);
        Splda1.Fill(Splclientdt);

        //special assessment details
        string keydescription = "";
        string clientdescription = "";

        string keyspecial_assessment_number = "";
        string clientspecial_assessment_number = "";

        string keynumber_of_installment = "";
        string clientnumber_of_installment = "";

        string keyinstallments_paid = "";
        string clientinstallments_paid = "";

        string keyamount = "";
        string clientamount = "";

        for (int i = 0; i < Splsearchdt.Rows.Count; i++)
        {
            string specialassesorderno = Splsearchdt.Rows[i]["ordernumber"].ToString().Trim();
            string specialassessparcelid = Splsearchdt.Rows[i]["parcelid"].ToString().Trim();
            string specialassesstaxtype = Splsearchdt.Rows[i]["taxtype"].ToString().Trim();
            string specialassesstaxyear = Splsearchdt.Rows[i]["taxyear"].ToString().Trim();

            //specialassessparcelid = Regex.Replace(specialassessparcelid, @"\s", "");
            //specialassesstaxtype = Regex.Replace(specialassesstaxtype, @"\s", "");

            for (int j = 0; j < Splclientdt.Rows.Count; j++)
            {
                string specialasclientparcelid = Splclientdt.Rows[j]["parcelid"].ToString().Trim();
                string specialasclienttaxyear = Splclientdt.Rows[j]["taxyear"].ToString().Trim();
                string specialasclienttaxtype = Splclientdt.Rows[j]["taxtype"].ToString().Trim();

                if (i == j)
                {
                    if ((specialassessparcelid == specialasclientparcelid) && (specialassesstaxtype == specialasclienttaxtype))
                    {
                        if (Splsearchdt.Rows[i]["description"].ToString().Trim() != Splclientdt.Rows[j]["description"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keydescription = Splsearchdt.Rows[i]["description"].ToString().Trim();
                                clientdescription = Splclientdt.Rows[j]["description"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Splsearchdt.Rows[i]["special_assessment_number"].ToString().Trim() != Splclientdt.Rows[j]["special_assessment_number"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyspecial_assessment_number = Splsearchdt.Rows[i]["special_assessment_number"].ToString().Trim();
                                clientspecial_assessment_number = Splclientdt.Rows[j]["special_assessment_number"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Splsearchdt.Rows[i]["number_of_installment"].ToString().Trim() != Splclientdt.Rows[j]["number_of_installment"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keynumber_of_installment = Splsearchdt.Rows[i]["number_of_installment"].ToString().Trim();
                                clientnumber_of_installment = Splclientdt.Rows[j]["number_of_installment"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Splsearchdt.Rows[i]["installments_paid"].ToString().Trim() != Splclientdt.Rows[j]["installments_paid"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyinstallments_paid = Splsearchdt.Rows[i]["installments_paid"].ToString().Trim();
                                clientinstallments_paid = Splclientdt.Rows[j]["installments_paid"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Splsearchdt.Rows[i]["amount"].ToString().Trim() != Splclientdt.Rows[j]["amount"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_data1 where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyamount = Splsearchdt.Rows[i]["amount"].ToString().Trim();
                                clientamount = Splclientdt.Rows[j]["amount"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_data1 (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                    }
                }
            }
        }
    }

    private void specialassessmentdetailscomparision1()
    {
        MySqlConnection db = new MySqlConnection(constr);

        string insert = "";

        //Special Assessment Comparision
        MySqlCommand Splsearchcmd = new MySqlCommand("select ordernumber,parcelid,taxtype,taxyear,description,special_assessment_number,number_of_installment,installments_paid,amount from tbl_search_key_special_assessment_data where ordernumber = '" + Lblorderno.Text + "'", db);
        MySqlCommand Splclientcmd = new MySqlCommand("select ordernumber,parcelid,taxtype,taxyear,description,special_assessment_number,number_of_installment,installments_paid,amount from tbl_client_tool_special_assessment_data where ordernumber = '" + Lblorderno.Text + "'", db);

        MySqlDataAdapter Splda = new MySqlDataAdapter(Splsearchcmd);
        MySqlDataAdapter Splda1 = new MySqlDataAdapter(Splclientcmd);

        DataTable Splsearchdt = new DataTable();
        DataTable Splclientdt = new DataTable();

        Splda.Fill(Splsearchdt);
        Splda1.Fill(Splclientdt);

        //special assessment details
        string keydescription = "";
        string clientdescription = "";

        string keyspecial_assessment_number = "";
        string clientspecial_assessment_number = "";

        string keynumber_of_installment = "";
        string clientnumber_of_installment = "";

        string keyinstallments_paid = "";
        string clientinstallments_paid = "";

        string keyamount = "";
        string clientamount = "";

        for (int i = 0; i < Splsearchdt.Rows.Count; i++)
        {
            string specialassesorderno = Splsearchdt.Rows[i]["ordernumber"].ToString().Trim();
            string specialassessparcelid = Splsearchdt.Rows[i]["parcelid"].ToString().Trim();
            string specialassesstaxtype = Splsearchdt.Rows[i]["taxtype"].ToString().Trim();
            string specialassesstaxyear = Splsearchdt.Rows[i]["taxyear"].ToString().Trim();

            //specialassessparcelid = Regex.Replace(specialassessparcelid, @"\s", "");
            //specialassesstaxtype = Regex.Replace(specialassesstaxtype, @"\s", "");

            for (int j = 0; j < Splclientdt.Rows.Count; j++)
            {
                string specialasclientparcelid = Splclientdt.Rows[j]["parcelid"].ToString().Trim();
                string specialasclienttaxyear = Splclientdt.Rows[j]["taxyear"].ToString().Trim();
                string specialasclienttaxtype = Splclientdt.Rows[j]["taxtype"].ToString().Trim();

                if (i == j)
                {
                    if ((specialassessparcelid == specialasclientparcelid) && (specialassesstaxtype == specialasclienttaxtype))
                    {
                        if (Splsearchdt.Rows[i]["description"].ToString().Trim() != Splclientdt.Rows[j]["description"].ToString().Trim())
                        {

                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keydescription = Splsearchdt.Rows[i]["description"].ToString().Trim();
                                clientdescription = Splclientdt.Rows[j]["description"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "37" + "','" + keydescription + "','" + clientdescription + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }

                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Splsearchdt.Rows[i]["special_assessment_number"].ToString().Trim() != Splclientdt.Rows[j]["special_assessment_number"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyspecial_assessment_number = Splsearchdt.Rows[i]["special_assessment_number"].ToString().Trim();
                                clientspecial_assessment_number = Splclientdt.Rows[j]["special_assessment_number"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "38" + "','" + keyspecial_assessment_number + "','" + clientspecial_assessment_number + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Splsearchdt.Rows[i]["number_of_installment"].ToString().Trim() != Splclientdt.Rows[j]["number_of_installment"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keynumber_of_installment = Splsearchdt.Rows[i]["number_of_installment"].ToString().Trim();
                                clientnumber_of_installment = Splclientdt.Rows[j]["number_of_installment"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "39" + "','" + keynumber_of_installment + "','" + clientnumber_of_installment + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Splsearchdt.Rows[i]["installments_paid"].ToString().Trim() != Splclientdt.Rows[j]["installments_paid"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyinstallments_paid = Splsearchdt.Rows[i]["installments_paid"].ToString().Trim();
                                clientinstallments_paid = Splclientdt.Rows[j]["installments_paid"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "40" + "','" + keyinstallments_paid + "','" + clientinstallments_paid + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }

                        if (Splsearchdt.Rows[i]["amount"].ToString().Trim() != Splclientdt.Rows[j]["amount"].ToString().Trim())
                        {
                            MySqlCommand parcel_id = new MySqlCommand("select Parcel_id,TaxType from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' and Parcel_id is not null and TaxType is not null order by LastUpdate_DateTime desc limit 1", db);
                            MySqlDataAdapter parda = new MySqlDataAdapter(parcel_id);
                            DataTable dtpar = new DataTable();
                            parda.Fill(dtpar);

                            int parcel_con = dtpar.Rows.Count;

                            MySqlCommand attdetails = new MySqlCommand("select Distinct Attempt from tbl_mismatch_reports where OrderNo = '" + Lblorderno.Text + "' order by Attempt desc limit 1", db);
                            MySqlDataAdapter daatt = new MySqlDataAdapter(attdetails);
                            DataTable dtatt = new DataTable();
                            daatt.Fill(dtatt);

                            string mismatchparcelid = "";
                            string mismatchtaxtype = "";

                            if (dtpar.Rows.Count > 0)
                            {
                                mismatchparcelid = dtpar.Rows[0]["Parcel_Id"].ToString();
                                mismatchtaxtype = dtpar.Rows[0]["TaxType"].ToString();
                            }

                            if (dtatt.Rows.Count > 0)
                            {
                                dbatt = Convert.ToInt32(dtatt.Rows[0]["Attempt"].ToString());
                            }

                            try
                            {
                                keyamount = Splsearchdt.Rows[i]["amount"].ToString().Trim();
                                clientamount = Splclientdt.Rows[j]["amount"].ToString().Trim();

                                MySqlConnection db1 = new MySqlConnection(constr);
                                db1.Open();
                                if (attemptcount == 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + attempts + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                }

                                else if (attemptcount > 0)
                                {
                                    if (parcel_con == 0)
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else if ((parcel_con > 0) && (mismatchparcelid != specialasclientparcelid || mismatchtaxtype != specialasclienttaxtype))
                                    {
                                        insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                    }
                                    else
                                    {
                                        if (dbatt == noattempt)
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                        else
                                        {
                                            insert = "insert into tbl_mismatch_reports (OrderNo,Parcel_id,TaxType,Field_Id,Mismatch_Keying_Data,Mismatch_ClientTool_Data,Attempt,Updated_By,LastUpdate_DateTime) values ( '" + specialassesorderno + "','" + specialassessparcelid + "','" + specialassesstaxtype + "','" + "41" + "','" + keyamount + "','" + clientamount + "','" + noattempt + "', '" + SessionHandler.UserName + "','" + DateTime.Now.ToString("MM/dd/yyyy HH:mm:ss") + "')";
                                        }
                                    }
                                }
                                MySqlCommand cmd2 = new MySqlCommand(insert, db1);
                                int m = cmd2.ExecuteNonQuery();
                                db1.Close();
                            }
                            catch (Exception ex)
                            {

                            }
                        }
                    }
                }
            }
        }
    }

    protected void CloseButton_Click(object sender, EventArgs e)
    {
        pagedimmer.Visible = false;
        MismatchPopup.Visible = false;
    }

    protected void cancel_Click(object sender, EventArgs e)
    {
        LblUpload.Text = "";
    }

}